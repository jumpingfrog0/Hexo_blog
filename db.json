{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/minion.jpeg","path":"images/minion.jpeg","modified":0,"renderable":0},{"_id":"source/download/2016-03-26-status-bar-hidden-demo.zip","path":"download/2016-03-26-status-bar-hidden-demo.zip","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","path":"vendors/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","path":"vendors/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","path":"vendors/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","path":"vendors/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","path":"vendors/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","path":"vendors/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","path":"vendors/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"b1c3b061d8a043e82916a296850dd2a335190c1a","modified":1480615581000},{"_id":"source/404.html","hash":"75f79c7a9f1072300986dc8b56e6cca36b2b7646","modified":1457369520000},{"_id":"themes/next/.bowerrc","hash":"80e096fdc1cf912ee85dd9f7e6e77fd40cf60f10","modified":1458051994000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1458051994000},{"_id":"themes/next/.gitignore","hash":"efec790f5b7a0256763e1cc08f12c4f0aff509f6","modified":1458051994000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1458051994000},{"_id":"themes/next/.javascript_ignore","hash":"d619ee13031908cd72666e4ff652d2ea3483b1c3","modified":1458051994000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1458051994000},{"_id":"themes/next/README.en.md","hash":"565ba52b3825b85a9f05b41183caca7f18b741d4","modified":1458051994000},{"_id":"themes/next/_config.yml","hash":"39475fe064dccb9018c53a2488987996150732cc","modified":1480959327000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1458051994000},{"_id":"themes/next/bower.json","hash":"d7f8d4eb7c6ac1bb8d642112601005f93e3da49b","modified":1458051994000},{"_id":"themes/next/gulpfile.coffee","hash":"b3d53f36460119c741a98c0dc494b1c65d3ec943","modified":1458051994000},{"_id":"themes/next/package.json","hash":"bd016b54983b7e06a649ee915b2e13a60d47553e","modified":1458051994000},{"_id":"source/_posts/2016-03-26-establish-static-blog-with-hexo.md","hash":"45e9d04027aa05e8225036f29a39e8ca32346336","modified":1480962354000},{"_id":"source/_posts/2016-08-16-ios-enterprise-application-distribution.md","hash":"dee91a8258b33b6a54af9539f5be06710052f0f2","modified":1471369843000},{"_id":"source/_posts/2016-03-26-status-bar-hidden.md","hash":"9c78fee8199b7e2bed3a5417c515bbedb6d5ac91","modified":1458981042000},{"_id":"source/_posts/2016-08-17-git-go-back-2.md","hash":"2b576f5f5d2e97ca89b313a66e43e389fcad56ee","modified":1472399336000},{"_id":"source/_posts/2016-08-17-git-go-back-1.md","hash":"a8912a8df4084b9755ac20562381007ee19f3d31","modified":1472398493000},{"_id":"source/_posts/2016-12-01-custom-xcode-templetes.md","hash":"68f52417cff5c8162eccc21329288fd54ade86b1","modified":1480649705000},{"_id":"source/categories/index.md","hash":"e087ca4685324de6af83826413dcb44681b8229a","modified":1457368627000},{"_id":"source/about/index.md","hash":"01c0601da3f2953246b2853f26638a1308f5406e","modified":1457369402000},{"_id":"source/images/minion.jpeg","hash":"a368d38dc1ecace04f328ca2c6940fb77dabdfc4","modified":1457371821000},{"_id":"source/tags/index.md","hash":"eb6584b33f6175371d0693c1a9fad7ee3ae2aea3","modified":1457368420000},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1458051994000},{"_id":"themes/next/.git/config","hash":"bf7d1df65cf34d0f25a7184a58c37a09f72e4be7","modified":1458051994000},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1458051689000},{"_id":"themes/next/.git/index","hash":"ef062f282db214a187c094516a537d0fd47f24da","modified":1458051994000},{"_id":"themes/next/.git/packed-refs","hash":"2385c23a5f6bfc6c56c1a8e4489de5040265f34e","modified":1458051994000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ab257af816986cd0e53f9527a92d5934ac70ae9","modified":1458051994000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"d6047c2afeabe9a329d92eb2a03490ff181616c2","modified":1458051994000},{"_id":"themes/next/languages/de.yml","hash":"786afba25cfc98845a20d9901823ebeebcd1cbbf","modified":1458051994000},{"_id":"themes/next/languages/default.yml","hash":"9db835c0543ade5a89bc80ec5a898203227cf3d8","modified":1458051994000},{"_id":"themes/next/languages/en.yml","hash":"f03799cbdb5a33064ead080bcac4baca1f6bc5f9","modified":1458051994000},{"_id":"themes/next/languages/fr-FR.yml","hash":"1a084623c39de74301f3e92f9388a3a815a542ca","modified":1458051994000},{"_id":"themes/next/languages/ja.yml","hash":"a2c7b6301b5474aab798946fb700289df237c3cf","modified":1458051994000},{"_id":"themes/next/languages/pt.yml","hash":"ca239b39bf65c9462e59d51b12f0fe566d453197","modified":1458051994000},{"_id":"themes/next/languages/ru.yml","hash":"cc7b964a46587aea0e57b0a5269d8fd25570858e","modified":1458051994000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"bea452bc49aed171a210d09bd6cddc4e846ea8ab","modified":1458051994000},{"_id":"themes/next/languages/zh-hk.yml","hash":"519ab3d817ec3bc5bfc91159c494b6b3c170bea7","modified":1458051994000},{"_id":"themes/next/languages/zh-tw.yml","hash":"6b1f345aaefc13e6723dc8a6741b59ac05c20dfd","modified":1458051994000},{"_id":"themes/next/layout/_layout.swig","hash":"c0dc9e1e8b696e9b0cbabe23ecfa38593bc878b0","modified":1458051994000},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1458051994000},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1458051994000},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1458051994000},{"_id":"themes/next/layout/page.swig","hash":"8019d02232a6dd1a665b6a4d2daef8e5dd2f0049","modified":1458051994000},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1458051994000},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1458051994000},{"_id":"themes/next/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1458051994000},{"_id":"themes/next/test/.jshintrc","hash":"096ed6df627373edd820f24d46b8baf528dee61d","modified":1458051994000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1458051994000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1458051994000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1458051994000},{"_id":"source/download/2016-03-26-status-bar-hidden-demo.zip","hash":"1c7e7f2f0b078902bc74537d586f6441bf43108a","modified":1458980999000},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"86b9655a9ebbde13ac8dd5795eb4d5b539edab0f","modified":1458051689000},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1458051689000},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1458051689000},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"42fa41564917b44183a50c4d94bb03e1768ddad8","modified":1458051689000},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1458051689000},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1458051689000},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1458051689000},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1458051689000},{"_id":"themes/next/.git/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1458051689000},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1458051689000},{"_id":"themes/next/.git/logs/HEAD","hash":"13bf8fd4cc7cfa42e32279f71af379e379bf5ca7","modified":1458051994000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"43c3433155ccd9abcbe7dce2e6bfa1f3a66af18b","modified":1458051994000},{"_id":"themes/next/layout/_macro/post.swig","hash":"379737761f44fb71de997a73192f35b8e568ac58","modified":1458051994000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"e8e9c986ce1a0b370afd36703d49f1818492cb64","modified":1458051994000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"0ff291b272808fd471747f66b621822ed1dc8abd","modified":1458051994000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"82a9bc2ba60ce68419128ff60624bd74b15dfb78","modified":1458051994000},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1458051994000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"3003fda5a8af553451f7945f4e1ce006ca72e4c4","modified":1458051994000},{"_id":"themes/next/layout/_partials/head.swig","hash":"a7084dcef03fa0d0c97962ec9828b77c9a73592f","modified":1458051994000},{"_id":"themes/next/layout/_partials/header.swig","hash":"7739068b69f87ae641dea19c3445169ae80d5df4","modified":1458051994000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1458051994000},{"_id":"themes/next/layout/_partials/search.swig","hash":"011b9d6c9f0a2f4654908ea20b9391f9b7981271","modified":1458051994000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1458051994000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1458051994000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"21b055278a74f190571af67cfae03ae6c3fb295c","modified":1458051994000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1458051994000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"3acce36db0feb11a982c6c799aa6b6b47df2827c","modified":1458051994000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1458051994000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1458051994000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1458051994000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1458051994000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1458051994000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1458051994000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1458051994000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1458051994000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1458051994000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1458051994000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1458051994000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1458051994000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1458051994000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1458051994000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1458051994000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1458051994000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1458051994000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1458051994000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1458051994000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1458051994000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1458051994000},{"_id":"themes/next/.git/refs/heads/master","hash":"6e8354d360bf798b639d0d45731eda19668b372b","modified":1458051994000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"ff5523d5dacaa77a55a24e50e6e6530c3b98bfad","modified":1458051994000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1458051994000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1458051994000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"c07f7b2f264e5215b8ed42d67e8cef2477558364","modified":1458051994000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"7ca5cb4daa58b3504e17f3e02975e794bc634658","modified":1458051994000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1458051994000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1458051994000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"acdea5e939e148b807216ca44a6843e433ccdb52","modified":1458051994000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1458051994000},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"0a89c04055bade7baa5962f1d5aefe438d83a244","modified":1458051994000},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"907b931d775d32405d02a25b3b0a3ac03bf804d0","modified":1458051994000},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"2fc4a0d2c825a512f39c0eadd78452e90615465a","modified":1458051994000},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"1561bd0c107d725252c6d746e9ac177fc18f93bf","modified":1458051994000},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"df03220eb8526e17dc9c9f17780c2d6699367181","modified":1458051994000},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1458051994000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1458051994000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1458051994000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"4e49707c99c8bbcfa0a607dfdaff0fbb7dffd2a3","modified":1458051994000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1458051994000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"bcf8238cf842bbfc8f3ea733889bc4dacf59d3c4","modified":1458051994000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"23df0070bef4952cc0e669f20fc78a8abba9676e","modified":1458051994000},{"_id":"themes/next/source/css/_variables/default.styl","hash":"8ec3307fe42d738b1bbda4b6419d0995f5560222","modified":1458051994000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1458051994000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1458051994000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1458051994000},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1458051994000},{"_id":"themes/next/source/js/src/utils.js","hash":"cf24307d8aeb18e9bad093647c7fb50dc3d9fbe8","modified":1458051994000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1458051994000},{"_id":"themes/next/source/vendors/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1458051994000},{"_id":"themes/next/source/vendors/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1458051994000},{"_id":"themes/next/source/vendors/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1458051994000},{"_id":"themes/next/source/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1458051994000},{"_id":"themes/next/source/vendors/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1458051994000},{"_id":"themes/next/source/vendors/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1458051994000},{"_id":"themes/next/source/vendors/font-awesome/.bower.json","hash":"7da985a99674e54f514d4fd9fcd3bcea6e7e41d5","modified":1458051994000},{"_id":"themes/next/source/vendors/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1458051994000},{"_id":"themes/next/source/vendors/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1458051994000},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1458051994000},{"_id":"themes/next/source/vendors/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1458051994000},{"_id":"themes/next/source/vendors/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1458051994000},{"_id":"themes/next/source/vendors/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1458051994000},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1458051994000},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1458051994000},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1458051994000},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1458051994000},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1458051994000},{"_id":"themes/next/source/vendors/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1458051994000},{"_id":"themes/next/source/vendors/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1458051994000},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1458051994000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1458051994000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1458051994000},{"_id":"themes/next/source/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1458051994000},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"13bf8fd4cc7cfa42e32279f71af379e379bf5ca7","modified":1458051994000},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1458051994000},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"7c43d66da93cde65b473a7d6db2a86f9a42647d6","modified":1458051994000},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"44e761721e8ad787ef571a3cc57bbc12d318a2a3","modified":1458051994000},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"334176d838ee528e58468d8bc74ff3a6d3f25b2b","modified":1458051994000},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1458051994000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1458051994000},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"3491d3cebabc8a28857200db28a1be65aad6adc2","modified":1458051994000},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"fa2b7a0006b6c447fa025474f8e0af4e4e569a36","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1458051994000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5304f99581da3a31de3ecec959b7adf9002fde83","modified":1458051994000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"2e829b0a7b6cbc4318672f3eeb7b26249038132d","modified":1458051994000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1458051994000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1458051994000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"04e6c5257814c65e638ab70c53030e8dfdb3f37d","modified":1458051994000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1458051994000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1458051994000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1458051994000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1458051994000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1458051994000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"4303776991ef28f5742ca51c7dffe6f12f0acf34","modified":1458051994000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1458051994000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"6cc10d943d92eac953e6978e46d27ae55584482c","modified":1458051994000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"6ed60cc621bac096c0ed7534fa25b1a52dc571d4","modified":1458051994000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1458051994000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"c2c6c4f6434b4f94aac2af5861cd769427f0ee10","modified":1458051994000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"8aca5d9f1df157ab27e699c1b3ba9438b9e039ad","modified":1458051994000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1458051994000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"9658d09de4fcc809a29d4b706a9621adfb3090ad","modified":1458051994000},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"938d39eedc6e3d33918c1145a5bf1e79991d3fcf","modified":1458051994000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"58a036397de73d868fee16f34d246a3d863f30c2","modified":1458051994000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"d09280e5b79f3b573edb30f30c7a5f03ac640986","modified":1458051994000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1458051994000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"b28187c610bf5f05e27732f72c3486494689bbfe","modified":1458051994000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"1b10ba2d3ad0c063c418dc94a0b7e0db4b342c53","modified":1458051994000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"94f935331995bfeadf1084fb8f0665ab39fd1c8d","modified":1458051994000},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1458051994000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1458051994000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1458051994000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1458051994000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1458051994000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1458051994000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1458051994000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1458051994000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1458051994000},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1458051994000},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1458051994000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1458051994000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1458051994000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1458051994000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1458051994000},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1458051994000},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1458051994000},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1458051994000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1458051994000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1458051994000},{"_id":"themes/next/source/vendors/velocity/velocity.js","hash":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1458051994000},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"13bf8fd4cc7cfa42e32279f71af379e379bf5ca7","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"4c0be672d977ef793c72cf838f1d920f2749dda0","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"ae19721ceee5ba460e131cb2427dae3c1ff39d6f","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"c890ce7fe933abad7baf39764a01894924854e92","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"61763d236029d2a4414be499d0e65d7dfb34605b","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"23dd966324937deeccc8f5fa16a6d32e4e46243b","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4f696a2eaeee2f214adcf273eab25c62a398077a","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"3c46efd6601e268093ce6d7b1471d18501878f0d","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"fe71e9be08cb418cf68352fd6212ddd0d7150579","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"330a2ce52c5a5fefc1e85c473113a3bc58210c76","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"5c415dc8efab7c1bdeffacafa3100d1da6628b03","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"cbca4842a54950e2934b3b8f3cd940f122111aef","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"99d994bd19895a4aaa2fa8d12801ec72dd3cf118","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"4677ae612ff9c593ee17ab2ea82dbb995432d301","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"89fef1caf94caf76ca09c643b83b0b4d4e417e08","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"6533563b34241e5c73da68156aba89e880b93f53","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"12f703e5fea9d8a7ba65c8cea93a5cf5c2b78457","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"58fb7604b44e3f56d880bbbd95d0baface38c4ee","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"618f73450cf541f88a4fddc3d22898aee49d105d","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"8e66c2635d48e11de616bb29c4b1323698eebc0a","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"795d94561888d31cb7a6ff4a125596809ea69b7d","modified":1458051994000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"f7ebd428f3058ec3ecc7648788712617bea520ba","modified":1458051994000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1458051994000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1458051994000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1458051994000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1458051994000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1458051994000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1458051994000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1458051994000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1458051994000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1458051994000},{"_id":"public/404.html","hash":"3c0354767c4c38e179b59e14be0c4202e55ca25e","modified":1480962378586},{"_id":"public/categories/index.html","hash":"3b6947afabb5b40557db250e8afa2619091d30cb","modified":1480962378586},{"_id":"public/about/index.html","hash":"a54d70a5e735196155df5013a8877eb54542469f","modified":1480962378587},{"_id":"public/tags/index.html","hash":"8017fde5c610b196f7523f032347250d93b2a7a4","modified":1480962378587},{"_id":"public/archives/index.html","hash":"56266e9e4ffddb936a8b5971a85cb2ff7dc0784e","modified":1480962378587},{"_id":"public/archives/2016/index.html","hash":"5b533b61593555d1e68f3e77a287f83c2a068632","modified":1480962378587},{"_id":"public/archives/2016/03/index.html","hash":"35344e0060f7c6b1f7ba6008930a46ebe0cd362a","modified":1480962378587},{"_id":"public/archives/2016/08/index.html","hash":"04e28f3a5266486714a5009f2b146cce888da3aa","modified":1480962378587},{"_id":"public/archives/2016/12/index.html","hash":"335e82f3e74abb6336797e5392385e3bf8725353","modified":1480962378587},{"_id":"public/2016/2016-12-01-custom-xcode-templetes/index.html","hash":"49c09e20d5f4b030fd26b364f51affae6434f92e","modified":1480962378587},{"_id":"public/2016/2016-08-17-git-go-back-2/index.html","hash":"59416ff2b5d7f7aaeb84c8bc98fccbbb50d8c8af","modified":1480962378587},{"_id":"public/2016/2016-08-17-git-go-back-1/index.html","hash":"4feb0bfc5060bd65f60604b03a86f2b6f9e39f23","modified":1480962378587},{"_id":"public/2016/2016-08-16-ios-enterprise-application-distribution/index.html","hash":"49cc4c86283e5a75cf38016ad71b487c7392cf40","modified":1480962378587},{"_id":"public/2016/2016-03-26-establish-static-blog-with-hexo/index.html","hash":"e579482764b787c1daf76d7280023ad80ef27739","modified":1480962378587},{"_id":"public/2016/2016-03-26-status-bar-hidden/index.html","hash":"e86b72752e62f294546b61a2e2bdd5a0a47bd662","modified":1480962378587},{"_id":"public/index.html","hash":"1def907781ce6af50ceb1ce9807aa0376e3af962","modified":1480962378588},{"_id":"public/images/minion.jpeg","hash":"a368d38dc1ecace04f328ca2c6940fb77dabdfc4","modified":1480649823805},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1480649823805},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1480649823805},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1480649823805},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1480649823805},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1480649823805},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1480649823805},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1480649823805},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1480649823806},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1480649823806},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1480649823806},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1480649823806},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1480649823806},{"_id":"public/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1480649823806},{"_id":"public/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1480649823806},{"_id":"public/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1480649823806},{"_id":"public/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1480649823806},{"_id":"public/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1480649823806},{"_id":"public/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1480649823806},{"_id":"public/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1480649823806},{"_id":"public/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1480649823806},{"_id":"public/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1480649823806},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1480649823806},{"_id":"public/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1480649823806},{"_id":"public/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1480649824332},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1480649824332},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1480649824332},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1480649824336},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1480649824337},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1480649824337},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1480649824337},{"_id":"public/js/src/utils.js","hash":"cf24307d8aeb18e9bad093647c7fb50dc3d9fbe8","modified":1480649824337},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1480649824337},{"_id":"public/vendors/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1480649824337},{"_id":"public/vendors/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1480649824337},{"_id":"public/vendors/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1480649824337},{"_id":"public/vendors/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1480649824337},{"_id":"public/vendors/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1480649824337},{"_id":"public/vendors/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1480649824337},{"_id":"public/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1480649824337},{"_id":"public/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1480649824337},{"_id":"public/vendors/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1480649824337},{"_id":"public/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1480649824337},{"_id":"public/js/src/schemes/pisces.js","hash":"94f935331995bfeadf1084fb8f0665ab39fd1c8d","modified":1480649824337},{"_id":"public/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1480649824337},{"_id":"public/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1480649824337},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1480649824337},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1480649824337},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1480649824337},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1480649824338},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1480649824339},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1480649824340},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1480649824340},{"_id":"public/css/main.css","hash":"75e287e6160e767074118a22ca1371c2de24eccd","modified":1480649824340},{"_id":"public/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1480649824340},{"_id":"public/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1480649824340},{"_id":"public/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1480649824340},{"_id":"public/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1480649824340},{"_id":"public/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1480649824340},{"_id":"public/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1480649824340},{"_id":"public/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1480649824340},{"_id":"public/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1480649824340},{"_id":"public/vendors/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1480649824340},{"_id":"public/download/2016-03-26-status-bar-hidden-demo.zip","hash":"1c7e7f2f0b078902bc74537d586f6441bf43108a","modified":1480649824340},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1480649824341},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1480649824344},{"_id":"themes/next/.DS_Store","hash":"6eec8b12b33f5ec91562c7c59a0280dbfe0e9366","modified":1480959194000}],"Category":[],"Data":[],"Page":[{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"your site url \" homePageName=\"回到我的主页\"></script>\n\n</body>\n</html>\n","source":"404.html","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"your site url \" homePageName=\"回到我的主页\"></script>\n\n</body>\n</html>\n","date":"2016-09-29T16:34:48.000Z","updated":"2016-03-07T16:52:00.000Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"ciw78hu0o0000bg82kzjp798r","content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"your site url \" homepagename=\"回到我的主页\"></script>\n\n</body>\n</html>\n","excerpt":"","more":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"your site url \" homePageName=\"回到我的主页\"></script>\n\n</body>\n</html>\n"},{"title":"分类","date":"2016-03-07T16:35:56.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2016-03-08 00:35:56\ntype: \"categories\"\n---\n","updated":"2016-03-07T16:37:07.000Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ciw78hu760001bg8210te3939","content":"","excerpt":"","more":""},{"title":"about","date":"2016-03-07T16:50:02.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2016-03-08 00:50:02\n---\n","updated":"2016-03-07T16:50:02.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"ciw78hu7h0003bg82zupixip9","content":"","excerpt":"","more":""},{"title":"tags","date":"2016-03-07T16:31:56.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2016-03-08 00:31:56\ntype: \"tags\"\n---\n","updated":"2016-03-07T16:33:40.000Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ciw78hu8q0009bg82pqztht6p","content":"","excerpt":"","more":""}],"Post":[{"title":"使用Hexo搭建静态博客","_content":"\n## 未完待续.....\n\n### 前言\n\n作为一个有技术追求的程序员，没有一个独立域名的技术博客，还怎么在业内混（zhuang)呢(bi)？\n\n最近刚搭建完自己的静态技术博客，索性就写一篇教程来作为自己的第一篇文章了。以后会不定期更新，写些技术总结和经验总结，权当自己的学习笔记了，用来记录自己的成长之路。\n\n读大学的时候，在博客园和CSDN上发表过一些文章，始终觉得编辑的时候特别蛋疼，体验极差，完全不符合程序员的风格，一点都不 *geek* 。听说*[GitHub Pages](https://pages.github.com/)* 可以搭建静态博客，搭建好环境后， 只需要用 *markdown* 来编辑，然后运行命令行自动部署就可以了，这完全就是为程序员打造的嘛，于是我就开始折腾了。 \n\n*Github Pages* 建立的博客可以直接使用 `http://username.github.io `进行访问了，比如我的博客: [http://jumpingfrog0.github.io](http:jumpingfrog0.github.io)，当然也可以配置一级域名，这个后面会讲到。\n\n*Github Pages* 官方的搭建静态博客的方式是 *[Jekyll](https://help.github.com/articles/using-jekyll-as-a-static-site-generator-with-github-pages/)*，但是过于繁琐复杂，而程序员永远是懒惰的，总是喜欢用更简单的方式去完成一件事情，于是 *[Hexo](https://hexo.io/)* 诞生了。\n\n*Hexo* 具有很多的优点：\n\n* 比 *Jekyll* 更快的生成静态网页的速度\n* 支持 *[Markdown](http://wowubuntu.com/markdown/)* 格式\n* 一行命令自动部署\n* 强大的插件系统\n* 有很多优秀且开源的主题可供选择\n\n### 配置 Hexo\n\n#### 安装并部署\n\n安装 *Hexo* 只需要一行命令，打开终端，输入\n\n```terminal\n$ npm install hexo-cli -g\n```\n\n部署 *Hexo*，打开终端，输入\n\n```terminal\n$ hexo init blog\n$ cd blog\n$ npm install\n$ hexo server\n```\n\n这样就已经搭建好本地的 *Hexo* 博客了，所有的文件都放在 `blog` 文件夹下。\n\n目录结构如下所示\n\n\t.\n\t|--- _config.yml\n\t|--- db.json\n\t|--- public\n\t|--- source\n\t|   |--- _post\n\t|--- themes\n\n各个文件(夹)的作用如下：\n\n\t* _config.yml: 站点配置文件，用来配置各种设置\n\t* db.josn: 缓存文件\n\t* public：部署后生成的静态网页文件都放在这个目录下\n\t* source: 存放网站内容的地方\n\t* _post: 存放文章(md文件）的地方\n\t* themes: 配置主题\n\n更多详情请查看[官方介绍](https://hexo.io/docs/setup.html)\n\n打开浏览器，输入`localhost:4000`，就可以看到Hexo自动生成的默认主页 *Hello World*\n\n#### Hexo 常用命令\n\n* `hexo init [folder]` 初始化网站\n* `hexo new <title>` 新建文章，简写 `hexo n <title>`\n* `hexo generate` 生成静态文件，简写 `hexo g`\n* `hexo server` 开启本地服务器，简写 `hexo s`\n* `hexo deploy` 自动部署，简写 `hexo d`\n* `hexo clean` 清空缓存文件(`db.json`)和生成的静态文件(`public`)\n\n可以在常用命令后面加些参数\n\n* `hexo s --debug` 已debug模式启动本地服务器\n* `hexo g -d` 生成静态文件后自动部署\n\n更多命令请查看 [Commands](https://hexo.io/docs/commands.html)\n\n### 配置 Github Pages\n\n打开 *Github* ，新建一个 *repository*，命名为 `username.github.io` ，比如我的就是 `jumpingfrog0.github.io`\n\n> 注意：*repository* 的名字中的 *username* 必须为你 *github* 账号的用户名，如果不匹配，那将没法正常工作\n\n*Clone* 刚才新建的 *repository* \n\n```terminal\n$ git clone https://github.com/username/username.github.io\n```\n#### 手动部署\n\n* 运行部署命令：\n\n\t```terminal\n\t$ hexo g\n\t```\n\t\n* 把 `blog`目录的`public`文件夹下的所有文件都拷贝到\t`username.github.io` 代码仓库中\n* push到远程仓库上\n\n\t```terminal\n\t$ git add --all\n\t$ git commit -m \"Initial commit\"\n\t$ git push -u origin master\n\t```\n* 在浏览器中打开 `http://username.github.io`，就访问看到静态博客首页了\n\n#### 自动部署\n\n* 安装 `hexo-deployer-git`\n\n\t```terminal\n\t$ npm install hexo-deployer-git --save\n\t```\n\n* 修改配置(`blog`目录下的`_config.yml`)\n\n```css\ndeploy:\n\ttype: git\n  \trepository: https://github.com/username/username.github.io.git\n  \tbranch: master\n```\n\n* 打开终端，输入以下命令\n\n```terminal\n$ hexo clean\n$ hexo g -d\n```\n运行完命令后，查看 *Github* 上 `username.github.io` *repository* 的提交记录，就可以有一个新的commit。在浏览器中打开 `http://username.github.io`，查看首页的变化。\n\n### 配置主题\n\n*Hexo* 可以很轻松的配置各种主题，官方[Themes](https://hexo.io/themes/)提供了很多个人开发者贡献的开源的主题,我们可以直接拿来使用。\n\n当然，如果你想自己定制主题也可以，用js自己撸一套，请参照文档[Customization Themes](https://hexo.io/docs/themes.html)\n\n我使用的是 `NexT` 主题，[NexT](https://github.com/iissnan/hexo-theme-next) 这套主题简洁优雅且易于使用，而且其作者目前依然在维护更新中，使其更优雅。具体配置可以看 `NexT` 的[主题配置文档](http://theme-next.iissnan.com/getting-started.html)，这里不再赘述。\n\n在 *Hexo* 中有两份主要的配置文件，其名称都是 `_config.yml`。 其中，一份位于站点根目录下，主要包含 *Hexo* 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。\n\n为了描述方便，在以下说明中，将前者称为 `站点配置文件`， 后者称为 `主题配置文件`。\n\n下面帖下我自己的配置\n\n站点配置文件\n\n```css\n# Hexo Configuration\n## Docs: https://hexo.io/docs/configuration.html\n## Source: https://github.com/hexojs/hexo/\n\n# Site\ntitle: jumpingfrog0\nsubtitle:\ndescription: Know a lot about a little, know a little about a lot\nauthor: jumpingfrog0\nlanguage: zh-Hans\ntimezone:\n\n# URL\n## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'\nurl: http://jumpingfrog0.com\nroot: /\n# permalink: :year/:month/:day/:title/\npermalink: :year/:title/\npermalink_defaults:\n\n# Directory\nsource_dir: source\npublic_dir: public\ntag_dir: tags\narchive_dir: archives\ncategory_dir: categories\ncode_dir: downloads/code\ni18n_dir: :lang\nskip_render:\n\n# Writing\nnew_post_name: :title.md # File name of new posts\ndefault_layout: post\ntitlecase: false # Transform title into titlecase\nexternal_link: true # Open external links in new tab\nfilename_case: 0\nrender_drafts: false\npost_asset_folder: false\nrelative_link: false\nfuture: true\nhighlight:\n  enable: true\n  line_number: true\n  auto_detect: false\n  tab_replace:\n\n# Category & Tag\ndefault_category: uncategorized\ncategory_map:\ntag_map:\n\n# Date / Time format\n## Hexo uses Moment.js to parse and display date\n## You can customize the date format as defined in\n## http://momentjs.com/docs/#/displaying/format/\ndate_format: YYYY-MM-DD\ntime_format: HH:mm:ss\n\n# Pagination\n## Set per_page to 0 to disable pagination\nper_page: 10\npagination_dir: page\n\n# Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\ntheme: next\n\n# duoshuo\n# duoshuo_shortname: jumpingfrog0\n\n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n\ttype: git\n  \trepository: https://github.com/jumpingfrog0/jumpingfrog0.github.io.git\n  \tbranch: master\n```\n\n主题配置文件\n\n```css\n# ---------------------------------------------------------------\n# Site Information Settings\n# ---------------------------------------------------------------\n\n# Place your favicon.ico to /source directory.\nfavicon: /favicon.ico\n\n# Set default keywords (Use a comma to separate)\nkeywords: \"jumpingfrog0, Swift, iOS\"\n\n# Set rss to false to disable feed link.\n# Leave rss as empty to use site's feed link.\n# Set rss to specific value if you have burned your feed already.\nrss:\n\n# Specify the date when the site was setup\nsince: 2016\n\n# ---------------------------------------------------------------\n# Menu Settings\n# ---------------------------------------------------------------\n\n# When running hexo in a subdirectory (e.g. domain.tld/blog)\n# Remove leading slashes ( \"/archives\" -> \"archives\" )\nmenu:\n  home: /\n  #categories: /categories\n  #about: /about\n  archives: /archives\n  tags: /tags\n  about: /about\n  #commonweal: /404.html\n\n# Enable/Disable menu icons.\n# Icon Mapping:\n#   Map a menu item to a specific FontAwesome icon name.\n#   Key is the name of menu item and value is the name of FontAwsome icon.\n#   When an question mask icon presenting up means that the item has no mapping icon.\nmenu_icons:\n  enable: true\n  # Icon Mapping.\n  home: home\n  about: user\n  categories: th\n  tags: tags\n  archives: archive\n  commonweal: heartbeat\n\n# ---------------------------------------------------------------\n# Scheme Settings\n# ---------------------------------------------------------------\n\n# Schemes\n# scheme: Muse\n#scheme: Mist\nscheme: Pisces\n\n# ---------------------------------------------------------------\n# Sidebar Settings\n# ---------------------------------------------------------------\n\n# Social links\nsocial:\n  GitHub: https://github.com/jumpingfrog0\n  # twitter: https://twitter.com/your-user-name\n  微博: http://weibo.com/3290250165/profile?topnav=1&wvr=6&is_all=1\n  # douban: https://www.douban.com/people/137739388/\n  知乎: https://www.zhihu.com/people/huang-dong-hong\n  #Others:\n\n# Social Icons\nsocial_icons:\n  enable: true\n  # Icon Mappings\n  GitHub: github\n  Twitter: twitter\n  Weibo: weibo\n\n# Sidebar Avatar\n# in theme directory(source/images): /images/avatar.jpg\n# in site  directory(source/uploads): /uploads/avatar.jpg\n# default : /images/default_avatar.jpg\navatar: /images/minion.jpeg\n\n# Links title, Chinese available\nlinks_title: Links\n# links\nlinks:\n  Bing: http://bing.com\n  Objccn.io: http://objccn.io/\n\n# TOC in the Sidebar\ntoc:\n  enable: true\n\n  # Automatically add list number to toc.\n  number: true\n\n# Creative Commons 4.0 International License.\n# http://creativecommons.org/\n# Available: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero\n#creative_commons: by-nc-sa\n#creative_commons:\n\nsidebar:\n  # Sidebar Position, available value: left | right\n  position: left\n  #position: right\n\n  # Sidebar Display, available value:\n  #  - post    expand on posts automatically. Default.\n  #  - always  expand for all pages automatically\n  #  - hide    expand only when click on the sidebar toggle icon.\n  #  - remove  Totally remove sidebar including sidebar toggle icon.\n  display: post\n  #display: always\n  #display: hide\n  #display: remove\n\n# ---------------------------------------------------------------\n# Misc Theme Settings\n# ---------------------------------------------------------------\n\n# Custom Logo.\n# !!Only available for Default Scheme currently.\n# Options:\n#   enabled: [true/false] - Replace with specific image\n#   image: url-of-image   - Images's url\ncustom_logo:\n  enabled: false\n  image:\n\n# Code Highlight theme\n# Available value:\n#    normal | night | night eighties | night blue | night bright\n# https://github.com/chriskempson/tomorrow-theme\nhighlight_theme: normal\n\n# Automatically scroll page to section which is under <!-- more --> mark.\nscroll_to_more: true\n\n# Automatically Excerpt\nauto_excerpt:\n  enable: true\n  length: 150\n\n# Use Lato font\nuse_font_lato: true\n\n# ---------------------------------------------------------------\n# Third Party Services Settings\n# ---------------------------------------------------------------\n\n# MathJax Support\nmathjax:\n\n# Swiftype Search API Key\nswiftype_key: _hsnBCSxyAH__Kvfd1uL\n\n# Baidu Analytics ID\n#baidu_analytics:\n\n# Duoshuo ShortName\nduoshuo_shortname: jumpingfrog0\nduoshuo_hotartical: true\n\n# Disqus\n#disqus_shortname:\n\n# Baidu Share\n# Available value:\n#    button | slide\n#baidushare:\n##  type: button\n\n# Share\njiathis: true\n#add_this_id:\n\n# Share\nduoshuo_share: true\n\n# Google Webmaster tools verification setting\n# See: https://www.google.com/webmasters/\n#google_site_verification:\n\n# Google Analytics\n#google_analytics:\n\n# CNZZ count\n#cnzz_siteid:\n\n# Make duoshuo show UA\n# user_id must NOT be null when admin_enable is true!\n# you can visit http://dev.duoshuo.com get duoshuo user id.\nduoshuo_info:\n  ua_enable: true\n  admin_enable: false\n  user_id: 0\n  #admin_nickname: ROOT\n\n# Facebook SDK Support.\n# https://github.com/iissnan/hexo-theme-next/pull/410\nfacebook_sdk:\n  enable: false\n  app_id:       #<app_id>\n  fb_admin:     #<user_id>\n  like_button:  #true\n  webmaster:    #true\n\n# Show number of visitors to each article.\n# You can visit https://leancloud.cn get AppID and AppKey.\nleancloud_visitors:\n  enable: false\n  app_id: #<app_id>\n  app_key: #<app_key>\n\n# Tencent analytics ID\n# tencent_analytics:\n\n#! ---------------------------------------------------------------\n#! DO NOT EDIT THE FOLLOWING SETTINGS\n#! UNLESS YOU KNOW WHAT YOU ARE DOING\n#! ---------------------------------------------------------------\n\n# Motion\nuse_motion: true\n\n# Fancybox\nfancybox: true\n\n# Static files\nvendors: vendors\ncss: css\njs: js\nimages: images\n\n# Theme version\nversion: 0.5.0\n\n```\n\n### DNS 设置\n\n还未配置，等购买域名后配置了再更...","source":"_posts/2016-03-26-establish-static-blog-with-hexo.md","raw":"----\ntitle: 使用Hexo搭建静态博客\n----\n\n## 未完待续.....\n\n### 前言\n\n作为一个有技术追求的程序员，没有一个独立域名的技术博客，还怎么在业内混（zhuang)呢(bi)？\n\n最近刚搭建完自己的静态技术博客，索性就写一篇教程来作为自己的第一篇文章了。以后会不定期更新，写些技术总结和经验总结，权当自己的学习笔记了，用来记录自己的成长之路。\n\n读大学的时候，在博客园和CSDN上发表过一些文章，始终觉得编辑的时候特别蛋疼，体验极差，完全不符合程序员的风格，一点都不 *geek* 。听说*[GitHub Pages](https://pages.github.com/)* 可以搭建静态博客，搭建好环境后， 只需要用 *markdown* 来编辑，然后运行命令行自动部署就可以了，这完全就是为程序员打造的嘛，于是我就开始折腾了。 \n\n*Github Pages* 建立的博客可以直接使用 `http://username.github.io `进行访问了，比如我的博客: [http://jumpingfrog0.github.io](http:jumpingfrog0.github.io)，当然也可以配置一级域名，这个后面会讲到。\n\n*Github Pages* 官方的搭建静态博客的方式是 *[Jekyll](https://help.github.com/articles/using-jekyll-as-a-static-site-generator-with-github-pages/)*，但是过于繁琐复杂，而程序员永远是懒惰的，总是喜欢用更简单的方式去完成一件事情，于是 *[Hexo](https://hexo.io/)* 诞生了。\n\n*Hexo* 具有很多的优点：\n\n* 比 *Jekyll* 更快的生成静态网页的速度\n* 支持 *[Markdown](http://wowubuntu.com/markdown/)* 格式\n* 一行命令自动部署\n* 强大的插件系统\n* 有很多优秀且开源的主题可供选择\n\n### 配置 Hexo\n\n#### 安装并部署\n\n安装 *Hexo* 只需要一行命令，打开终端，输入\n\n```terminal\n$ npm install hexo-cli -g\n```\n\n部署 *Hexo*，打开终端，输入\n\n```terminal\n$ hexo init blog\n$ cd blog\n$ npm install\n$ hexo server\n```\n\n这样就已经搭建好本地的 *Hexo* 博客了，所有的文件都放在 `blog` 文件夹下。\n\n目录结构如下所示\n\n\t.\n\t|--- _config.yml\n\t|--- db.json\n\t|--- public\n\t|--- source\n\t|   |--- _post\n\t|--- themes\n\n各个文件(夹)的作用如下：\n\n\t* _config.yml: 站点配置文件，用来配置各种设置\n\t* db.josn: 缓存文件\n\t* public：部署后生成的静态网页文件都放在这个目录下\n\t* source: 存放网站内容的地方\n\t* _post: 存放文章(md文件）的地方\n\t* themes: 配置主题\n\n更多详情请查看[官方介绍](https://hexo.io/docs/setup.html)\n\n打开浏览器，输入`localhost:4000`，就可以看到Hexo自动生成的默认主页 *Hello World*\n\n#### Hexo 常用命令\n\n* `hexo init [folder]` 初始化网站\n* `hexo new <title>` 新建文章，简写 `hexo n <title>`\n* `hexo generate` 生成静态文件，简写 `hexo g`\n* `hexo server` 开启本地服务器，简写 `hexo s`\n* `hexo deploy` 自动部署，简写 `hexo d`\n* `hexo clean` 清空缓存文件(`db.json`)和生成的静态文件(`public`)\n\n可以在常用命令后面加些参数\n\n* `hexo s --debug` 已debug模式启动本地服务器\n* `hexo g -d` 生成静态文件后自动部署\n\n更多命令请查看 [Commands](https://hexo.io/docs/commands.html)\n\n### 配置 Github Pages\n\n打开 *Github* ，新建一个 *repository*，命名为 `username.github.io` ，比如我的就是 `jumpingfrog0.github.io`\n\n> 注意：*repository* 的名字中的 *username* 必须为你 *github* 账号的用户名，如果不匹配，那将没法正常工作\n\n*Clone* 刚才新建的 *repository* \n\n```terminal\n$ git clone https://github.com/username/username.github.io\n```\n#### 手动部署\n\n* 运行部署命令：\n\n\t```terminal\n\t$ hexo g\n\t```\n\t\n* 把 `blog`目录的`public`文件夹下的所有文件都拷贝到\t`username.github.io` 代码仓库中\n* push到远程仓库上\n\n\t```terminal\n\t$ git add --all\n\t$ git commit -m \"Initial commit\"\n\t$ git push -u origin master\n\t```\n* 在浏览器中打开 `http://username.github.io`，就访问看到静态博客首页了\n\n#### 自动部署\n\n* 安装 `hexo-deployer-git`\n\n\t```terminal\n\t$ npm install hexo-deployer-git --save\n\t```\n\n* 修改配置(`blog`目录下的`_config.yml`)\n\n```css\ndeploy:\n\ttype: git\n  \trepository: https://github.com/username/username.github.io.git\n  \tbranch: master\n```\n\n* 打开终端，输入以下命令\n\n```terminal\n$ hexo clean\n$ hexo g -d\n```\n运行完命令后，查看 *Github* 上 `username.github.io` *repository* 的提交记录，就可以有一个新的commit。在浏览器中打开 `http://username.github.io`，查看首页的变化。\n\n### 配置主题\n\n*Hexo* 可以很轻松的配置各种主题，官方[Themes](https://hexo.io/themes/)提供了很多个人开发者贡献的开源的主题,我们可以直接拿来使用。\n\n当然，如果你想自己定制主题也可以，用js自己撸一套，请参照文档[Customization Themes](https://hexo.io/docs/themes.html)\n\n我使用的是 `NexT` 主题，[NexT](https://github.com/iissnan/hexo-theme-next) 这套主题简洁优雅且易于使用，而且其作者目前依然在维护更新中，使其更优雅。具体配置可以看 `NexT` 的[主题配置文档](http://theme-next.iissnan.com/getting-started.html)，这里不再赘述。\n\n在 *Hexo* 中有两份主要的配置文件，其名称都是 `_config.yml`。 其中，一份位于站点根目录下，主要包含 *Hexo* 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。\n\n为了描述方便，在以下说明中，将前者称为 `站点配置文件`， 后者称为 `主题配置文件`。\n\n下面帖下我自己的配置\n\n站点配置文件\n\n```css\n# Hexo Configuration\n## Docs: https://hexo.io/docs/configuration.html\n## Source: https://github.com/hexojs/hexo/\n\n# Site\ntitle: jumpingfrog0\nsubtitle:\ndescription: Know a lot about a little, know a little about a lot\nauthor: jumpingfrog0\nlanguage: zh-Hans\ntimezone:\n\n# URL\n## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'\nurl: http://jumpingfrog0.com\nroot: /\n# permalink: :year/:month/:day/:title/\npermalink: :year/:title/\npermalink_defaults:\n\n# Directory\nsource_dir: source\npublic_dir: public\ntag_dir: tags\narchive_dir: archives\ncategory_dir: categories\ncode_dir: downloads/code\ni18n_dir: :lang\nskip_render:\n\n# Writing\nnew_post_name: :title.md # File name of new posts\ndefault_layout: post\ntitlecase: false # Transform title into titlecase\nexternal_link: true # Open external links in new tab\nfilename_case: 0\nrender_drafts: false\npost_asset_folder: false\nrelative_link: false\nfuture: true\nhighlight:\n  enable: true\n  line_number: true\n  auto_detect: false\n  tab_replace:\n\n# Category & Tag\ndefault_category: uncategorized\ncategory_map:\ntag_map:\n\n# Date / Time format\n## Hexo uses Moment.js to parse and display date\n## You can customize the date format as defined in\n## http://momentjs.com/docs/#/displaying/format/\ndate_format: YYYY-MM-DD\ntime_format: HH:mm:ss\n\n# Pagination\n## Set per_page to 0 to disable pagination\nper_page: 10\npagination_dir: page\n\n# Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\ntheme: next\n\n# duoshuo\n# duoshuo_shortname: jumpingfrog0\n\n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n\ttype: git\n  \trepository: https://github.com/jumpingfrog0/jumpingfrog0.github.io.git\n  \tbranch: master\n```\n\n主题配置文件\n\n```css\n# ---------------------------------------------------------------\n# Site Information Settings\n# ---------------------------------------------------------------\n\n# Place your favicon.ico to /source directory.\nfavicon: /favicon.ico\n\n# Set default keywords (Use a comma to separate)\nkeywords: \"jumpingfrog0, Swift, iOS\"\n\n# Set rss to false to disable feed link.\n# Leave rss as empty to use site's feed link.\n# Set rss to specific value if you have burned your feed already.\nrss:\n\n# Specify the date when the site was setup\nsince: 2016\n\n# ---------------------------------------------------------------\n# Menu Settings\n# ---------------------------------------------------------------\n\n# When running hexo in a subdirectory (e.g. domain.tld/blog)\n# Remove leading slashes ( \"/archives\" -> \"archives\" )\nmenu:\n  home: /\n  #categories: /categories\n  #about: /about\n  archives: /archives\n  tags: /tags\n  about: /about\n  #commonweal: /404.html\n\n# Enable/Disable menu icons.\n# Icon Mapping:\n#   Map a menu item to a specific FontAwesome icon name.\n#   Key is the name of menu item and value is the name of FontAwsome icon.\n#   When an question mask icon presenting up means that the item has no mapping icon.\nmenu_icons:\n  enable: true\n  # Icon Mapping.\n  home: home\n  about: user\n  categories: th\n  tags: tags\n  archives: archive\n  commonweal: heartbeat\n\n# ---------------------------------------------------------------\n# Scheme Settings\n# ---------------------------------------------------------------\n\n# Schemes\n# scheme: Muse\n#scheme: Mist\nscheme: Pisces\n\n# ---------------------------------------------------------------\n# Sidebar Settings\n# ---------------------------------------------------------------\n\n# Social links\nsocial:\n  GitHub: https://github.com/jumpingfrog0\n  # twitter: https://twitter.com/your-user-name\n  微博: http://weibo.com/3290250165/profile?topnav=1&wvr=6&is_all=1\n  # douban: https://www.douban.com/people/137739388/\n  知乎: https://www.zhihu.com/people/huang-dong-hong\n  #Others:\n\n# Social Icons\nsocial_icons:\n  enable: true\n  # Icon Mappings\n  GitHub: github\n  Twitter: twitter\n  Weibo: weibo\n\n# Sidebar Avatar\n# in theme directory(source/images): /images/avatar.jpg\n# in site  directory(source/uploads): /uploads/avatar.jpg\n# default : /images/default_avatar.jpg\navatar: /images/minion.jpeg\n\n# Links title, Chinese available\nlinks_title: Links\n# links\nlinks:\n  Bing: http://bing.com\n  Objccn.io: http://objccn.io/\n\n# TOC in the Sidebar\ntoc:\n  enable: true\n\n  # Automatically add list number to toc.\n  number: true\n\n# Creative Commons 4.0 International License.\n# http://creativecommons.org/\n# Available: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero\n#creative_commons: by-nc-sa\n#creative_commons:\n\nsidebar:\n  # Sidebar Position, available value: left | right\n  position: left\n  #position: right\n\n  # Sidebar Display, available value:\n  #  - post    expand on posts automatically. Default.\n  #  - always  expand for all pages automatically\n  #  - hide    expand only when click on the sidebar toggle icon.\n  #  - remove  Totally remove sidebar including sidebar toggle icon.\n  display: post\n  #display: always\n  #display: hide\n  #display: remove\n\n# ---------------------------------------------------------------\n# Misc Theme Settings\n# ---------------------------------------------------------------\n\n# Custom Logo.\n# !!Only available for Default Scheme currently.\n# Options:\n#   enabled: [true/false] - Replace with specific image\n#   image: url-of-image   - Images's url\ncustom_logo:\n  enabled: false\n  image:\n\n# Code Highlight theme\n# Available value:\n#    normal | night | night eighties | night blue | night bright\n# https://github.com/chriskempson/tomorrow-theme\nhighlight_theme: normal\n\n# Automatically scroll page to section which is under <!-- more --> mark.\nscroll_to_more: true\n\n# Automatically Excerpt\nauto_excerpt:\n  enable: true\n  length: 150\n\n# Use Lato font\nuse_font_lato: true\n\n# ---------------------------------------------------------------\n# Third Party Services Settings\n# ---------------------------------------------------------------\n\n# MathJax Support\nmathjax:\n\n# Swiftype Search API Key\nswiftype_key: _hsnBCSxyAH__Kvfd1uL\n\n# Baidu Analytics ID\n#baidu_analytics:\n\n# Duoshuo ShortName\nduoshuo_shortname: jumpingfrog0\nduoshuo_hotartical: true\n\n# Disqus\n#disqus_shortname:\n\n# Baidu Share\n# Available value:\n#    button | slide\n#baidushare:\n##  type: button\n\n# Share\njiathis: true\n#add_this_id:\n\n# Share\nduoshuo_share: true\n\n# Google Webmaster tools verification setting\n# See: https://www.google.com/webmasters/\n#google_site_verification:\n\n# Google Analytics\n#google_analytics:\n\n# CNZZ count\n#cnzz_siteid:\n\n# Make duoshuo show UA\n# user_id must NOT be null when admin_enable is true!\n# you can visit http://dev.duoshuo.com get duoshuo user id.\nduoshuo_info:\n  ua_enable: true\n  admin_enable: false\n  user_id: 0\n  #admin_nickname: ROOT\n\n# Facebook SDK Support.\n# https://github.com/iissnan/hexo-theme-next/pull/410\nfacebook_sdk:\n  enable: false\n  app_id:       #<app_id>\n  fb_admin:     #<user_id>\n  like_button:  #true\n  webmaster:    #true\n\n# Show number of visitors to each article.\n# You can visit https://leancloud.cn get AppID and AppKey.\nleancloud_visitors:\n  enable: false\n  app_id: #<app_id>\n  app_key: #<app_key>\n\n# Tencent analytics ID\n# tencent_analytics:\n\n#! ---------------------------------------------------------------\n#! DO NOT EDIT THE FOLLOWING SETTINGS\n#! UNLESS YOU KNOW WHAT YOU ARE DOING\n#! ---------------------------------------------------------------\n\n# Motion\nuse_motion: true\n\n# Fancybox\nfancybox: true\n\n# Static files\nvendors: vendors\ncss: css\njs: js\nimages: images\n\n# Theme version\nversion: 0.5.0\n\n```\n\n### DNS 设置\n\n还未配置，等购买域名后配置了再更...","slug":"2016-03-26-establish-static-blog-with-hexo","published":1,"date":"2016-03-26T16:53:59.000Z","updated":"2016-12-05T18:25:54.000Z","_id":"ciw78hu780002bg82lekkcpqi","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"未完待续…\"><a href=\"#未完待续…\" class=\"headerlink\" title=\"未完待续…..\"></a>未完待续…..</h2><h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>作为一个有技术追求的程序员，没有一个独立域名的技术博客，还怎么在业内混（zhuang)呢(bi)？</p>\n<p>最近刚搭建完自己的静态技术博客，索性就写一篇教程来作为自己的第一篇文章了。以后会不定期更新，写些技术总结和经验总结，权当自己的学习笔记了，用来记录自己的成长之路。</p>\n<p>读大学的时候，在博客园和CSDN上发表过一些文章，始终觉得编辑的时候特别蛋疼，体验极差，完全不符合程序员的风格，一点都不 <em>geek</em> 。听说<em><a href=\"https://pages.github.com/\" target=\"_blank\" rel=\"external\">GitHub Pages</a></em> 可以搭建静态博客，搭建好环境后， 只需要用 <em>markdown</em> 来编辑，然后运行命令行自动部署就可以了，这完全就是为程序员打造的嘛，于是我就开始折腾了。 </p>\n<p><em>Github Pages</em> 建立的博客可以直接使用 <code>http://username.github.io</code>进行访问了，比如我的博客: <a href=\"http:jumpingfrog0.github.io\" target=\"_blank\" rel=\"external\">http://jumpingfrog0.github.io</a>，当然也可以配置一级域名，这个后面会讲到。</p>\n<p><em>Github Pages</em> 官方的搭建静态博客的方式是 <em><a href=\"https://help.github.com/articles/using-jekyll-as-a-static-site-generator-with-github-pages/\" target=\"_blank\" rel=\"external\">Jekyll</a></em>，但是过于繁琐复杂，而程序员永远是懒惰的，总是喜欢用更简单的方式去完成一件事情，于是 <em><a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a></em> 诞生了。</p>\n<p><em>Hexo</em> 具有很多的优点：</p>\n<ul>\n<li>比 <em>Jekyll</em> 更快的生成静态网页的速度</li>\n<li>支持 <em><a href=\"http://wowubuntu.com/markdown/\" target=\"_blank\" rel=\"external\">Markdown</a></em> 格式</li>\n<li>一行命令自动部署</li>\n<li>强大的插件系统</li>\n<li>有很多优秀且开源的主题可供选择</li>\n</ul>\n<h3 id=\"配置-Hexo\"><a href=\"#配置-Hexo\" class=\"headerlink\" title=\"配置 Hexo\"></a>配置 Hexo</h3><h4 id=\"安装并部署\"><a href=\"#安装并部署\" class=\"headerlink\" title=\"安装并部署\"></a>安装并部署</h4><p>安装 <em>Hexo</em> 只需要一行命令，打开终端，输入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-cli -g</div></pre></td></tr></table></figure>\n<p>部署 <em>Hexo</em>，打开终端，输入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo init blog</div><div class=\"line\">$ cd blog</div><div class=\"line\">$ npm install</div><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>这样就已经搭建好本地的 <em>Hexo</em> 博客了，所有的文件都放在 <code>blog</code> 文件夹下。</p>\n<p>目录结构如下所示</p>\n<pre><code>.\n|--- _config.yml\n|--- db.json\n|--- public\n|--- source\n|   |--- _post\n|--- themes\n</code></pre><p>各个文件(夹)的作用如下：</p>\n<pre><code>* _config.yml: 站点配置文件，用来配置各种设置\n* db.josn: 缓存文件\n* public：部署后生成的静态网页文件都放在这个目录下\n* source: 存放网站内容的地方\n* _post: 存放文章(md文件）的地方\n* themes: 配置主题\n</code></pre><p>更多详情请查看<a href=\"https://hexo.io/docs/setup.html\" target=\"_blank\" rel=\"external\">官方介绍</a></p>\n<p>打开浏览器，输入<code>localhost:4000</code>，就可以看到Hexo自动生成的默认主页 <em>Hello World</em></p>\n<h4 id=\"Hexo-常用命令\"><a href=\"#Hexo-常用命令\" class=\"headerlink\" title=\"Hexo 常用命令\"></a>Hexo 常用命令</h4><ul>\n<li><code>hexo init [folder]</code> 初始化网站</li>\n<li><code>hexo new &lt;title&gt;</code> 新建文章，简写 <code>hexo n &lt;title&gt;</code></li>\n<li><code>hexo generate</code> 生成静态文件，简写 <code>hexo g</code></li>\n<li><code>hexo server</code> 开启本地服务器，简写 <code>hexo s</code></li>\n<li><code>hexo deploy</code> 自动部署，简写 <code>hexo d</code></li>\n<li><code>hexo clean</code> 清空缓存文件(<code>db.json</code>)和生成的静态文件(<code>public</code>)</li>\n</ul>\n<p>可以在常用命令后面加些参数</p>\n<ul>\n<li><code>hexo s --debug</code> 已debug模式启动本地服务器</li>\n<li><code>hexo g -d</code> 生成静态文件后自动部署</li>\n</ul>\n<p>更多命令请查看 <a href=\"https://hexo.io/docs/commands.html\" target=\"_blank\" rel=\"external\">Commands</a></p>\n<h3 id=\"配置-Github-Pages\"><a href=\"#配置-Github-Pages\" class=\"headerlink\" title=\"配置 Github Pages\"></a>配置 Github Pages</h3><p>打开 <em>Github</em> ，新建一个 <em>repository</em>，命名为 <code>username.github.io</code> ，比如我的就是 <code>jumpingfrog0.github.io</code></p>\n<blockquote>\n<p>注意：<em>repository</em> 的名字中的 <em>username</em> 必须为你 <em>github</em> 账号的用户名，如果不匹配，那将没法正常工作</p>\n</blockquote>\n<p><em>Clone</em> 刚才新建的 <em>repository</em> </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git clone https://github.com/username/username.github.io</div></pre></td></tr></table></figure>\n<h4 id=\"手动部署\"><a href=\"#手动部署\" class=\"headerlink\" title=\"手动部署\"></a>手动部署</h4><ul>\n<li><p>运行部署命令：</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo g</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li>把 <code>blog</code>目录的<code>public</code>文件夹下的所有文件都拷贝到    <code>username.github.io</code> 代码仓库中</li>\n<li><p>push到远程仓库上</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git add --all</div><div class=\"line\">$ git commit -m &quot;Initial commit&quot;</div><div class=\"line\">$ git push -u origin master</div></pre></td></tr></table></figure>\n</li>\n<li><p>在浏览器中打开 <code>http://username.github.io</code>，就访问看到静态博客首页了</p>\n</li>\n</ul>\n<h4 id=\"自动部署\"><a href=\"#自动部署\" class=\"headerlink\" title=\"自动部署\"></a>自动部署</h4><ul>\n<li><p>安装 <code>hexo-deployer-git</code></p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-deployer-git --save</div></pre></td></tr></table></figure>\n</li>\n<li><p>修改配置(<code>blog</code>目录下的<code>_config.yml</code>)</p>\n</li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">deploy:</div><div class=\"line\">\ttype: git</div><div class=\"line\">  \trepository: https://github.com/username/username.github.io.git</div><div class=\"line\">  \tbranch: master</div></pre></td></tr></table></figure>\n<ul>\n<li>打开终端，输入以下命令</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo clean</div><div class=\"line\">$ hexo g -d</div></pre></td></tr></table></figure>\n<p>运行完命令后，查看 <em>Github</em> 上 <code>username.github.io</code> <em>repository</em> 的提交记录，就可以有一个新的commit。在浏览器中打开 <code>http://username.github.io</code>，查看首页的变化。</p>\n<h3 id=\"配置主题\"><a href=\"#配置主题\" class=\"headerlink\" title=\"配置主题\"></a>配置主题</h3><p><em>Hexo</em> 可以很轻松的配置各种主题，官方<a href=\"https://hexo.io/themes/\" target=\"_blank\" rel=\"external\">Themes</a>提供了很多个人开发者贡献的开源的主题,我们可以直接拿来使用。</p>\n<p>当然，如果你想自己定制主题也可以，用js自己撸一套，请参照文档<a href=\"https://hexo.io/docs/themes.html\" target=\"_blank\" rel=\"external\">Customization Themes</a></p>\n<p>我使用的是 <code>NexT</code> 主题，<a href=\"https://github.com/iissnan/hexo-theme-next\" target=\"_blank\" rel=\"external\">NexT</a> 这套主题简洁优雅且易于使用，而且其作者目前依然在维护更新中，使其更优雅。具体配置可以看 <code>NexT</code> 的<a href=\"http://theme-next.iissnan.com/getting-started.html\" target=\"_blank\" rel=\"external\">主题配置文档</a>，这里不再赘述。</p>\n<p>在 <em>Hexo</em> 中有两份主要的配置文件，其名称都是 <code>_config.yml</code>。 其中，一份位于站点根目录下，主要包含 <em>Hexo</em> 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。</p>\n<p>为了描述方便，在以下说明中，将前者称为 <code>站点配置文件</code>， 后者称为 <code>主题配置文件</code>。</p>\n<p>下面帖下我自己的配置</p>\n<p>站点配置文件</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Hexo Configuration</div><div class=\"line\">## Docs: https://hexo.io/docs/configuration.html</div><div class=\"line\">## Source: https://github.com/hexojs/hexo/</div><div class=\"line\"></div><div class=\"line\"># Site</div><div class=\"line\">title: jumpingfrog0</div><div class=\"line\">subtitle:</div><div class=\"line\">description: Know a lot about a little, know a little about a lot</div><div class=\"line\">author: jumpingfrog0</div><div class=\"line\">language: zh-Hans</div><div class=\"line\">timezone:</div><div class=\"line\"></div><div class=\"line\"># URL</div><div class=\"line\">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</div><div class=\"line\">url: http://jumpingfrog0.com</div><div class=\"line\">root: /</div><div class=\"line\"># permalink: :year/:month/:day/:title/</div><div class=\"line\">permalink: :year/:title/</div><div class=\"line\">permalink_defaults:</div><div class=\"line\"></div><div class=\"line\"># Directory</div><div class=\"line\">source_dir: source</div><div class=\"line\">public_dir: public</div><div class=\"line\">tag_dir: tags</div><div class=\"line\">archive_dir: archives</div><div class=\"line\">category_dir: categories</div><div class=\"line\">code_dir: downloads/code</div><div class=\"line\">i18n_dir: :lang</div><div class=\"line\">skip_render:</div><div class=\"line\"></div><div class=\"line\"># Writing</div><div class=\"line\">new_post_name: :title.md # File name of new posts</div><div class=\"line\">default_layout: post</div><div class=\"line\">titlecase: false # Transform title into titlecase</div><div class=\"line\">external_link: true # Open external links in new tab</div><div class=\"line\">filename_case: 0</div><div class=\"line\">render_drafts: false</div><div class=\"line\">post_asset_folder: false</div><div class=\"line\">relative_link: false</div><div class=\"line\">future: true</div><div class=\"line\">highlight:</div><div class=\"line\">  enable: true</div><div class=\"line\">  line_number: true</div><div class=\"line\">  auto_detect: false</div><div class=\"line\">  tab_replace:</div><div class=\"line\"></div><div class=\"line\"># Category &amp; Tag</div><div class=\"line\">default_category: uncategorized</div><div class=\"line\">category_map:</div><div class=\"line\">tag_map:</div><div class=\"line\"></div><div class=\"line\"># Date / Time format</div><div class=\"line\">## Hexo uses Moment.js to parse and display date</div><div class=\"line\">## You can customize the date format as defined in</div><div class=\"line\">## http://momentjs.com/docs/#/displaying/format/</div><div class=\"line\">date_format: YYYY-MM-DD</div><div class=\"line\">time_format: HH:mm:ss</div><div class=\"line\"></div><div class=\"line\"># Pagination</div><div class=\"line\">## Set per_page to 0 to disable pagination</div><div class=\"line\">per_page: 10</div><div class=\"line\">pagination_dir: page</div><div class=\"line\"></div><div class=\"line\"># Extensions</div><div class=\"line\">## Plugins: https://hexo.io/plugins/</div><div class=\"line\">## Themes: https://hexo.io/themes/</div><div class=\"line\">theme: next</div><div class=\"line\"></div><div class=\"line\"># duoshuo</div><div class=\"line\"># duoshuo_shortname: jumpingfrog0</div><div class=\"line\"></div><div class=\"line\"># Deployment</div><div class=\"line\">## Docs: https://hexo.io/docs/deployment.html</div><div class=\"line\">deploy:</div><div class=\"line\">\ttype: git</div><div class=\"line\">  \trepository: https://github.com/jumpingfrog0/jumpingfrog0.github.io.git</div><div class=\"line\">  \tbranch: master</div></pre></td></tr></table></figure>\n<p>主题配置文件</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div></pre></td><td class=\"code\"><pre><div class=\"line\"># ---------------------------------------------------------------</div><div class=\"line\"># Site Information Settings</div><div class=\"line\"># ---------------------------------------------------------------</div><div class=\"line\"></div><div class=\"line\"># Place your favicon.ico to /source directory.</div><div class=\"line\">favicon: /favicon.ico</div><div class=\"line\"></div><div class=\"line\"># Set default keywords (Use a comma to separate)</div><div class=\"line\">keywords: \"jumpingfrog0, Swift, iOS\"</div><div class=\"line\"></div><div class=\"line\"># Set rss to false to disable feed link.</div><div class=\"line\"># Leave rss as empty to use site's feed link.</div><div class=\"line\"># Set rss to specific value if you have burned your feed already.</div><div class=\"line\">rss:</div><div class=\"line\"></div><div class=\"line\"># Specify the date when the site was setup</div><div class=\"line\">since: 2016</div><div class=\"line\"></div><div class=\"line\"># ---------------------------------------------------------------</div><div class=\"line\"># Menu Settings</div><div class=\"line\"># ---------------------------------------------------------------</div><div class=\"line\"></div><div class=\"line\"># When running hexo in a subdirectory (e.g. domain.tld/blog)</div><div class=\"line\"># Remove leading slashes ( \"/archives\" -&gt; \"archives\" )</div><div class=\"line\">menu:</div><div class=\"line\">  home: /</div><div class=\"line\">  #categories: /categories</div><div class=\"line\">  #about: /about</div><div class=\"line\">  archives: /archives</div><div class=\"line\">  tags: /tags</div><div class=\"line\">  about: /about</div><div class=\"line\">  #commonweal: /404.html</div><div class=\"line\"></div><div class=\"line\"># Enable/Disable menu icons.</div><div class=\"line\"># Icon Mapping:</div><div class=\"line\">#   Map a menu item to a specific FontAwesome icon name.</div><div class=\"line\">#   Key is the name of menu item and value is the name of FontAwsome icon.</div><div class=\"line\">#   When an question mask icon presenting up means that the item has no mapping icon.</div><div class=\"line\">menu_icons:</div><div class=\"line\">  enable: true</div><div class=\"line\">  # Icon Mapping.</div><div class=\"line\">  home: home</div><div class=\"line\">  about: user</div><div class=\"line\">  categories: th</div><div class=\"line\">  tags: tags</div><div class=\"line\">  archives: archive</div><div class=\"line\">  commonweal: heartbeat</div><div class=\"line\"></div><div class=\"line\"># ---------------------------------------------------------------</div><div class=\"line\"># Scheme Settings</div><div class=\"line\"># ---------------------------------------------------------------</div><div class=\"line\"></div><div class=\"line\"># Schemes</div><div class=\"line\"># scheme: Muse</div><div class=\"line\">#scheme: Mist</div><div class=\"line\">scheme: Pisces</div><div class=\"line\"></div><div class=\"line\"># ---------------------------------------------------------------</div><div class=\"line\"># Sidebar Settings</div><div class=\"line\"># ---------------------------------------------------------------</div><div class=\"line\"></div><div class=\"line\"># Social links</div><div class=\"line\">social:</div><div class=\"line\">  GitHub: https://github.com/jumpingfrog0</div><div class=\"line\">  # twitter: https://twitter.com/your-user-name</div><div class=\"line\">  微博: http://weibo.com/3290250165/profile?topnav=1&amp;wvr=6&amp;is_all=1</div><div class=\"line\">  # douban: https://www.douban.com/people/137739388/</div><div class=\"line\">  知乎: https://www.zhihu.com/people/huang-dong-hong</div><div class=\"line\">  #Others:</div><div class=\"line\"></div><div class=\"line\"># Social Icons</div><div class=\"line\">social_icons:</div><div class=\"line\">  enable: true</div><div class=\"line\">  # Icon Mappings</div><div class=\"line\">  GitHub: github</div><div class=\"line\">  Twitter: twitter</div><div class=\"line\">  Weibo: weibo</div><div class=\"line\"></div><div class=\"line\"># Sidebar Avatar</div><div class=\"line\"># in theme directory(source/images): /images/avatar.jpg</div><div class=\"line\"># in site  directory(source/uploads): /uploads/avatar.jpg</div><div class=\"line\"># default : /images/default_avatar.jpg</div><div class=\"line\">avatar: /images/minion.jpeg</div><div class=\"line\"></div><div class=\"line\"># Links title, Chinese available</div><div class=\"line\">links_title: Links</div><div class=\"line\"># links</div><div class=\"line\">links:</div><div class=\"line\">  Bing: http://bing.com</div><div class=\"line\">  Objccn.io: http://objccn.io/</div><div class=\"line\"></div><div class=\"line\"># TOC in the Sidebar</div><div class=\"line\">toc:</div><div class=\"line\">  enable: true</div><div class=\"line\"></div><div class=\"line\">  # Automatically add list number to toc.</div><div class=\"line\">  number: true</div><div class=\"line\"></div><div class=\"line\"># Creative Commons 4.0 International License.</div><div class=\"line\"># http://creativecommons.org/</div><div class=\"line\"># Available: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero</div><div class=\"line\">#creative_commons: by-nc-sa</div><div class=\"line\">#creative_commons:</div><div class=\"line\"></div><div class=\"line\">sidebar:</div><div class=\"line\">  # Sidebar Position, available value: left | right</div><div class=\"line\">  position: left</div><div class=\"line\">  #position: right</div><div class=\"line\"></div><div class=\"line\">  # Sidebar Display, available value:</div><div class=\"line\">  #  - post    expand on posts automatically. Default.</div><div class=\"line\">  #  - always  expand for all pages automatically</div><div class=\"line\">  #  - hide    expand only when click on the sidebar toggle icon.</div><div class=\"line\">  #  - remove  Totally remove sidebar including sidebar toggle icon.</div><div class=\"line\">  display: post</div><div class=\"line\">  #display: always</div><div class=\"line\">  #display: hide</div><div class=\"line\">  #display: remove</div><div class=\"line\"></div><div class=\"line\"># ---------------------------------------------------------------</div><div class=\"line\"># Misc Theme Settings</div><div class=\"line\"># ---------------------------------------------------------------</div><div class=\"line\"></div><div class=\"line\"># Custom Logo.</div><div class=\"line\"># !!Only available for Default Scheme currently.</div><div class=\"line\"># Options:</div><div class=\"line\">#   enabled: [true/false] - Replace with specific image</div><div class=\"line\">#   image: url-of-image   - Images's url</div><div class=\"line\">custom_logo:</div><div class=\"line\">  enabled: false</div><div class=\"line\">  image:</div><div class=\"line\"></div><div class=\"line\"># Code Highlight theme</div><div class=\"line\"># Available value:</div><div class=\"line\">#    normal | night | night eighties | night blue | night bright</div><div class=\"line\"># https://github.com/chriskempson/tomorrow-theme</div><div class=\"line\">highlight_theme: normal</div><div class=\"line\"></div><div class=\"line\"># Automatically scroll page to section which is under &lt;!-- more --&gt; mark.</div><div class=\"line\">scroll_to_more: true</div><div class=\"line\"></div><div class=\"line\"># Automatically Excerpt</div><div class=\"line\">auto_excerpt:</div><div class=\"line\">  enable: true</div><div class=\"line\">  length: 150</div><div class=\"line\"></div><div class=\"line\"># Use Lato font</div><div class=\"line\">use_font_lato: true</div><div class=\"line\"></div><div class=\"line\"># ---------------------------------------------------------------</div><div class=\"line\"># Third Party Services Settings</div><div class=\"line\"># ---------------------------------------------------------------</div><div class=\"line\"></div><div class=\"line\"># MathJax Support</div><div class=\"line\">mathjax:</div><div class=\"line\"></div><div class=\"line\"># Swiftype Search API Key</div><div class=\"line\">swiftype_key: _hsnBCSxyAH__Kvfd1uL</div><div class=\"line\"></div><div class=\"line\"># Baidu Analytics ID</div><div class=\"line\">#baidu_analytics:</div><div class=\"line\"></div><div class=\"line\"># Duoshuo ShortName</div><div class=\"line\">duoshuo_shortname: jumpingfrog0</div><div class=\"line\">duoshuo_hotartical: true</div><div class=\"line\"></div><div class=\"line\"># Disqus</div><div class=\"line\">#disqus_shortname:</div><div class=\"line\"></div><div class=\"line\"># Baidu Share</div><div class=\"line\"># Available value:</div><div class=\"line\">#    button | slide</div><div class=\"line\">#baidushare:</div><div class=\"line\">##  type: button</div><div class=\"line\"></div><div class=\"line\"># Share</div><div class=\"line\">jiathis: true</div><div class=\"line\">#add_this_id:</div><div class=\"line\"></div><div class=\"line\"># Share</div><div class=\"line\">duoshuo_share: true</div><div class=\"line\"></div><div class=\"line\"># Google Webmaster tools verification setting</div><div class=\"line\"># See: https://www.google.com/webmasters/</div><div class=\"line\">#google_site_verification:</div><div class=\"line\"></div><div class=\"line\"># Google Analytics</div><div class=\"line\">#google_analytics:</div><div class=\"line\"></div><div class=\"line\"># CNZZ count</div><div class=\"line\">#cnzz_siteid:</div><div class=\"line\"></div><div class=\"line\"># Make duoshuo show UA</div><div class=\"line\"># user_id must NOT be null when admin_enable is true!</div><div class=\"line\"># you can visit http://dev.duoshuo.com get duoshuo user id.</div><div class=\"line\">duoshuo_info:</div><div class=\"line\">  ua_enable: true</div><div class=\"line\">  admin_enable: false</div><div class=\"line\">  user_id: 0</div><div class=\"line\">  #admin_nickname: ROOT</div><div class=\"line\"></div><div class=\"line\"># Facebook SDK Support.</div><div class=\"line\"># https://github.com/iissnan/hexo-theme-next/pull/410</div><div class=\"line\">facebook_sdk:</div><div class=\"line\">  enable: false</div><div class=\"line\">  app_id:       #&lt;app_id&gt;</div><div class=\"line\">  fb_admin:     #&lt;user_id&gt;</div><div class=\"line\">  like_button:  #true</div><div class=\"line\">  webmaster:    #true</div><div class=\"line\"></div><div class=\"line\"># Show number of visitors to each article.</div><div class=\"line\"># You can visit https://leancloud.cn get AppID and AppKey.</div><div class=\"line\">leancloud_visitors:</div><div class=\"line\">  enable: false</div><div class=\"line\">  app_id: #&lt;app_id&gt;</div><div class=\"line\">  app_key: #&lt;app_key&gt;</div><div class=\"line\"></div><div class=\"line\"># Tencent analytics ID</div><div class=\"line\"># tencent_analytics:</div><div class=\"line\"></div><div class=\"line\">#! ---------------------------------------------------------------</div><div class=\"line\">#! DO NOT EDIT THE FOLLOWING SETTINGS</div><div class=\"line\">#! UNLESS YOU KNOW WHAT YOU ARE DOING</div><div class=\"line\">#! ---------------------------------------------------------------</div><div class=\"line\"></div><div class=\"line\"># Motion</div><div class=\"line\">use_motion: true</div><div class=\"line\"></div><div class=\"line\"># Fancybox</div><div class=\"line\">fancybox: true</div><div class=\"line\"></div><div class=\"line\"># Static files</div><div class=\"line\">vendors: vendors</div><div class=\"line\">css: css</div><div class=\"line\">js: js</div><div class=\"line\">images: images</div><div class=\"line\"></div><div class=\"line\"># Theme version</div><div class=\"line\">version: 0.5.0</div></pre></td></tr></table></figure>\n<h3 id=\"DNS-设置\"><a href=\"#DNS-设置\" class=\"headerlink\" title=\"DNS 设置\"></a>DNS 设置</h3><p>还未配置，等购买域名后配置了再更…</p>\n","excerpt":"","more":"<h2 id=\"未完待续…\"><a href=\"#未完待续…\" class=\"headerlink\" title=\"未完待续…..\"></a>未完待续…..</h2><h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>作为一个有技术追求的程序员，没有一个独立域名的技术博客，还怎么在业内混（zhuang)呢(bi)？</p>\n<p>最近刚搭建完自己的静态技术博客，索性就写一篇教程来作为自己的第一篇文章了。以后会不定期更新，写些技术总结和经验总结，权当自己的学习笔记了，用来记录自己的成长之路。</p>\n<p>读大学的时候，在博客园和CSDN上发表过一些文章，始终觉得编辑的时候特别蛋疼，体验极差，完全不符合程序员的风格，一点都不 <em>geek</em> 。听说<em><a href=\"https://pages.github.com/\">GitHub Pages</a></em> 可以搭建静态博客，搭建好环境后， 只需要用 <em>markdown</em> 来编辑，然后运行命令行自动部署就可以了，这完全就是为程序员打造的嘛，于是我就开始折腾了。 </p>\n<p><em>Github Pages</em> 建立的博客可以直接使用 <code>http://username.github.io</code>进行访问了，比如我的博客: <a href=\"http:jumpingfrog0.github.io\">http://jumpingfrog0.github.io</a>，当然也可以配置一级域名，这个后面会讲到。</p>\n<p><em>Github Pages</em> 官方的搭建静态博客的方式是 <em><a href=\"https://help.github.com/articles/using-jekyll-as-a-static-site-generator-with-github-pages/\">Jekyll</a></em>，但是过于繁琐复杂，而程序员永远是懒惰的，总是喜欢用更简单的方式去完成一件事情，于是 <em><a href=\"https://hexo.io/\">Hexo</a></em> 诞生了。</p>\n<p><em>Hexo</em> 具有很多的优点：</p>\n<ul>\n<li>比 <em>Jekyll</em> 更快的生成静态网页的速度</li>\n<li>支持 <em><a href=\"http://wowubuntu.com/markdown/\">Markdown</a></em> 格式</li>\n<li>一行命令自动部署</li>\n<li>强大的插件系统</li>\n<li>有很多优秀且开源的主题可供选择</li>\n</ul>\n<h3 id=\"配置-Hexo\"><a href=\"#配置-Hexo\" class=\"headerlink\" title=\"配置 Hexo\"></a>配置 Hexo</h3><h4 id=\"安装并部署\"><a href=\"#安装并部署\" class=\"headerlink\" title=\"安装并部署\"></a>安装并部署</h4><p>安装 <em>Hexo</em> 只需要一行命令，打开终端，输入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-cli -g</div></pre></td></tr></table></figure>\n<p>部署 <em>Hexo</em>，打开终端，输入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo init blog</div><div class=\"line\">$ cd blog</div><div class=\"line\">$ npm install</div><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>这样就已经搭建好本地的 <em>Hexo</em> 博客了，所有的文件都放在 <code>blog</code> 文件夹下。</p>\n<p>目录结构如下所示</p>\n<pre><code>.\n|--- _config.yml\n|--- db.json\n|--- public\n|--- source\n|   |--- _post\n|--- themes\n</code></pre><p>各个文件(夹)的作用如下：</p>\n<pre><code>* _config.yml: 站点配置文件，用来配置各种设置\n* db.josn: 缓存文件\n* public：部署后生成的静态网页文件都放在这个目录下\n* source: 存放网站内容的地方\n* _post: 存放文章(md文件）的地方\n* themes: 配置主题\n</code></pre><p>更多详情请查看<a href=\"https://hexo.io/docs/setup.html\">官方介绍</a></p>\n<p>打开浏览器，输入<code>localhost:4000</code>，就可以看到Hexo自动生成的默认主页 <em>Hello World</em></p>\n<h4 id=\"Hexo-常用命令\"><a href=\"#Hexo-常用命令\" class=\"headerlink\" title=\"Hexo 常用命令\"></a>Hexo 常用命令</h4><ul>\n<li><code>hexo init [folder]</code> 初始化网站</li>\n<li><code>hexo new &lt;title&gt;</code> 新建文章，简写 <code>hexo n &lt;title&gt;</code></li>\n<li><code>hexo generate</code> 生成静态文件，简写 <code>hexo g</code></li>\n<li><code>hexo server</code> 开启本地服务器，简写 <code>hexo s</code></li>\n<li><code>hexo deploy</code> 自动部署，简写 <code>hexo d</code></li>\n<li><code>hexo clean</code> 清空缓存文件(<code>db.json</code>)和生成的静态文件(<code>public</code>)</li>\n</ul>\n<p>可以在常用命令后面加些参数</p>\n<ul>\n<li><code>hexo s --debug</code> 已debug模式启动本地服务器</li>\n<li><code>hexo g -d</code> 生成静态文件后自动部署</li>\n</ul>\n<p>更多命令请查看 <a href=\"https://hexo.io/docs/commands.html\">Commands</a></p>\n<h3 id=\"配置-Github-Pages\"><a href=\"#配置-Github-Pages\" class=\"headerlink\" title=\"配置 Github Pages\"></a>配置 Github Pages</h3><p>打开 <em>Github</em> ，新建一个 <em>repository</em>，命名为 <code>username.github.io</code> ，比如我的就是 <code>jumpingfrog0.github.io</code></p>\n<blockquote>\n<p>注意：<em>repository</em> 的名字中的 <em>username</em> 必须为你 <em>github</em> 账号的用户名，如果不匹配，那将没法正常工作</p>\n</blockquote>\n<p><em>Clone</em> 刚才新建的 <em>repository</em> </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git clone https://github.com/username/username.github.io</div></pre></td></tr></table></figure>\n<h4 id=\"手动部署\"><a href=\"#手动部署\" class=\"headerlink\" title=\"手动部署\"></a>手动部署</h4><ul>\n<li><p>运行部署命令：</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo g</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li>把 <code>blog</code>目录的<code>public</code>文件夹下的所有文件都拷贝到    <code>username.github.io</code> 代码仓库中</li>\n<li><p>push到远程仓库上</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git add --all</div><div class=\"line\">$ git commit -m &quot;Initial commit&quot;</div><div class=\"line\">$ git push -u origin master</div></pre></td></tr></table></figure>\n</li>\n<li><p>在浏览器中打开 <code>http://username.github.io</code>，就访问看到静态博客首页了</p>\n</li>\n</ul>\n<h4 id=\"自动部署\"><a href=\"#自动部署\" class=\"headerlink\" title=\"自动部署\"></a>自动部署</h4><ul>\n<li><p>安装 <code>hexo-deployer-git</code></p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-deployer-git --save</div></pre></td></tr></table></figure>\n</li>\n<li><p>修改配置(<code>blog</code>目录下的<code>_config.yml</code>)</p>\n</li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">deploy:</div><div class=\"line\">\ttype: git</div><div class=\"line\">  \trepository: https://github.com/username/username.github.io.git</div><div class=\"line\">  \tbranch: master</div></pre></td></tr></table></figure>\n<ul>\n<li>打开终端，输入以下命令</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo clean</div><div class=\"line\">$ hexo g -d</div></pre></td></tr></table></figure>\n<p>运行完命令后，查看 <em>Github</em> 上 <code>username.github.io</code> <em>repository</em> 的提交记录，就可以有一个新的commit。在浏览器中打开 <code>http://username.github.io</code>，查看首页的变化。</p>\n<h3 id=\"配置主题\"><a href=\"#配置主题\" class=\"headerlink\" title=\"配置主题\"></a>配置主题</h3><p><em>Hexo</em> 可以很轻松的配置各种主题，官方<a href=\"https://hexo.io/themes/\">Themes</a>提供了很多个人开发者贡献的开源的主题,我们可以直接拿来使用。</p>\n<p>当然，如果你想自己定制主题也可以，用js自己撸一套，请参照文档<a href=\"https://hexo.io/docs/themes.html\">Customization Themes</a></p>\n<p>我使用的是 <code>NexT</code> 主题，<a href=\"https://github.com/iissnan/hexo-theme-next\">NexT</a> 这套主题简洁优雅且易于使用，而且其作者目前依然在维护更新中，使其更优雅。具体配置可以看 <code>NexT</code> 的<a href=\"http://theme-next.iissnan.com/getting-started.html\">主题配置文档</a>，这里不再赘述。</p>\n<p>在 <em>Hexo</em> 中有两份主要的配置文件，其名称都是 <code>_config.yml</code>。 其中，一份位于站点根目录下，主要包含 <em>Hexo</em> 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。</p>\n<p>为了描述方便，在以下说明中，将前者称为 <code>站点配置文件</code>， 后者称为 <code>主题配置文件</code>。</p>\n<p>下面帖下我自己的配置</p>\n<p>站点配置文件</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Hexo Configuration</div><div class=\"line\">## Docs: https://hexo.io/docs/configuration.html</div><div class=\"line\">## Source: https://github.com/hexojs/hexo/</div><div class=\"line\"></div><div class=\"line\"># Site</div><div class=\"line\">title: jumpingfrog0</div><div class=\"line\">subtitle:</div><div class=\"line\">description: Know a lot about a little, know a little about a lot</div><div class=\"line\">author: jumpingfrog0</div><div class=\"line\">language: zh-Hans</div><div class=\"line\">timezone:</div><div class=\"line\"></div><div class=\"line\"># URL</div><div class=\"line\">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</div><div class=\"line\">url: http://jumpingfrog0.com</div><div class=\"line\">root: /</div><div class=\"line\"># permalink: :year/:month/:day/:title/</div><div class=\"line\">permalink: :year/:title/</div><div class=\"line\">permalink_defaults:</div><div class=\"line\"></div><div class=\"line\"># Directory</div><div class=\"line\">source_dir: source</div><div class=\"line\">public_dir: public</div><div class=\"line\">tag_dir: tags</div><div class=\"line\">archive_dir: archives</div><div class=\"line\">category_dir: categories</div><div class=\"line\">code_dir: downloads/code</div><div class=\"line\">i18n_dir: :lang</div><div class=\"line\">skip_render:</div><div class=\"line\"></div><div class=\"line\"># Writing</div><div class=\"line\">new_post_name: :title.md # File name of new posts</div><div class=\"line\">default_layout: post</div><div class=\"line\">titlecase: false # Transform title into titlecase</div><div class=\"line\">external_link: true # Open external links in new tab</div><div class=\"line\">filename_case: 0</div><div class=\"line\">render_drafts: false</div><div class=\"line\">post_asset_folder: false</div><div class=\"line\">relative_link: false</div><div class=\"line\">future: true</div><div class=\"line\">highlight:</div><div class=\"line\">  enable: true</div><div class=\"line\">  line_number: true</div><div class=\"line\">  auto_detect: false</div><div class=\"line\">  tab_replace:</div><div class=\"line\"></div><div class=\"line\"># Category &amp; Tag</div><div class=\"line\">default_category: uncategorized</div><div class=\"line\">category_map:</div><div class=\"line\">tag_map:</div><div class=\"line\"></div><div class=\"line\"># Date / Time format</div><div class=\"line\">## Hexo uses Moment.js to parse and display date</div><div class=\"line\">## You can customize the date format as defined in</div><div class=\"line\">## http://momentjs.com/docs/#/displaying/format/</div><div class=\"line\">date_format: YYYY-MM-DD</div><div class=\"line\">time_format: HH:mm:ss</div><div class=\"line\"></div><div class=\"line\"># Pagination</div><div class=\"line\">## Set per_page to 0 to disable pagination</div><div class=\"line\">per_page: 10</div><div class=\"line\">pagination_dir: page</div><div class=\"line\"></div><div class=\"line\"># Extensions</div><div class=\"line\">## Plugins: https://hexo.io/plugins/</div><div class=\"line\">## Themes: https://hexo.io/themes/</div><div class=\"line\">theme: next</div><div class=\"line\"></div><div class=\"line\"># duoshuo</div><div class=\"line\"># duoshuo_shortname: jumpingfrog0</div><div class=\"line\"></div><div class=\"line\"># Deployment</div><div class=\"line\">## Docs: https://hexo.io/docs/deployment.html</div><div class=\"line\">deploy:</div><div class=\"line\">\ttype: git</div><div class=\"line\">  \trepository: https://github.com/jumpingfrog0/jumpingfrog0.github.io.git</div><div class=\"line\">  \tbranch: master</div></pre></td></tr></table></figure>\n<p>主题配置文件</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div></pre></td><td class=\"code\"><pre><div class=\"line\"># ---------------------------------------------------------------</div><div class=\"line\"># Site Information Settings</div><div class=\"line\"># ---------------------------------------------------------------</div><div class=\"line\"></div><div class=\"line\"># Place your favicon.ico to /source directory.</div><div class=\"line\">favicon: /favicon.ico</div><div class=\"line\"></div><div class=\"line\"># Set default keywords (Use a comma to separate)</div><div class=\"line\">keywords: \"jumpingfrog0, Swift, iOS\"</div><div class=\"line\"></div><div class=\"line\"># Set rss to false to disable feed link.</div><div class=\"line\"># Leave rss as empty to use site's feed link.</div><div class=\"line\"># Set rss to specific value if you have burned your feed already.</div><div class=\"line\">rss:</div><div class=\"line\"></div><div class=\"line\"># Specify the date when the site was setup</div><div class=\"line\">since: 2016</div><div class=\"line\"></div><div class=\"line\"># ---------------------------------------------------------------</div><div class=\"line\"># Menu Settings</div><div class=\"line\"># ---------------------------------------------------------------</div><div class=\"line\"></div><div class=\"line\"># When running hexo in a subdirectory (e.g. domain.tld/blog)</div><div class=\"line\"># Remove leading slashes ( \"/archives\" -&gt; \"archives\" )</div><div class=\"line\">menu:</div><div class=\"line\">  home: /</div><div class=\"line\">  #categories: /categories</div><div class=\"line\">  #about: /about</div><div class=\"line\">  archives: /archives</div><div class=\"line\">  tags: /tags</div><div class=\"line\">  about: /about</div><div class=\"line\">  #commonweal: /404.html</div><div class=\"line\"></div><div class=\"line\"># Enable/Disable menu icons.</div><div class=\"line\"># Icon Mapping:</div><div class=\"line\">#   Map a menu item to a specific FontAwesome icon name.</div><div class=\"line\">#   Key is the name of menu item and value is the name of FontAwsome icon.</div><div class=\"line\">#   When an question mask icon presenting up means that the item has no mapping icon.</div><div class=\"line\">menu_icons:</div><div class=\"line\">  enable: true</div><div class=\"line\">  # Icon Mapping.</div><div class=\"line\">  home: home</div><div class=\"line\">  about: user</div><div class=\"line\">  categories: th</div><div class=\"line\">  tags: tags</div><div class=\"line\">  archives: archive</div><div class=\"line\">  commonweal: heartbeat</div><div class=\"line\"></div><div class=\"line\"># ---------------------------------------------------------------</div><div class=\"line\"># Scheme Settings</div><div class=\"line\"># ---------------------------------------------------------------</div><div class=\"line\"></div><div class=\"line\"># Schemes</div><div class=\"line\"># scheme: Muse</div><div class=\"line\">#scheme: Mist</div><div class=\"line\">scheme: Pisces</div><div class=\"line\"></div><div class=\"line\"># ---------------------------------------------------------------</div><div class=\"line\"># Sidebar Settings</div><div class=\"line\"># ---------------------------------------------------------------</div><div class=\"line\"></div><div class=\"line\"># Social links</div><div class=\"line\">social:</div><div class=\"line\">  GitHub: https://github.com/jumpingfrog0</div><div class=\"line\">  # twitter: https://twitter.com/your-user-name</div><div class=\"line\">  微博: http://weibo.com/3290250165/profile?topnav=1&amp;wvr=6&amp;is_all=1</div><div class=\"line\">  # douban: https://www.douban.com/people/137739388/</div><div class=\"line\">  知乎: https://www.zhihu.com/people/huang-dong-hong</div><div class=\"line\">  #Others:</div><div class=\"line\"></div><div class=\"line\"># Social Icons</div><div class=\"line\">social_icons:</div><div class=\"line\">  enable: true</div><div class=\"line\">  # Icon Mappings</div><div class=\"line\">  GitHub: github</div><div class=\"line\">  Twitter: twitter</div><div class=\"line\">  Weibo: weibo</div><div class=\"line\"></div><div class=\"line\"># Sidebar Avatar</div><div class=\"line\"># in theme directory(source/images): /images/avatar.jpg</div><div class=\"line\"># in site  directory(source/uploads): /uploads/avatar.jpg</div><div class=\"line\"># default : /images/default_avatar.jpg</div><div class=\"line\">avatar: /images/minion.jpeg</div><div class=\"line\"></div><div class=\"line\"># Links title, Chinese available</div><div class=\"line\">links_title: Links</div><div class=\"line\"># links</div><div class=\"line\">links:</div><div class=\"line\">  Bing: http://bing.com</div><div class=\"line\">  Objccn.io: http://objccn.io/</div><div class=\"line\"></div><div class=\"line\"># TOC in the Sidebar</div><div class=\"line\">toc:</div><div class=\"line\">  enable: true</div><div class=\"line\"></div><div class=\"line\">  # Automatically add list number to toc.</div><div class=\"line\">  number: true</div><div class=\"line\"></div><div class=\"line\"># Creative Commons 4.0 International License.</div><div class=\"line\"># http://creativecommons.org/</div><div class=\"line\"># Available: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero</div><div class=\"line\">#creative_commons: by-nc-sa</div><div class=\"line\">#creative_commons:</div><div class=\"line\"></div><div class=\"line\">sidebar:</div><div class=\"line\">  # Sidebar Position, available value: left | right</div><div class=\"line\">  position: left</div><div class=\"line\">  #position: right</div><div class=\"line\"></div><div class=\"line\">  # Sidebar Display, available value:</div><div class=\"line\">  #  - post    expand on posts automatically. Default.</div><div class=\"line\">  #  - always  expand for all pages automatically</div><div class=\"line\">  #  - hide    expand only when click on the sidebar toggle icon.</div><div class=\"line\">  #  - remove  Totally remove sidebar including sidebar toggle icon.</div><div class=\"line\">  display: post</div><div class=\"line\">  #display: always</div><div class=\"line\">  #display: hide</div><div class=\"line\">  #display: remove</div><div class=\"line\"></div><div class=\"line\"># ---------------------------------------------------------------</div><div class=\"line\"># Misc Theme Settings</div><div class=\"line\"># ---------------------------------------------------------------</div><div class=\"line\"></div><div class=\"line\"># Custom Logo.</div><div class=\"line\"># !!Only available for Default Scheme currently.</div><div class=\"line\"># Options:</div><div class=\"line\">#   enabled: [true/false] - Replace with specific image</div><div class=\"line\">#   image: url-of-image   - Images's url</div><div class=\"line\">custom_logo:</div><div class=\"line\">  enabled: false</div><div class=\"line\">  image:</div><div class=\"line\"></div><div class=\"line\"># Code Highlight theme</div><div class=\"line\"># Available value:</div><div class=\"line\">#    normal | night | night eighties | night blue | night bright</div><div class=\"line\"># https://github.com/chriskempson/tomorrow-theme</div><div class=\"line\">highlight_theme: normal</div><div class=\"line\"></div><div class=\"line\"># Automatically scroll page to section which is under &lt;!-- more --&gt; mark.</div><div class=\"line\">scroll_to_more: true</div><div class=\"line\"></div><div class=\"line\"># Automatically Excerpt</div><div class=\"line\">auto_excerpt:</div><div class=\"line\">  enable: true</div><div class=\"line\">  length: 150</div><div class=\"line\"></div><div class=\"line\"># Use Lato font</div><div class=\"line\">use_font_lato: true</div><div class=\"line\"></div><div class=\"line\"># ---------------------------------------------------------------</div><div class=\"line\"># Third Party Services Settings</div><div class=\"line\"># ---------------------------------------------------------------</div><div class=\"line\"></div><div class=\"line\"># MathJax Support</div><div class=\"line\">mathjax:</div><div class=\"line\"></div><div class=\"line\"># Swiftype Search API Key</div><div class=\"line\">swiftype_key: _hsnBCSxyAH__Kvfd1uL</div><div class=\"line\"></div><div class=\"line\"># Baidu Analytics ID</div><div class=\"line\">#baidu_analytics:</div><div class=\"line\"></div><div class=\"line\"># Duoshuo ShortName</div><div class=\"line\">duoshuo_shortname: jumpingfrog0</div><div class=\"line\">duoshuo_hotartical: true</div><div class=\"line\"></div><div class=\"line\"># Disqus</div><div class=\"line\">#disqus_shortname:</div><div class=\"line\"></div><div class=\"line\"># Baidu Share</div><div class=\"line\"># Available value:</div><div class=\"line\">#    button | slide</div><div class=\"line\">#baidushare:</div><div class=\"line\">##  type: button</div><div class=\"line\"></div><div class=\"line\"># Share</div><div class=\"line\">jiathis: true</div><div class=\"line\">#add_this_id:</div><div class=\"line\"></div><div class=\"line\"># Share</div><div class=\"line\">duoshuo_share: true</div><div class=\"line\"></div><div class=\"line\"># Google Webmaster tools verification setting</div><div class=\"line\"># See: https://www.google.com/webmasters/</div><div class=\"line\">#google_site_verification:</div><div class=\"line\"></div><div class=\"line\"># Google Analytics</div><div class=\"line\">#google_analytics:</div><div class=\"line\"></div><div class=\"line\"># CNZZ count</div><div class=\"line\">#cnzz_siteid:</div><div class=\"line\"></div><div class=\"line\"># Make duoshuo show UA</div><div class=\"line\"># user_id must NOT be null when admin_enable is true!</div><div class=\"line\"># you can visit http://dev.duoshuo.com get duoshuo user id.</div><div class=\"line\">duoshuo_info:</div><div class=\"line\">  ua_enable: true</div><div class=\"line\">  admin_enable: false</div><div class=\"line\">  user_id: 0</div><div class=\"line\">  #admin_nickname: ROOT</div><div class=\"line\"></div><div class=\"line\"># Facebook SDK Support.</div><div class=\"line\"># https://github.com/iissnan/hexo-theme-next/pull/410</div><div class=\"line\">facebook_sdk:</div><div class=\"line\">  enable: false</div><div class=\"line\">  app_id:       #&lt;app_id&gt;</div><div class=\"line\">  fb_admin:     #&lt;user_id&gt;</div><div class=\"line\">  like_button:  #true</div><div class=\"line\">  webmaster:    #true</div><div class=\"line\"></div><div class=\"line\"># Show number of visitors to each article.</div><div class=\"line\"># You can visit https://leancloud.cn get AppID and AppKey.</div><div class=\"line\">leancloud_visitors:</div><div class=\"line\">  enable: false</div><div class=\"line\">  app_id: #&lt;app_id&gt;</div><div class=\"line\">  app_key: #&lt;app_key&gt;</div><div class=\"line\"></div><div class=\"line\"># Tencent analytics ID</div><div class=\"line\"># tencent_analytics:</div><div class=\"line\"></div><div class=\"line\">#! ---------------------------------------------------------------</div><div class=\"line\">#! DO NOT EDIT THE FOLLOWING SETTINGS</div><div class=\"line\">#! UNLESS YOU KNOW WHAT YOU ARE DOING</div><div class=\"line\">#! ---------------------------------------------------------------</div><div class=\"line\"></div><div class=\"line\"># Motion</div><div class=\"line\">use_motion: true</div><div class=\"line\"></div><div class=\"line\"># Fancybox</div><div class=\"line\">fancybox: true</div><div class=\"line\"></div><div class=\"line\"># Static files</div><div class=\"line\">vendors: vendors</div><div class=\"line\">css: css</div><div class=\"line\">js: js</div><div class=\"line\">images: images</div><div class=\"line\"></div><div class=\"line\"># Theme version</div><div class=\"line\">version: 0.5.0</div></pre></td></tr></table></figure>\n<h3 id=\"DNS-设置\"><a href=\"#DNS-设置\" class=\"headerlink\" title=\"DNS 设置\"></a>DNS 设置</h3><p>还未配置，等购买域名后配置了再更…</p>\n"},{"title":"iOS 企业内部(In-House)应用分发","_content":"\n去年8月份的时候由于公司的需求，开发了一个只在司机间使用的企业内部的iOS应用，当时就打算写一篇文章来总结一下了，然而我是重度拖延症患者，一直拖着没完成。一年过去了，今天才想起来这回事，才开始动手写这篇文章。\n\n## 企业内部应用\n\n企业内部应用，即只在企业部门和员工内部使用、不对外公开的应用。苹果提供了专门的`In-House`证书用来发布这种应用，可以分发给任意的手机，只要通过一个URL即可下载安装，不用上传到`App Stroe`审核。我把企业内部应用也叫做`In-House`应用。\n\n`In-House`应用，有时需要根据部门需求进行版本的快速迭代，因为不需要`App Store`审核，所以可以做到随时修改，随时发布，节省了大量的时间。`In-House`证书还可以用于应用的内测分发，现在大部分的内测分发平台如蒲公英，Fir.im等的公测功能就是使用`In-House`证书实现的。\n\n#### 必须具备的两个条件：\n\n* 企业开发者账号。99$的普通开发者账号不行，必须以企业的名义申请一个299$的企业开发者账号`Apple Developer Enterprise Program`\n* 带SSL证书的域名。企业内部应用需要把ipa文件上传到服务器，然后通过一个链接来下载安装，而苹果很重视安全性，要求这个链接的域名必须具有SSL证书，支持 https ，否则无法安装。\n\nSSL证书其实并不是必需的，可以使用一些知名的云存储服务，比如亚马逊的AWS，阿里云等，这些大公司的云存储都支持Https，我用的就是AWS的S3云存储，但299$的企业开发者账号就避免不了。\n\n#### 准备的文件\n\n* `ipa`文件。\n* `plist`文件。名称必须与`ipa`文件一致，用于配置bundle id、版本号、`ipa`文件的URL、应用图标等。\n* @1x 和 @2x 的Icon。下载安装时显示应用图标。\n\n## 打包\n\n1. 创建发布证书(**Production Certificates**)，选择`In-House`类型的，过程我就不赘述了，和其他证书一样。\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/BF3C42FA-2DBD-4CD2-9B0F-F1A7FB8EBBF9.png)\n2. 创建配置文件(**Distribution Provisioning Profiles**) \n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/61A9C0ED-8A61-455F-803D-27F2F80BD358.png)\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/F5FE4D91-A39D-43BE-9173-9583DC027F89.png)\n3. 在Xcode选择对应的Code Signing 和 Provisioning Profile, Archive\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/54CDD771-A9ED-4A79-AA73-C5DA1DE9B6A2.png)\n4. 导出 ipa 文件\n\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/C2A751F9-A8B6-4888-877A-62DEB4F96A3D.png)\n\n## plist 文件\n\nXcode 5 及其以前打包`In-House`应用会一起生成`ipa`和`plist`文件，但Xcode 6 以后就只有`ipa`文件了，所以要手动生成 `plist`文件。\n文件格式如下：\n\n```xml\n\t<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\t<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n\t<plist version=\"1.0\">\n\t<dict>\n\t\t<key>items</key>\n\t\t<array>\n\t\t\t<dict>\n\t\t\t\t<key>assets</key>\n\t\t\t\t<array>\n\t\t\t\t\t<dict>\n\t\t\t\t\t\t<key>kind</key>\n\t\t\t\t\t\t<string>software-package</string>\n\t\t\t\t\t\t<key>url</key>\n\t\t\t\t\t\t<string>[INSERT THE URL FOR YOUR IPA HERE. e.g : https://s3-us-west-2.amazonaws.com/folder/appName-version.ipa]</string>\n\t\t\t\t\t</dict>\n\t\t\t\t\t<dict>\n\t\t\t\t\t\t<key>kind</key>\n\t\t\t\t\t\t<string>full-size-image</string>\n\t\t\t\t\t\t<key>needs-shine</key>\n\t\t\t\t\t\t<true/>\n\t\t\t\t\t\t<key>url</key>\n\t\t\t\t\t\t<string>[INSERT THE URL FOR INSTALLATION @2x ICON HERE. e.g : https://s3-us-west-2.amazonaws.com/folder/images/Icon@2x.png]</string>\n\t\t\t\t\t</dict>\n\t\t\t\t\t<dict>\n\t\t\t\t\t\t<key>kind</key>\n\t\t\t\t\t\t<string>display-image</string>\n\t\t\t\t\t\t<key>needs-shine</key>\n\t\t\t\t\t\t<true/>\n\t\t\t\t\t\t<key>url</key>\n\t\t\t\t\t\t<string>[INSERT THE URL FOR INSTALLATION ICON HERE. e.g : https://s3-us-west-2.amazonaws.com/folder/images/Icon.png]</string>\n\t\t\t\t\t</dict>\n\t\t\t\t</array>\n\t\t\t\t<key>metadata</key>\n\t\t\t\t<dict>\n\t\t\t\t\t<key>bundle-identifier</key>\n\t\t\t\t\t<string>[INSERT BUNDLE ID HERE]</string>\n\t\t\t\t\t<key>bundle-version</key>\n\t\t\t\t\t<string>[INSERT VERSION HERE]</string>\n\t\t\t\t\t<key>kind</key>\n\t\t\t\t\t<string>software</string>\n\t\t\t\t\t<key>title</key>\n\t\t\t\t\t<string>[INSERT APP TITLE HERE. The Title will present to the user installing the app]</string>\n\t\t\t\t</dict>\n\t\t\t</dict>\n\t\t</array>\n\t</dict>\n\t</plist>\n```\n\n在`plist`文件中输入`ipa`的URL、安装时显示的 icon 的url、bundle id、版本号、安装前的提示信息。\n\n## 发布与安装\n\n#### 发布\n\n把`ipa`、配置好的`plist` 文件和图标一起上传AWS的S3云存储上即可。\n\n#### 安装\n\niOS的企业内部应用是通过访问`plist`文件来安装的，因为`plist`文件中包含了对应的`ipa`文件和图标的URL，iPhone会根据URL自动下载并安装应用程序。\n\n在iPhone的`Safari`浏览器中输入：\n\n\titms-services://?action=download-manifest&url=https://s3-us-west-2.amazonaws.com/folder/appName-version.plist\n\t\n首先会询问是否打开要打开链接，点击“打开”\n\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/515BAA10430C80AC9421639148B387E3.jpg)\n\n然后询问是否要安装App，点击“安装”\n\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/ACEEDF6B084EAC46F70F6D1494CB5EDF.jpg)\n\n## 自动更新\n\n为了避免每次发布后都需要通知别人更新App的麻烦事，自动更新是必备的。与后台沟通，设计一个更新接口`GET /updates`\n\n###### Query Parameters\n\n| name | required | type | description |\n| ----- | -------- | ---- | ----------- |\n| platform | YES | String | 平台，ios / android| \n| version | YES | String | 当前版本号，比如：1.0.0 |\n\n###### Response\n\nStatus-Code: 200 OK\n\n\t{\n  \t\t\"data\": {\n  \t\t\t\"update\" : true,\n  \t\t\t\"lastest\" : \"1.0.1\",\n  \t\t\t\"url\" : \"itms-services://?action=download-manifest&url=https://s3-us-west-2.amazonaws.com/folder/appName-1.0.1.plist\"\n    \t},\n  \t\t\"error\": {}\n\t}\n\t\nApp一启动时，调用`GET /updates`接口传递平台参数和当前版本号给后台进行检查，后台判断当前版本是否为最新版，如果不是最新版，则返回最新版本号和对应的下载链接，然后用浏览器打开返回的URL进行安装即可。\n\n代码如下：\n\n```swift\nfunc upgrade()\n    {\n        let params = [\n        \t\"platform\" : \"ios\", \n        \t\"version\" : CKAppInfo.releaseVersion()\n        ]\n        ObjectRequest(URLRequest: UpdateRouter.CheckUpdate(params)).load(\n            successHandler: { (promotion: Promotion?) -> Void in\n                SWLog(promotion)\n                \n                if promotion?.update == true { // different version\n                    \n                    let alert = DVAlertController(title: \"Upgrade\", message: \"update to latest version\", preferredStyle: UIAlertControllerStyle.Alert)\n                    alert.addAction(UIAlertAction(title: \"Upgrade\", style: UIAlertActionStyle.Default, handler: { (_) -> Void in\n                        let url = NSURL(string:promotion!.url!)\n                        UIApplication.sharedApplication().openURL(url!)\n                    }))\n                    \n                    alert.show(animated: true, completion: nil)\n                    SWLog(\"different version\")\n                }\n            }, failHandler: { (error) -> Void in\n                self.creatAlert(\"checkout upgrade failed\")\n        })\n    }\n```\n\n## 不信任的企业开发者\n\n如果你的手机是 iOS 9 系统，那么第一次打开企业级应用时，你并不能打开App，而是看到下面的信息：\n\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/iphone6-ios9-enterprise-untrusted_enterprise_app.png)\n\n苹果是一个极其重视安全性的公司，iOS 9 以后，安装的企业级应用在第一次打开之前必须要用户手动去信任这些App，参考[Guidelines for installing custom enterprise apps on iOS](https://support.apple.com/en-us/HT204460)。具体步骤如下：\n\n* 打开 **设置** --> **通用** --> **描述文件与设备管理**\n* 在 **企业级应用** 分组下，点击 **信任** 开发者的证书\n\n\n\n\n","source":"_posts/2016-08-16-ios-enterprise-application-distribution.md","raw":"title: iOS 企业内部(In-House)应用分发\n-----------------------------------\n\n去年8月份的时候由于公司的需求，开发了一个只在司机间使用的企业内部的iOS应用，当时就打算写一篇文章来总结一下了，然而我是重度拖延症患者，一直拖着没完成。一年过去了，今天才想起来这回事，才开始动手写这篇文章。\n\n## 企业内部应用\n\n企业内部应用，即只在企业部门和员工内部使用、不对外公开的应用。苹果提供了专门的`In-House`证书用来发布这种应用，可以分发给任意的手机，只要通过一个URL即可下载安装，不用上传到`App Stroe`审核。我把企业内部应用也叫做`In-House`应用。\n\n`In-House`应用，有时需要根据部门需求进行版本的快速迭代，因为不需要`App Store`审核，所以可以做到随时修改，随时发布，节省了大量的时间。`In-House`证书还可以用于应用的内测分发，现在大部分的内测分发平台如蒲公英，Fir.im等的公测功能就是使用`In-House`证书实现的。\n\n#### 必须具备的两个条件：\n\n* 企业开发者账号。99$的普通开发者账号不行，必须以企业的名义申请一个299$的企业开发者账号`Apple Developer Enterprise Program`\n* 带SSL证书的域名。企业内部应用需要把ipa文件上传到服务器，然后通过一个链接来下载安装，而苹果很重视安全性，要求这个链接的域名必须具有SSL证书，支持 https ，否则无法安装。\n\nSSL证书其实并不是必需的，可以使用一些知名的云存储服务，比如亚马逊的AWS，阿里云等，这些大公司的云存储都支持Https，我用的就是AWS的S3云存储，但299$的企业开发者账号就避免不了。\n\n#### 准备的文件\n\n* `ipa`文件。\n* `plist`文件。名称必须与`ipa`文件一致，用于配置bundle id、版本号、`ipa`文件的URL、应用图标等。\n* @1x 和 @2x 的Icon。下载安装时显示应用图标。\n\n## 打包\n\n1. 创建发布证书(**Production Certificates**)，选择`In-House`类型的，过程我就不赘述了，和其他证书一样。\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/BF3C42FA-2DBD-4CD2-9B0F-F1A7FB8EBBF9.png)\n2. 创建配置文件(**Distribution Provisioning Profiles**) \n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/61A9C0ED-8A61-455F-803D-27F2F80BD358.png)\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/F5FE4D91-A39D-43BE-9173-9583DC027F89.png)\n3. 在Xcode选择对应的Code Signing 和 Provisioning Profile, Archive\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/54CDD771-A9ED-4A79-AA73-C5DA1DE9B6A2.png)\n4. 导出 ipa 文件\n\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/C2A751F9-A8B6-4888-877A-62DEB4F96A3D.png)\n\n## plist 文件\n\nXcode 5 及其以前打包`In-House`应用会一起生成`ipa`和`plist`文件，但Xcode 6 以后就只有`ipa`文件了，所以要手动生成 `plist`文件。\n文件格式如下：\n\n```xml\n\t<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\t<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n\t<plist version=\"1.0\">\n\t<dict>\n\t\t<key>items</key>\n\t\t<array>\n\t\t\t<dict>\n\t\t\t\t<key>assets</key>\n\t\t\t\t<array>\n\t\t\t\t\t<dict>\n\t\t\t\t\t\t<key>kind</key>\n\t\t\t\t\t\t<string>software-package</string>\n\t\t\t\t\t\t<key>url</key>\n\t\t\t\t\t\t<string>[INSERT THE URL FOR YOUR IPA HERE. e.g : https://s3-us-west-2.amazonaws.com/folder/appName-version.ipa]</string>\n\t\t\t\t\t</dict>\n\t\t\t\t\t<dict>\n\t\t\t\t\t\t<key>kind</key>\n\t\t\t\t\t\t<string>full-size-image</string>\n\t\t\t\t\t\t<key>needs-shine</key>\n\t\t\t\t\t\t<true/>\n\t\t\t\t\t\t<key>url</key>\n\t\t\t\t\t\t<string>[INSERT THE URL FOR INSTALLATION @2x ICON HERE. e.g : https://s3-us-west-2.amazonaws.com/folder/images/Icon@2x.png]</string>\n\t\t\t\t\t</dict>\n\t\t\t\t\t<dict>\n\t\t\t\t\t\t<key>kind</key>\n\t\t\t\t\t\t<string>display-image</string>\n\t\t\t\t\t\t<key>needs-shine</key>\n\t\t\t\t\t\t<true/>\n\t\t\t\t\t\t<key>url</key>\n\t\t\t\t\t\t<string>[INSERT THE URL FOR INSTALLATION ICON HERE. e.g : https://s3-us-west-2.amazonaws.com/folder/images/Icon.png]</string>\n\t\t\t\t\t</dict>\n\t\t\t\t</array>\n\t\t\t\t<key>metadata</key>\n\t\t\t\t<dict>\n\t\t\t\t\t<key>bundle-identifier</key>\n\t\t\t\t\t<string>[INSERT BUNDLE ID HERE]</string>\n\t\t\t\t\t<key>bundle-version</key>\n\t\t\t\t\t<string>[INSERT VERSION HERE]</string>\n\t\t\t\t\t<key>kind</key>\n\t\t\t\t\t<string>software</string>\n\t\t\t\t\t<key>title</key>\n\t\t\t\t\t<string>[INSERT APP TITLE HERE. The Title will present to the user installing the app]</string>\n\t\t\t\t</dict>\n\t\t\t</dict>\n\t\t</array>\n\t</dict>\n\t</plist>\n```\n\n在`plist`文件中输入`ipa`的URL、安装时显示的 icon 的url、bundle id、版本号、安装前的提示信息。\n\n## 发布与安装\n\n#### 发布\n\n把`ipa`、配置好的`plist` 文件和图标一起上传AWS的S3云存储上即可。\n\n#### 安装\n\niOS的企业内部应用是通过访问`plist`文件来安装的，因为`plist`文件中包含了对应的`ipa`文件和图标的URL，iPhone会根据URL自动下载并安装应用程序。\n\n在iPhone的`Safari`浏览器中输入：\n\n\titms-services://?action=download-manifest&url=https://s3-us-west-2.amazonaws.com/folder/appName-version.plist\n\t\n首先会询问是否打开要打开链接，点击“打开”\n\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/515BAA10430C80AC9421639148B387E3.jpg)\n\n然后询问是否要安装App，点击“安装”\n\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/ACEEDF6B084EAC46F70F6D1494CB5EDF.jpg)\n\n## 自动更新\n\n为了避免每次发布后都需要通知别人更新App的麻烦事，自动更新是必备的。与后台沟通，设计一个更新接口`GET /updates`\n\n###### Query Parameters\n\n| name | required | type | description |\n| ----- | -------- | ---- | ----------- |\n| platform | YES | String | 平台，ios / android| \n| version | YES | String | 当前版本号，比如：1.0.0 |\n\n###### Response\n\nStatus-Code: 200 OK\n\n\t{\n  \t\t\"data\": {\n  \t\t\t\"update\" : true,\n  \t\t\t\"lastest\" : \"1.0.1\",\n  \t\t\t\"url\" : \"itms-services://?action=download-manifest&url=https://s3-us-west-2.amazonaws.com/folder/appName-1.0.1.plist\"\n    \t},\n  \t\t\"error\": {}\n\t}\n\t\nApp一启动时，调用`GET /updates`接口传递平台参数和当前版本号给后台进行检查，后台判断当前版本是否为最新版，如果不是最新版，则返回最新版本号和对应的下载链接，然后用浏览器打开返回的URL进行安装即可。\n\n代码如下：\n\n```swift\nfunc upgrade()\n    {\n        let params = [\n        \t\"platform\" : \"ios\", \n        \t\"version\" : CKAppInfo.releaseVersion()\n        ]\n        ObjectRequest(URLRequest: UpdateRouter.CheckUpdate(params)).load(\n            successHandler: { (promotion: Promotion?) -> Void in\n                SWLog(promotion)\n                \n                if promotion?.update == true { // different version\n                    \n                    let alert = DVAlertController(title: \"Upgrade\", message: \"update to latest version\", preferredStyle: UIAlertControllerStyle.Alert)\n                    alert.addAction(UIAlertAction(title: \"Upgrade\", style: UIAlertActionStyle.Default, handler: { (_) -> Void in\n                        let url = NSURL(string:promotion!.url!)\n                        UIApplication.sharedApplication().openURL(url!)\n                    }))\n                    \n                    alert.show(animated: true, completion: nil)\n                    SWLog(\"different version\")\n                }\n            }, failHandler: { (error) -> Void in\n                self.creatAlert(\"checkout upgrade failed\")\n        })\n    }\n```\n\n## 不信任的企业开发者\n\n如果你的手机是 iOS 9 系统，那么第一次打开企业级应用时，你并不能打开App，而是看到下面的信息：\n\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/iphone6-ios9-enterprise-untrusted_enterprise_app.png)\n\n苹果是一个极其重视安全性的公司，iOS 9 以后，安装的企业级应用在第一次打开之前必须要用户手动去信任这些App，参考[Guidelines for installing custom enterprise apps on iOS](https://support.apple.com/en-us/HT204460)。具体步骤如下：\n\n* 打开 **设置** --> **通用** --> **描述文件与设备管理**\n* 在 **企业级应用** 分组下，点击 **信任** 开发者的证书\n\n\n\n\n","slug":"2016-08-16-ios-enterprise-application-distribution","published":1,"date":"2016-08-16T17:50:43.000Z","updated":"2016-08-16T17:50:43.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciw78hu7h0004bg82an6spjtt","content":"<p>去年8月份的时候由于公司的需求，开发了一个只在司机间使用的企业内部的iOS应用，当时就打算写一篇文章来总结一下了，然而我是重度拖延症患者，一直拖着没完成。一年过去了，今天才想起来这回事，才开始动手写这篇文章。</p>\n<h2 id=\"企业内部应用\"><a href=\"#企业内部应用\" class=\"headerlink\" title=\"企业内部应用\"></a>企业内部应用</h2><p>企业内部应用，即只在企业部门和员工内部使用、不对外公开的应用。苹果提供了专门的<code>In-House</code>证书用来发布这种应用，可以分发给任意的手机，只要通过一个URL即可下载安装，不用上传到<code>App Stroe</code>审核。我把企业内部应用也叫做<code>In-House</code>应用。</p>\n<p><code>In-House</code>应用，有时需要根据部门需求进行版本的快速迭代，因为不需要<code>App Store</code>审核，所以可以做到随时修改，随时发布，节省了大量的时间。<code>In-House</code>证书还可以用于应用的内测分发，现在大部分的内测分发平台如蒲公英，Fir.im等的公测功能就是使用<code>In-House</code>证书实现的。</p>\n<h4 id=\"必须具备的两个条件：\"><a href=\"#必须具备的两个条件：\" class=\"headerlink\" title=\"必须具备的两个条件：\"></a>必须具备的两个条件：</h4><ul>\n<li>企业开发者账号。99$的普通开发者账号不行，必须以企业的名义申请一个299$的企业开发者账号<code>Apple Developer Enterprise Program</code></li>\n<li>带SSL证书的域名。企业内部应用需要把ipa文件上传到服务器，然后通过一个链接来下载安装，而苹果很重视安全性，要求这个链接的域名必须具有SSL证书，支持 https ，否则无法安装。</li>\n</ul>\n<p>SSL证书其实并不是必需的，可以使用一些知名的云存储服务，比如亚马逊的AWS，阿里云等，这些大公司的云存储都支持Https，我用的就是AWS的S3云存储，但299$的企业开发者账号就避免不了。</p>\n<h4 id=\"准备的文件\"><a href=\"#准备的文件\" class=\"headerlink\" title=\"准备的文件\"></a>准备的文件</h4><ul>\n<li><code>ipa</code>文件。</li>\n<li><code>plist</code>文件。名称必须与<code>ipa</code>文件一致，用于配置bundle id、版本号、<code>ipa</code>文件的URL、应用图标等。</li>\n<li>@1x 和 @2x 的Icon。下载安装时显示应用图标。</li>\n</ul>\n<h2 id=\"打包\"><a href=\"#打包\" class=\"headerlink\" title=\"打包\"></a>打包</h2><ol>\n<li>创建发布证书(<strong>Production Certificates</strong>)，选择<code>In-House</code>类型的，过程我就不赘述了，和其他证书一样。<br><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/BF3C42FA-2DBD-4CD2-9B0F-F1A7FB8EBBF9.png\" alt=\"\"></li>\n<li>创建配置文件(<strong>Distribution Provisioning Profiles</strong>)<br><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/61A9C0ED-8A61-455F-803D-27F2F80BD358.png\" alt=\"\"><br><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/F5FE4D91-A39D-43BE-9173-9583DC027F89.png\" alt=\"\"></li>\n<li>在Xcode选择对应的Code Signing 和 Provisioning Profile, Archive<br><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/54CDD771-A9ED-4A79-AA73-C5DA1DE9B6A2.png\" alt=\"\"></li>\n<li>导出 ipa 文件</li>\n</ol>\n<p><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/C2A751F9-A8B6-4888-877A-62DEB4F96A3D.png\" alt=\"\"></p>\n<h2 id=\"plist-文件\"><a href=\"#plist-文件\" class=\"headerlink\" title=\"plist 文件\"></a>plist 文件</h2><p>Xcode 5 及其以前打包<code>In-House</code>应用会一起生成<code>ipa</code>和<code>plist</code>文件，但Xcode 6 以后就只有<code>ipa</code>文件了，所以要手动生成 <code>plist</code>文件。<br>文件格式如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">plist</span> <span class=\"attr\">version</span>=<span class=\"string\">\"1.0\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dict</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>items<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">array</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">dict</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>assets<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">array</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">dict</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>kind<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">string</span>&gt;</span>software-package<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>url<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">string</span>&gt;</span>[INSERT THE URL FOR YOUR IPA HERE. e.g : https://s3-us-west-2.amazonaws.com/folder/appName-version.ipa]<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">dict</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">dict</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>kind<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">string</span>&gt;</span>full-size-image<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>needs-shine<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">true</span>/&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>url<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">string</span>&gt;</span>[INSERT THE URL FOR INSTALLATION @2x ICON HERE. e.g : https://s3-us-west-2.amazonaws.com/folder/images/Icon@2x.png]<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">dict</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">dict</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>kind<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">string</span>&gt;</span>display-image<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>needs-shine<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">true</span>/&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>url<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">string</span>&gt;</span>[INSERT THE URL FOR INSTALLATION ICON HERE. e.g : https://s3-us-west-2.amazonaws.com/folder/images/Icon.png]<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">dict</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">array</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>metadata<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">dict</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>bundle-identifier<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">string</span>&gt;</span>[INSERT BUNDLE ID HERE]<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>bundle-version<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">string</span>&gt;</span>[INSERT VERSION HERE]<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>kind<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">string</span>&gt;</span>software<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">string</span>&gt;</span>[INSERT APP TITLE HERE. The Title will present to the user installing the app]<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">dict</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">dict</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">array</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dict</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">plist</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>在<code>plist</code>文件中输入<code>ipa</code>的URL、安装时显示的 icon 的url、bundle id、版本号、安装前的提示信息。</p>\n<h2 id=\"发布与安装\"><a href=\"#发布与安装\" class=\"headerlink\" title=\"发布与安装\"></a>发布与安装</h2><h4 id=\"发布\"><a href=\"#发布\" class=\"headerlink\" title=\"发布\"></a>发布</h4><p>把<code>ipa</code>、配置好的<code>plist</code> 文件和图标一起上传AWS的S3云存储上即可。</p>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><p>iOS的企业内部应用是通过访问<code>plist</code>文件来安装的，因为<code>plist</code>文件中包含了对应的<code>ipa</code>文件和图标的URL，iPhone会根据URL自动下载并安装应用程序。</p>\n<p>在iPhone的<code>Safari</code>浏览器中输入：</p>\n<pre><code>itms-services://?action=download-manifest&amp;url=https://s3-us-west-2.amazonaws.com/folder/appName-version.plist\n</code></pre><p>首先会询问是否打开要打开链接，点击“打开”</p>\n<p><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/515BAA10430C80AC9421639148B387E3.jpg\" alt=\"\"></p>\n<p>然后询问是否要安装App，点击“安装”</p>\n<p><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/ACEEDF6B084EAC46F70F6D1494CB5EDF.jpg\" alt=\"\"></p>\n<h2 id=\"自动更新\"><a href=\"#自动更新\" class=\"headerlink\" title=\"自动更新\"></a>自动更新</h2><p>为了避免每次发布后都需要通知别人更新App的麻烦事，自动更新是必备的。与后台沟通，设计一个更新接口<code>GET /updates</code></p>\n<h6 id=\"Query-Parameters\"><a href=\"#Query-Parameters\" class=\"headerlink\" title=\"Query Parameters\"></a>Query Parameters</h6><table>\n<thead>\n<tr>\n<th>name</th>\n<th>required</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>platform</td>\n<td>YES</td>\n<td>String</td>\n<td>平台，ios / android</td>\n</tr>\n<tr>\n<td>version</td>\n<td>YES</td>\n<td>String</td>\n<td>当前版本号，比如：1.0.0</td>\n</tr>\n</tbody>\n</table>\n<h6 id=\"Response\"><a href=\"#Response\" class=\"headerlink\" title=\"Response\"></a>Response</h6><p>Status-Code: 200 OK</p>\n<pre><code>{\n      &quot;data&quot;: {\n          &quot;update&quot; : true,\n          &quot;lastest&quot; : &quot;1.0.1&quot;,\n          &quot;url&quot; : &quot;itms-services://?action=download-manifest&amp;url=https://s3-us-west-2.amazonaws.com/folder/appName-1.0.1.plist&quot;\n    },\n      &quot;error&quot;: {}\n}\n</code></pre><p>App一启动时，调用<code>GET /updates</code>接口传递平台参数和当前版本号给后台进行检查，后台判断当前版本是否为最新版，如果不是最新版，则返回最新版本号和对应的下载链接，然后用浏览器打开返回的URL进行安装即可。</p>\n<p>代码如下：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">upgrade</span><span class=\"params\">()</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">let</span> params = [</div><div class=\"line\">        \t<span class=\"string\">\"platform\"</span> : <span class=\"string\">\"ios\"</span>, </div><div class=\"line\">        \t<span class=\"string\">\"version\"</span> : <span class=\"type\">CKAppInfo</span>.releaseVersion()</div><div class=\"line\">        ]</div><div class=\"line\">        <span class=\"type\">ObjectRequest</span>(<span class=\"type\">URLRequest</span>: <span class=\"type\">UpdateRouter</span>.<span class=\"type\">CheckUpdate</span>(params)).load(</div><div class=\"line\">            successHandler: &#123; (promotion: <span class=\"type\">Promotion</span>?) -&gt; <span class=\"type\">Void</span> <span class=\"keyword\">in</span></div><div class=\"line\">                <span class=\"type\">SWLog</span>(promotion)</div><div class=\"line\">                </div><div class=\"line\">                <span class=\"keyword\">if</span> promotion?.update == <span class=\"literal\">true</span> &#123; <span class=\"comment\">// different version</span></div><div class=\"line\">                    </div><div class=\"line\">                    <span class=\"keyword\">let</span> alert = <span class=\"type\">DVAlertController</span>(title: <span class=\"string\">\"Upgrade\"</span>, message: <span class=\"string\">\"update to latest version\"</span>, preferredStyle: <span class=\"type\">UIAlertControllerStyle</span>.<span class=\"type\">Alert</span>)</div><div class=\"line\">                    alert.addAction(<span class=\"type\">UIAlertAction</span>(title: <span class=\"string\">\"Upgrade\"</span>, style: <span class=\"type\">UIAlertActionStyle</span>.<span class=\"type\">Default</span>, handler: &#123; (<span class=\"number\">_</span>) -&gt; <span class=\"type\">Void</span> <span class=\"keyword\">in</span></div><div class=\"line\">                        <span class=\"keyword\">let</span> url = <span class=\"type\">NSURL</span>(string:promotion!.url!)</div><div class=\"line\">                        <span class=\"type\">UIApplication</span>.sharedApplication().openURL(url!)</div><div class=\"line\">                    &#125;))</div><div class=\"line\">                    </div><div class=\"line\">                    alert.show(animated: <span class=\"literal\">true</span>, completion: <span class=\"literal\">nil</span>)</div><div class=\"line\">                    <span class=\"type\">SWLog</span>(<span class=\"string\">\"different version\"</span>)</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;, failHandler: &#123; (error) -&gt; <span class=\"type\">Void</span> <span class=\"keyword\">in</span></div><div class=\"line\">                <span class=\"keyword\">self</span>.creatAlert(<span class=\"string\">\"checkout upgrade failed\"</span>)</div><div class=\"line\">        &#125;)</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h2 id=\"不信任的企业开发者\"><a href=\"#不信任的企业开发者\" class=\"headerlink\" title=\"不信任的企业开发者\"></a>不信任的企业开发者</h2><p>如果你的手机是 iOS 9 系统，那么第一次打开企业级应用时，你并不能打开App，而是看到下面的信息：</p>\n<p><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/iphone6-ios9-enterprise-untrusted_enterprise_app.png\" alt=\"\"></p>\n<p>苹果是一个极其重视安全性的公司，iOS 9 以后，安装的企业级应用在第一次打开之前必须要用户手动去信任这些App，参考<a href=\"https://support.apple.com/en-us/HT204460\" target=\"_blank\" rel=\"external\">Guidelines for installing custom enterprise apps on iOS</a>。具体步骤如下：</p>\n<ul>\n<li>打开 <strong>设置</strong> –&gt; <strong>通用</strong> –&gt; <strong>描述文件与设备管理</strong></li>\n<li>在 <strong>企业级应用</strong> 分组下，点击 <strong>信任</strong> 开发者的证书</li>\n</ul>\n","excerpt":"","more":"<p>去年8月份的时候由于公司的需求，开发了一个只在司机间使用的企业内部的iOS应用，当时就打算写一篇文章来总结一下了，然而我是重度拖延症患者，一直拖着没完成。一年过去了，今天才想起来这回事，才开始动手写这篇文章。</p>\n<h2 id=\"企业内部应用\"><a href=\"#企业内部应用\" class=\"headerlink\" title=\"企业内部应用\"></a>企业内部应用</h2><p>企业内部应用，即只在企业部门和员工内部使用、不对外公开的应用。苹果提供了专门的<code>In-House</code>证书用来发布这种应用，可以分发给任意的手机，只要通过一个URL即可下载安装，不用上传到<code>App Stroe</code>审核。我把企业内部应用也叫做<code>In-House</code>应用。</p>\n<p><code>In-House</code>应用，有时需要根据部门需求进行版本的快速迭代，因为不需要<code>App Store</code>审核，所以可以做到随时修改，随时发布，节省了大量的时间。<code>In-House</code>证书还可以用于应用的内测分发，现在大部分的内测分发平台如蒲公英，Fir.im等的公测功能就是使用<code>In-House</code>证书实现的。</p>\n<h4 id=\"必须具备的两个条件：\"><a href=\"#必须具备的两个条件：\" class=\"headerlink\" title=\"必须具备的两个条件：\"></a>必须具备的两个条件：</h4><ul>\n<li>企业开发者账号。99$的普通开发者账号不行，必须以企业的名义申请一个299$的企业开发者账号<code>Apple Developer Enterprise Program</code></li>\n<li>带SSL证书的域名。企业内部应用需要把ipa文件上传到服务器，然后通过一个链接来下载安装，而苹果很重视安全性，要求这个链接的域名必须具有SSL证书，支持 https ，否则无法安装。</li>\n</ul>\n<p>SSL证书其实并不是必需的，可以使用一些知名的云存储服务，比如亚马逊的AWS，阿里云等，这些大公司的云存储都支持Https，我用的就是AWS的S3云存储，但299$的企业开发者账号就避免不了。</p>\n<h4 id=\"准备的文件\"><a href=\"#准备的文件\" class=\"headerlink\" title=\"准备的文件\"></a>准备的文件</h4><ul>\n<li><code>ipa</code>文件。</li>\n<li><code>plist</code>文件。名称必须与<code>ipa</code>文件一致，用于配置bundle id、版本号、<code>ipa</code>文件的URL、应用图标等。</li>\n<li>@1x 和 @2x 的Icon。下载安装时显示应用图标。</li>\n</ul>\n<h2 id=\"打包\"><a href=\"#打包\" class=\"headerlink\" title=\"打包\"></a>打包</h2><ol>\n<li>创建发布证书(<strong>Production Certificates</strong>)，选择<code>In-House</code>类型的，过程我就不赘述了，和其他证书一样。<br><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/BF3C42FA-2DBD-4CD2-9B0F-F1A7FB8EBBF9.png\" alt=\"\"></li>\n<li>创建配置文件(<strong>Distribution Provisioning Profiles</strong>)<br><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/61A9C0ED-8A61-455F-803D-27F2F80BD358.png\" alt=\"\"><br><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/F5FE4D91-A39D-43BE-9173-9583DC027F89.png\" alt=\"\"></li>\n<li>在Xcode选择对应的Code Signing 和 Provisioning Profile, Archive<br><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/54CDD771-A9ED-4A79-AA73-C5DA1DE9B6A2.png\" alt=\"\"></li>\n<li>导出 ipa 文件</li>\n</ol>\n<p><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/C2A751F9-A8B6-4888-877A-62DEB4F96A3D.png\" alt=\"\"></p>\n<h2 id=\"plist-文件\"><a href=\"#plist-文件\" class=\"headerlink\" title=\"plist 文件\"></a>plist 文件</h2><p>Xcode 5 及其以前打包<code>In-House</code>应用会一起生成<code>ipa</code>和<code>plist</code>文件，但Xcode 6 以后就只有<code>ipa</code>文件了，所以要手动生成 <code>plist</code>文件。<br>文件格式如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">plist</span> <span class=\"attr\">version</span>=<span class=\"string\">\"1.0\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dict</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>items<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">array</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">dict</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>assets<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">array</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">dict</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>kind<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">string</span>&gt;</span>software-package<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>url<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">string</span>&gt;</span>[INSERT THE URL FOR YOUR IPA HERE. e.g : https://s3-us-west-2.amazonaws.com/folder/appName-version.ipa]<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">dict</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">dict</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>kind<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">string</span>&gt;</span>full-size-image<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>needs-shine<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">true</span>/&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>url<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">string</span>&gt;</span>[INSERT THE URL FOR INSTALLATION @2x ICON HERE. e.g : https://s3-us-west-2.amazonaws.com/folder/images/Icon@2x.png]<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">dict</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">dict</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>kind<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">string</span>&gt;</span>display-image<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>needs-shine<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">true</span>/&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>url<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">string</span>&gt;</span>[INSERT THE URL FOR INSTALLATION ICON HERE. e.g : https://s3-us-west-2.amazonaws.com/folder/images/Icon.png]<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">dict</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">array</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>metadata<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">dict</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>bundle-identifier<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">string</span>&gt;</span>[INSERT BUNDLE ID HERE]<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>bundle-version<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">string</span>&gt;</span>[INSERT VERSION HERE]<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>kind<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">string</span>&gt;</span>software<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></div><div class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">string</span>&gt;</span>[INSERT APP TITLE HERE. The Title will present to the user installing the app]<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">dict</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">dict</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">array</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dict</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">plist</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>在<code>plist</code>文件中输入<code>ipa</code>的URL、安装时显示的 icon 的url、bundle id、版本号、安装前的提示信息。</p>\n<h2 id=\"发布与安装\"><a href=\"#发布与安装\" class=\"headerlink\" title=\"发布与安装\"></a>发布与安装</h2><h4 id=\"发布\"><a href=\"#发布\" class=\"headerlink\" title=\"发布\"></a>发布</h4><p>把<code>ipa</code>、配置好的<code>plist</code> 文件和图标一起上传AWS的S3云存储上即可。</p>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><p>iOS的企业内部应用是通过访问<code>plist</code>文件来安装的，因为<code>plist</code>文件中包含了对应的<code>ipa</code>文件和图标的URL，iPhone会根据URL自动下载并安装应用程序。</p>\n<p>在iPhone的<code>Safari</code>浏览器中输入：</p>\n<pre><code>itms-services://?action=download-manifest&amp;url=https://s3-us-west-2.amazonaws.com/folder/appName-version.plist\n</code></pre><p>首先会询问是否打开要打开链接，点击“打开”</p>\n<p><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/515BAA10430C80AC9421639148B387E3.jpg\" alt=\"\"></p>\n<p>然后询问是否要安装App，点击“安装”</p>\n<p><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/ACEEDF6B084EAC46F70F6D1494CB5EDF.jpg\" alt=\"\"></p>\n<h2 id=\"自动更新\"><a href=\"#自动更新\" class=\"headerlink\" title=\"自动更新\"></a>自动更新</h2><p>为了避免每次发布后都需要通知别人更新App的麻烦事，自动更新是必备的。与后台沟通，设计一个更新接口<code>GET /updates</code></p>\n<h6 id=\"Query-Parameters\"><a href=\"#Query-Parameters\" class=\"headerlink\" title=\"Query Parameters\"></a>Query Parameters</h6><table>\n<thead>\n<tr>\n<th>name</th>\n<th>required</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>platform</td>\n<td>YES</td>\n<td>String</td>\n<td>平台，ios / android</td>\n</tr>\n<tr>\n<td>version</td>\n<td>YES</td>\n<td>String</td>\n<td>当前版本号，比如：1.0.0</td>\n</tr>\n</tbody>\n</table>\n<h6 id=\"Response\"><a href=\"#Response\" class=\"headerlink\" title=\"Response\"></a>Response</h6><p>Status-Code: 200 OK</p>\n<pre><code>{\n      &quot;data&quot;: {\n          &quot;update&quot; : true,\n          &quot;lastest&quot; : &quot;1.0.1&quot;,\n          &quot;url&quot; : &quot;itms-services://?action=download-manifest&amp;url=https://s3-us-west-2.amazonaws.com/folder/appName-1.0.1.plist&quot;\n    },\n      &quot;error&quot;: {}\n}\n</code></pre><p>App一启动时，调用<code>GET /updates</code>接口传递平台参数和当前版本号给后台进行检查，后台判断当前版本是否为最新版，如果不是最新版，则返回最新版本号和对应的下载链接，然后用浏览器打开返回的URL进行安装即可。</p>\n<p>代码如下：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">upgrade</span><span class=\"params\">()</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">let</span> params = [</div><div class=\"line\">        \t<span class=\"string\">\"platform\"</span> : <span class=\"string\">\"ios\"</span>, </div><div class=\"line\">        \t<span class=\"string\">\"version\"</span> : <span class=\"type\">CKAppInfo</span>.releaseVersion()</div><div class=\"line\">        ]</div><div class=\"line\">        <span class=\"type\">ObjectRequest</span>(<span class=\"type\">URLRequest</span>: <span class=\"type\">UpdateRouter</span>.<span class=\"type\">CheckUpdate</span>(params)).load(</div><div class=\"line\">            successHandler: &#123; (promotion: <span class=\"type\">Promotion</span>?) -&gt; <span class=\"type\">Void</span> <span class=\"keyword\">in</span></div><div class=\"line\">                <span class=\"type\">SWLog</span>(promotion)</div><div class=\"line\">                </div><div class=\"line\">                <span class=\"keyword\">if</span> promotion?.update == <span class=\"literal\">true</span> &#123; <span class=\"comment\">// different version</span></div><div class=\"line\">                    </div><div class=\"line\">                    <span class=\"keyword\">let</span> alert = <span class=\"type\">DVAlertController</span>(title: <span class=\"string\">\"Upgrade\"</span>, message: <span class=\"string\">\"update to latest version\"</span>, preferredStyle: <span class=\"type\">UIAlertControllerStyle</span>.<span class=\"type\">Alert</span>)</div><div class=\"line\">                    alert.addAction(<span class=\"type\">UIAlertAction</span>(title: <span class=\"string\">\"Upgrade\"</span>, style: <span class=\"type\">UIAlertActionStyle</span>.<span class=\"type\">Default</span>, handler: &#123; (<span class=\"number\">_</span>) -&gt; <span class=\"type\">Void</span> <span class=\"keyword\">in</span></div><div class=\"line\">                        <span class=\"keyword\">let</span> url = <span class=\"type\">NSURL</span>(string:promotion!.url!)</div><div class=\"line\">                        <span class=\"type\">UIApplication</span>.sharedApplication().openURL(url!)</div><div class=\"line\">                    &#125;))</div><div class=\"line\">                    </div><div class=\"line\">                    alert.show(animated: <span class=\"literal\">true</span>, completion: <span class=\"literal\">nil</span>)</div><div class=\"line\">                    <span class=\"type\">SWLog</span>(<span class=\"string\">\"different version\"</span>)</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;, failHandler: &#123; (error) -&gt; <span class=\"type\">Void</span> <span class=\"keyword\">in</span></div><div class=\"line\">                <span class=\"keyword\">self</span>.creatAlert(<span class=\"string\">\"checkout upgrade failed\"</span>)</div><div class=\"line\">        &#125;)</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h2 id=\"不信任的企业开发者\"><a href=\"#不信任的企业开发者\" class=\"headerlink\" title=\"不信任的企业开发者\"></a>不信任的企业开发者</h2><p>如果你的手机是 iOS 9 系统，那么第一次打开企业级应用时，你并不能打开App，而是看到下面的信息：</p>\n<p><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/iphone6-ios9-enterprise-untrusted_enterprise_app.png\" alt=\"\"></p>\n<p>苹果是一个极其重视安全性的公司，iOS 9 以后，安装的企业级应用在第一次打开之前必须要用户手动去信任这些App，参考<a href=\"https://support.apple.com/en-us/HT204460\">Guidelines for installing custom enterprise apps on iOS</a>。具体步骤如下：</p>\n<ul>\n<li>打开 <strong>设置</strong> –&gt; <strong>通用</strong> –&gt; <strong>描述文件与设备管理</strong></li>\n<li>在 <strong>企业级应用</strong> 分组下，点击 <strong>信任</strong> 开发者的证书</li>\n</ul>\n"},{"title":"Git的反悔操作(二)","_content":"\n## 概述\n\n继 [Git的反悔操作（一）](http://jumpingfrog0.github.io/2016/2016-08-17-git-go-back-1/)，接下来讲讲`git`中的重写历史。\n\n> 文章大部分翻译于 [Undoing Changes](https://www.atlassian.com/git/tutorials/undoing-changes) 和 [Rewriting history](https://www.atlassian.com/git/tutorials/rewriting-history)，并结合了自己的一些理解和补充。\n\n`Git`的主要工作是确保你不会丢失一次已提交的改动，但它也被设计为你对开发工作流具有完全的控制，包括让你确切地定义项目历史看起来的样子，但这创造了丢失提交的潜力。`Git`提供了一些重写历史的命令，使用它们可能导致丢失内容。\n\n这篇文章讨论了一些最常见的重写已提交快照的原因，展示了如何避免陷入这样做的陷阱。\n\n## 重写历史(Rewriting history)\n\n### git commit --amend\n\n`git commit --amend`是修复最近的提交很方便的一种方式，它让你把已暂存的改动和上一次的提交合并在一起，而不是完整地提交一个新的快照，也可以仅仅编辑上一次提交的备注而不用改变它的快照。\n\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/git-commit-amend.svg)\n\n`amend`并不仅仅改变最近的提交，而是完全地代替它。对`Git`而言，它看起来像是一个全新的提交（可视化为上图的星号），在处理公有仓库时牢记这一点很重要。\n\n#### 用法\n\n\tgit commit --amend\n\t\n合并暂存区的改动和上一次提交，并用最终的快照代替上一次提交。运行这行命令时，如果没有任何东西被添加至暂存区，则只会让你编辑上一次提交的备注，不会改变快照。\n\n在开发过程中，过早地提交一直会发生，很容易就会忘记暂存一个文件或写错了commit的注释，`--amend`可以很方便地修复这个小错误。\n\n#### 不要`amend`公有的提交\n\n在[git reset](http://jumpingfrog0.github.io/2016/2016-08-17-git-go-back-1/#git-reset)部分，我们已经讨论了为什么你不应该重置那些与其他开发者共享的提交，`amend`也一样，不要修改已经推送到公有仓库的提交。\n\n`amend`提交实际上是一个全新的提交，上一个提交会从项目历史中移除，这和`reset`一个公有的快照是一样的结果。如果你`amend`那些其他开发者在那基础上工作的commits，就像他们以此为基础的工作从项目历史中被销毁一样，这会让开发者们陷入迷惑的境地，并很难恢复原样。\n\n#### 示例\n\n接下来的例子展示了开发中一个普通的场景。我们编辑了一些文件，希望在一个单一的快照提交它们，但却忘记添加其中一个文件至暂存区。修复这个错误只是一个简单的事，把其他文件加入暂存区，然后使用`--amend`提交即可。\n\n\t# Edit hello.py and main.py\n\tgit add hello.py\n\tgit commit\n\t\n\t# Realize you forgot to add the changes from main.py\n\tgit add main.py\n\tgit commit --amend --no-edit\n\t\n编辑器将从上一个提交中自动填充注释，使用`--no-edit`则你不需要改变提交的注释。如有必要，你也可以修改注释（不使用`--no-edit`）。这个最终的提交将会取代不完整的那一个提交，它看起来就像我们只在一个单一的快照中提交了`hello.py`和`main.py`的改动。\n\n### git rebase\n\n","source":"_posts/2016-08-17-git-go-back-2.md","raw":"title: Git的反悔操作(二)\n------------------\n\n## 概述\n\n继 [Git的反悔操作（一）](http://jumpingfrog0.github.io/2016/2016-08-17-git-go-back-1/)，接下来讲讲`git`中的重写历史。\n\n> 文章大部分翻译于 [Undoing Changes](https://www.atlassian.com/git/tutorials/undoing-changes) 和 [Rewriting history](https://www.atlassian.com/git/tutorials/rewriting-history)，并结合了自己的一些理解和补充。\n\n`Git`的主要工作是确保你不会丢失一次已提交的改动，但它也被设计为你对开发工作流具有完全的控制，包括让你确切地定义项目历史看起来的样子，但这创造了丢失提交的潜力。`Git`提供了一些重写历史的命令，使用它们可能导致丢失内容。\n\n这篇文章讨论了一些最常见的重写已提交快照的原因，展示了如何避免陷入这样做的陷阱。\n\n## 重写历史(Rewriting history)\n\n### git commit --amend\n\n`git commit --amend`是修复最近的提交很方便的一种方式，它让你把已暂存的改动和上一次的提交合并在一起，而不是完整地提交一个新的快照，也可以仅仅编辑上一次提交的备注而不用改变它的快照。\n\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/git-commit-amend.svg)\n\n`amend`并不仅仅改变最近的提交，而是完全地代替它。对`Git`而言，它看起来像是一个全新的提交（可视化为上图的星号），在处理公有仓库时牢记这一点很重要。\n\n#### 用法\n\n\tgit commit --amend\n\t\n合并暂存区的改动和上一次提交，并用最终的快照代替上一次提交。运行这行命令时，如果没有任何东西被添加至暂存区，则只会让你编辑上一次提交的备注，不会改变快照。\n\n在开发过程中，过早地提交一直会发生，很容易就会忘记暂存一个文件或写错了commit的注释，`--amend`可以很方便地修复这个小错误。\n\n#### 不要`amend`公有的提交\n\n在[git reset](http://jumpingfrog0.github.io/2016/2016-08-17-git-go-back-1/#git-reset)部分，我们已经讨论了为什么你不应该重置那些与其他开发者共享的提交，`amend`也一样，不要修改已经推送到公有仓库的提交。\n\n`amend`提交实际上是一个全新的提交，上一个提交会从项目历史中移除，这和`reset`一个公有的快照是一样的结果。如果你`amend`那些其他开发者在那基础上工作的commits，就像他们以此为基础的工作从项目历史中被销毁一样，这会让开发者们陷入迷惑的境地，并很难恢复原样。\n\n#### 示例\n\n接下来的例子展示了开发中一个普通的场景。我们编辑了一些文件，希望在一个单一的快照提交它们，但却忘记添加其中一个文件至暂存区。修复这个错误只是一个简单的事，把其他文件加入暂存区，然后使用`--amend`提交即可。\n\n\t# Edit hello.py and main.py\n\tgit add hello.py\n\tgit commit\n\t\n\t# Realize you forgot to add the changes from main.py\n\tgit add main.py\n\tgit commit --amend --no-edit\n\t\n编辑器将从上一个提交中自动填充注释，使用`--no-edit`则你不需要改变提交的注释。如有必要，你也可以修改注释（不使用`--no-edit`）。这个最终的提交将会取代不完整的那一个提交，它看起来就像我们只在一个单一的快照中提交了`hello.py`和`main.py`的改动。\n\n### git rebase\n\n","slug":"2016-08-17-git-go-back-2","published":1,"date":"2016-08-28T15:48:56.000Z","updated":"2016-08-28T15:48:56.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciw78hu7i0005bg82vi3pm4pe","content":"<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>继 <a href=\"http://jumpingfrog0.github.io/2016/2016-08-17-git-go-back-1/\" target=\"_blank\" rel=\"external\">Git的反悔操作（一）</a>，接下来讲讲<code>git</code>中的重写历史。</p>\n<blockquote>\n<p>文章大部分翻译于 <a href=\"https://www.atlassian.com/git/tutorials/undoing-changes\" target=\"_blank\" rel=\"external\">Undoing Changes</a> 和 <a href=\"https://www.atlassian.com/git/tutorials/rewriting-history\" target=\"_blank\" rel=\"external\">Rewriting history</a>，并结合了自己的一些理解和补充。</p>\n</blockquote>\n<p><code>Git</code>的主要工作是确保你不会丢失一次已提交的改动，但它也被设计为你对开发工作流具有完全的控制，包括让你确切地定义项目历史看起来的样子，但这创造了丢失提交的潜力。<code>Git</code>提供了一些重写历史的命令，使用它们可能导致丢失内容。</p>\n<p>这篇文章讨论了一些最常见的重写已提交快照的原因，展示了如何避免陷入这样做的陷阱。</p>\n<h2 id=\"重写历史-Rewriting-history\"><a href=\"#重写历史-Rewriting-history\" class=\"headerlink\" title=\"重写历史(Rewriting history)\"></a>重写历史(Rewriting history)</h2><h3 id=\"git-commit-–amend\"><a href=\"#git-commit-–amend\" class=\"headerlink\" title=\"git commit –amend\"></a>git commit –amend</h3><p><code>git commit --amend</code>是修复最近的提交很方便的一种方式，它让你把已暂存的改动和上一次的提交合并在一起，而不是完整地提交一个新的快照，也可以仅仅编辑上一次提交的备注而不用改变它的快照。</p>\n<p><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/git-commit-amend.svg\" alt=\"\"></p>\n<p><code>amend</code>并不仅仅改变最近的提交，而是完全地代替它。对<code>Git</code>而言，它看起来像是一个全新的提交（可视化为上图的星号），在处理公有仓库时牢记这一点很重要。</p>\n<h4 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h4><pre><code>git commit --amend\n</code></pre><p>合并暂存区的改动和上一次提交，并用最终的快照代替上一次提交。运行这行命令时，如果没有任何东西被添加至暂存区，则只会让你编辑上一次提交的备注，不会改变快照。</p>\n<p>在开发过程中，过早地提交一直会发生，很容易就会忘记暂存一个文件或写错了commit的注释，<code>--amend</code>可以很方便地修复这个小错误。</p>\n<h4 id=\"不要amend公有的提交\"><a href=\"#不要amend公有的提交\" class=\"headerlink\" title=\"不要amend公有的提交\"></a>不要<code>amend</code>公有的提交</h4><p>在<a href=\"http://jumpingfrog0.github.io/2016/2016-08-17-git-go-back-1/#git-reset\" target=\"_blank\" rel=\"external\">git reset</a>部分，我们已经讨论了为什么你不应该重置那些与其他开发者共享的提交，<code>amend</code>也一样，不要修改已经推送到公有仓库的提交。</p>\n<p><code>amend</code>提交实际上是一个全新的提交，上一个提交会从项目历史中移除，这和<code>reset</code>一个公有的快照是一样的结果。如果你<code>amend</code>那些其他开发者在那基础上工作的commits，就像他们以此为基础的工作从项目历史中被销毁一样，这会让开发者们陷入迷惑的境地，并很难恢复原样。</p>\n<h4 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h4><p>接下来的例子展示了开发中一个普通的场景。我们编辑了一些文件，希望在一个单一的快照提交它们，但却忘记添加其中一个文件至暂存区。修复这个错误只是一个简单的事，把其他文件加入暂存区，然后使用<code>--amend</code>提交即可。</p>\n<pre><code># Edit hello.py and main.py\ngit add hello.py\ngit commit\n\n# Realize you forgot to add the changes from main.py\ngit add main.py\ngit commit --amend --no-edit\n</code></pre><p>编辑器将从上一个提交中自动填充注释，使用<code>--no-edit</code>则你不需要改变提交的注释。如有必要，你也可以修改注释（不使用<code>--no-edit</code>）。这个最终的提交将会取代不完整的那一个提交，它看起来就像我们只在一个单一的快照中提交了<code>hello.py</code>和<code>main.py</code>的改动。</p>\n<h3 id=\"git-rebase\"><a href=\"#git-rebase\" class=\"headerlink\" title=\"git rebase\"></a>git rebase</h3>","excerpt":"","more":"<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>继 <a href=\"http://jumpingfrog0.github.io/2016/2016-08-17-git-go-back-1/\">Git的反悔操作（一）</a>，接下来讲讲<code>git</code>中的重写历史。</p>\n<blockquote>\n<p>文章大部分翻译于 <a href=\"https://www.atlassian.com/git/tutorials/undoing-changes\">Undoing Changes</a> 和 <a href=\"https://www.atlassian.com/git/tutorials/rewriting-history\">Rewriting history</a>，并结合了自己的一些理解和补充。</p>\n</blockquote>\n<p><code>Git</code>的主要工作是确保你不会丢失一次已提交的改动，但它也被设计为你对开发工作流具有完全的控制，包括让你确切地定义项目历史看起来的样子，但这创造了丢失提交的潜力。<code>Git</code>提供了一些重写历史的命令，使用它们可能导致丢失内容。</p>\n<p>这篇文章讨论了一些最常见的重写已提交快照的原因，展示了如何避免陷入这样做的陷阱。</p>\n<h2 id=\"重写历史-Rewriting-history\"><a href=\"#重写历史-Rewriting-history\" class=\"headerlink\" title=\"重写历史(Rewriting history)\"></a>重写历史(Rewriting history)</h2><h3 id=\"git-commit-–amend\"><a href=\"#git-commit-–amend\" class=\"headerlink\" title=\"git commit –amend\"></a>git commit –amend</h3><p><code>git commit --amend</code>是修复最近的提交很方便的一种方式，它让你把已暂存的改动和上一次的提交合并在一起，而不是完整地提交一个新的快照，也可以仅仅编辑上一次提交的备注而不用改变它的快照。</p>\n<p><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/git-commit-amend.svg\" alt=\"\"></p>\n<p><code>amend</code>并不仅仅改变最近的提交，而是完全地代替它。对<code>Git</code>而言，它看起来像是一个全新的提交（可视化为上图的星号），在处理公有仓库时牢记这一点很重要。</p>\n<h4 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h4><pre><code>git commit --amend\n</code></pre><p>合并暂存区的改动和上一次提交，并用最终的快照代替上一次提交。运行这行命令时，如果没有任何东西被添加至暂存区，则只会让你编辑上一次提交的备注，不会改变快照。</p>\n<p>在开发过程中，过早地提交一直会发生，很容易就会忘记暂存一个文件或写错了commit的注释，<code>--amend</code>可以很方便地修复这个小错误。</p>\n<h4 id=\"不要amend公有的提交\"><a href=\"#不要amend公有的提交\" class=\"headerlink\" title=\"不要amend公有的提交\"></a>不要<code>amend</code>公有的提交</h4><p>在<a href=\"http://jumpingfrog0.github.io/2016/2016-08-17-git-go-back-1/#git-reset\">git reset</a>部分，我们已经讨论了为什么你不应该重置那些与其他开发者共享的提交，<code>amend</code>也一样，不要修改已经推送到公有仓库的提交。</p>\n<p><code>amend</code>提交实际上是一个全新的提交，上一个提交会从项目历史中移除，这和<code>reset</code>一个公有的快照是一样的结果。如果你<code>amend</code>那些其他开发者在那基础上工作的commits，就像他们以此为基础的工作从项目历史中被销毁一样，这会让开发者们陷入迷惑的境地，并很难恢复原样。</p>\n<h4 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h4><p>接下来的例子展示了开发中一个普通的场景。我们编辑了一些文件，希望在一个单一的快照提交它们，但却忘记添加其中一个文件至暂存区。修复这个错误只是一个简单的事，把其他文件加入暂存区，然后使用<code>--amend</code>提交即可。</p>\n<pre><code># Edit hello.py and main.py\ngit add hello.py\ngit commit\n\n# Realize you forgot to add the changes from main.py\ngit add main.py\ngit commit --amend --no-edit\n</code></pre><p>编辑器将从上一个提交中自动填充注释，使用<code>--no-edit</code>则你不需要改变提交的注释。如有必要，你也可以修改注释（不使用<code>--no-edit</code>）。这个最终的提交将会取代不完整的那一个提交，它看起来就像我们只在一个单一的快照中提交了<code>hello.py</code>和<code>main.py</code>的改动。</p>\n<h3 id=\"git-rebase\"><a href=\"#git-rebase\" class=\"headerlink\" title=\"git rebase\"></a>git rebase</h3>"},{"title":"Git的反悔操作(一)","_content":"\n## 概述\n\n这次主要来讲讲`Git`的反悔操作，自己平时在写代码的过程中经常会出现想要弃用所有的改动或回滚到上一次`commit`的情况。`Git`上的反悔操作有`reset`、`rebase`、`revert`等，每个操作各有区别和对应的使用场景，这里做下总结。\n\n`Git`的反悔操作有两大类:\n\n* 撤销改动 ( Undoing Change )\n* 重写历史 ( Rewriting History )\n\n> 文章大部分翻译于 [Undoing Changes](https://www.atlassian.com/git/tutorials/undoing-changes) 和 [Rewriting history](https://www.atlassian.com/git/tutorials/rewriting-history)，并结合了自己的一些理解和补充。\n\n\n## 撤销改动(Undoing Change)\n\n### git checkout\n\n`git checkout`有三个不同的功能：切换分支、回滚至某个commit、回滚一个文件至某个commit。切换分支是`git checkout`最常见的功能，不做介绍，这里主要介绍下它在撤销文件改动上的应用。\n\n#### 回滚至某个commit\n\n\tgit chekcout <commit>\n\t\n上面的命令是回滚到工作目录中指定的 commit 上，这是一个 **只读** 操作，不会影响到当前工作区的状态，它在你查看旧版本的文件时不会损坏你的代码仓库。通常，`HEAD`指向master分支或其他本地分支，当使用`git checkout`回滚到以前的 commit 时，`HEAD`就不再指向某个分支了，而是直接指向一个commit，这时就叫做`detached HEAD`状态。\n\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/05.svg)\n\n切换到`detached HEAD`状态时，会有一个警告。\n\n![警告](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/B419EBE2-88F9-4736-BFBB-8003DEDA13F6.png)\n\n这个警告是告诉你，你现在做的所有事情与你开发项目的其余工作区是分离的，即所有的改动与本地仓库的任一分支都无关，不会影响到其他的分支的状态。如果你准备在`detached HEAD`状态下开发新的feature，那将会没有分支允许你回退这里，当你不可避免地切换到其他分支时，将没有任何办法引用到这个feature。你可以把`detached HEAD`状态看作是正在一个未命名的分支上。\n\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/06.svg)\n\n> **[HEAD](https://git-scm.com/book/tr/v2/Git-Internals-Git-References)** 和 **[detached HEAD](https://www.atlassian.com/git/tutorials/using-branches/git-checkout)** 的区别可以参考 [How can I reconcile detached HEAD with master/origin?](http://stackoverflow.com/questions/5772192/how-can-i-reconcile-detached-head-with-master-origin)\n> \n> 将英文翻译为中文经常会词不达意，很难把握，建议还是看英文原文:)。\n\n##### 示例\n\n假设你正在进行一次疯狂的重构，但现在你不确定是否要继续下去。这时你想要看一下开始这次重构之前项目原来的样子，首先你需要找到你想要查看的版本的ID。\n\n\tgit log --oneline\n\t\n假设你的项目历史看起来像下面这样：\n\n\tb7119f2 Continue doing crazy things\n\t872fa7e Try something crazy\n\ta1e8fb5 Make some important changes to hello.py\n\t435b61d Create hello.py\n\t9773e52 Initial import\n\t\n你可以使用`git checkout`查看`Make some important changes to hello.py`这次commit，如下：\n\n\tgit checkout a1e8fb5\n\t\n这让你的工作区切换到了`a1e8fb5`comimit的状态。你可以查看文件、编译项目、运行测试用例，甚至编辑文件，完全不用担心丢失项目“当前”的状态，你在这里做的所有修改都不会被保存到项目中。当你想要继续那次疯狂的重构时，你需要回到项目的“当前”状态。\n\n\tgit checkout master\n\n#### 回滚一个文件至某个commit\n\n\tgit checkout <commit> <file>\n\t\n回滚一个文件到以前的一个版本，这个操作会 **影响** 当前工作区的状态。\n\n你可以在一个新的快照中重新提交这个旧版本，当然也包含其他任何文件。实际上，`checkout`的这个用法和`revert`类似，只不过是仅针对一个文件。\n\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/02.svg)\n\n##### 示例\n\n如果你只对单个文件感兴趣，你可以使用\t`git checkout` 获取到该文件的旧版本。比如，如果你只想要看看 某次commit下的`hello.py`文件，可以使用下面的命令：\n\n\tgit checkout a1e8fb5 hello.py\n\n记住，不像切换commit，这会影响当前项目的状态。这个旧版本的文件的状态会变为 `Change to be committed`，给你一个机会将该文件恢复到先前的版本。\n\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/598F500E-7F1F-4103-8D50-417B5AE71481.png)\n\n如果你决定不需要保留这个旧版本了，你可以切换到最近的版本，如下：\n\n\tgit checkout HEAD hello.py\n\n### git revert\n\n`git revert` 可以撤销一个已提交的快照(snapshot)，但它解决的是如何撤销已提交的被引入的改动，并生成内容来追加一个新的提交，而不是从项目的历史中移除这个提交，这避免了丢失历史记录，这对于项目的每一次修改的历史记录的完整性来说非常重要，并这是服务于可靠的多人协作开发的。\n\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/git-revert-01.svg)\n\n\tgit revert <commit>\n\t\n这句命令会撤销这次<commit>所有被引入的改动，生成一个新的commit，并应用在当前分支上。\n\n当你想从你的项目历史中移除一个完整的commit时，就应该使用`git revert`。比如，你正在追踪一个Bug并发现它是在一次单一的commit中被引入的，你可以手动进行修改，删除有Bug的代码来修复它，然后提交一个新的快照，但这样很麻烦，效率也很低，你更应该做的是，使用`git revert`自动完成，撤销这次commit所有被引入的改动。\n\n#### Reverting vs. Resetting\n\n很重要的一点，`revert`是对一次单一的commit的撤销，并不是真正意义上的回滚。它不是通过移除项目中一次commit后面的所有提交来“回滚”之前的状态，实际上那样的操作在`Git`上被叫做`reset`，而不是`revert`。\n\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/04.svg)\n\n比起`reset`，`revert`有两个重要的好处：\n\n* `revert`不会改变项目的历史。如果那些commits已经推到了共享的代码仓库，它会是一个“安全”的操作。为什么改变共享代码仓库的历史是危险的，请看后面的`git reset`的介绍。\n\n* `revert`可以作用于历史中 **任意** 的单一的commit节点，然而`reset`只能做到从当前 **最新** 的commit开始回滚。比如说，如果你想要只撤销一次旧的指定的commit，使用`git reset`，你则必须移除该commit和该commit之后出现的所有commits，然后再把那些随后的commit重新提交。毫无疑问，这种撤销的方式一点都不优雅。\n\n#### 示例1\n\n下面的例子是`git revert`的一个简单示例，提交了一个快照，然后立即使用`revert`撤销了它。\n\n\t# Edit some tracked files\n\n\t# Commit a snapshot\n\tgit commit -m \"Make some changes that will be undone\"\n\t\n\t# Revert the commit we just created\n\tgit revert HEAD\n\t\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/git-revert-02.svg)\n\n> 注意：在`revert`后，第4次commit仍然被保留在项目历史中，`git revert`新增了一个新的commit来撤销它的改动，而不是删除它。结果就是，第3次和第5次commit的代码是完全一样的，第4次commit依然保留在历史中，以防我们想要重新回滚到这里。\n\n#### 示例2\n\n假设你发现在某次commit中引入了一个bug，你想使用 `git revert`来回滚。查看历史：\n\t\n\tgit log --oneline\n\t\n项目历史如下：\n\n\t417e4a9 commit 4\n\t427d76b commit 3\n\t1642475 introduced a bug\n\t71d3ef7 commit 1\n\tbf4f6f6 git initial\n\t\n使用 `revert` 回滚到 `1642475`\n\n\tgit revert 1642475\n\t\n但你会发现没有想象中那么简单，而是发生冲突了，报错如下：\n\n\terror: could not revert 1642475... introduced a bug\n\thint: after resolving the conflicts, mark the corrected paths\n\thint: with 'git add <paths>' or 'git rm <paths>'\n\thint: and commit the result with 'git commit'\n\t\n`revert` 仅仅是撤销`introduced a bug`这一commit的改动，默认会生成一个新的commit提交，但在它之后还有`commit 3`和`commit 4`，它们的改动不会被影响，依然保留在工作区中，因此产生了冲突。你可以手动解决冲突后commit，但这却是个麻烦且不优雅的方式。因为`1642475`、`427d76b`和`417e4a9`这几个commit的改动被一起合并在暂存区中，如果你修改的不止一个文件，那手动解决冲突将会非常麻烦。解决方式是，默认 *不* 生成新的commit，并按顺序回滚。\n\n先强制结束`revert`\n\n\tgit revert --abort\n\t\n按顺序回滚\n\n\tgit revert 417e4a9 --no-commit\n\tgit revert 427d76b --no-commit\n\tgit revert 1642475 --no-commit\t\n\tgit revert --continue\n\t\n> `git revert --continue`，会生成带默认message的commit。\n> \n> 更多参数说明详见：[git-revert-document](https://git-scm.com/docs/git-revert)\n\n[](id:git-reset)\n### git reset\n\n如果`git revert`是以一个\"安全\"\"的方式来撤销改动，那你可以认为`git reset`是一种 *危险* 的方式。当你使用`git reset`后，将没有办法恢复原样，它是一个永恒的撤销,因为那些commits不再被任何`ref`或`reflog`引用。在使用这个工具时请务必谨慎，因为它是`git`命令中唯一一个潜在的使你的努力付诸东流的命令。\n\n`git reset`是一个功能丰富的命令，它可以用于移除已提交的快照，但它更多的是用来撤销暂存区和工作区的改动，另一种情况是，它应该只用于撤销本地的改动（不应该`reset`那些已经与其他开发者共享了的快照）。\n\n#### 用法\n\n\tgit reset <file>\n\t\n从暂存区中移除指定的文件，但保留工作区不变。它`unstage`了 *一个* 文件且没有覆盖任何改动。\n\n> 把文件加入暂存区叫做`stage`，文件修改过但还未使用`git add`加入暂存区叫做`unstage`\n\n\tgit reset\n\t\n重置暂存区匹配至最近的一次commit，但保留工作区不变。它`unstage`了 *所有* 文件且没有覆盖任何改动，让你有机会从头开始重建暂存快照。\n\n\tgit reset --hard\n\t\n重置暂存区和工作区匹配至最近的一次commit。除了`unstage`所有文件外，`--hard`还告诉`Git`也一并覆盖工作区的所有改动，也就是说，这个操作撤销了所有未提交的改动，所以在使用它前，请确定你是真的想丢弃本地的开发。\n\n\tgit reset <commit>\n\t\n将当前分支的HEAD移动至`<commit>`，重置暂存区匹配至`<commit>`，但不包括工作区。从`<commit>`开始的所有改动会被驻留在工作区，这让你可以使用更干净、更原子性的快照来重新提交项目历史。\n\n\tgit reset --hard <commit>\n\n将当前分支的HEAD移动至`<commit>`以及重置暂存区和工作区匹配至`<commit>`。它不仅撤销了未提交的改动，还撤销了`<commit>`之后的所有commits。\n\n#### 讨论\n\n正如上面提及到的，`git reset`是用来从一个代码仓库中移除改动的。没有`--hard`标记时，`git reset`通过`unstage`改动或撤销(uncommit)一系列已提交的快照来清理干净代码仓库，然后重头开始重建它们。当一个试验已经往可怕的方向发展时，`--hard`标记就派上用场了，你需要一个干净的工作空间。\n\n`reset`是被设计来撤销 *本地* 的改动的，而`revert`是被设计来安全地撤销 *公有* 的commit的。出于完全不同的目的，这两个命令的执行结果也不同：`reset`是完全地移除有改动的地方，而`revert`则是维持原来的改动，使用一个新的commit来达到撤销的目的。\n\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/04.svg)\n\n#### 不要重置公有的历史\n\n当`<commit`后面的任一快照被推送到公有仓库时，你就不应该使用`git reset <commit>`，推送一个commit到公有仓库后，就必须假设其他开发者是依赖于它的。删除一个其他团队成员在此基础上持续开发的commit会引发团队协作上的严重问题，当他们尝试与你的代码仓库同步时，就像一大块项目历史突然地消失了。\n\n下面的例子就是当你尝试`reset`一个公有的commit时会发生的。\n\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/commit-after-git-reset.svg)\n\n一旦你在`reset`后新增一个commit，`Git`会认为你本地的历史与`origin/master`背道而驰了，当合并commit时，需要先同步你的代码仓库，这就有可能使你的团队感到迷惑和无助。\n\n所以重点就是，你打算用`git reset <commit>`来撤销你那糟糕的试验时，请确保它只作用于本地（还没被推送至远程服务器）的改动。如果你需要修复一个公有的commit，请使用`git revert`，因为它正是为了这个目的而被设计的。\n\n#### 示例\n\n##### Unstage 一个文件\n\n假设有两个文件`hello.py`和`main.py`，已经被添加到`Git`仓库中，修改这两文件并进行提交。\n\n\t# Edit both hello.py and main.py\n\n\t# Stage everything in the current directory\n\tgit add .\n\t\n\t# Realize that the changes in hello.py and main.py\n\t# should be committed in different snapshots\n\t\n\t# Unstage main.py\n\tgit reset main.py\n\t\n\t# Commit only hello.py\n\tgit commit -m \"Make some changes to hello.py\"\n\t\n\t# Commit main.py in a separate snapshot\n\tgit add main.py\n\tgit commit -m \"Edit main.py\"\n\t\n正如你所看到的，你可以使用`git reset`来`unstage`掉一些不小心加入暂存区但又与此次commit无关的文件，让你的commits保持高度的专一。\n\n##### 移除本地的commits\n\n接下来的例子展示了一个更高级的使用情况，它示范了你在一个新的试验上工作了一段时间并在提交了一些快照后，决定彻底抛弃它这整个过程究竟发生了什么。\n\n\t# Create a new file called `foo.py` and add some code to it\n\t\n\t# Commit it to the project history\n\tgit add foo.py\n\tgit commit -m \"Start developing a crazy feature\"\n\t\n\t# Edit `foo.py` again and change some other tracked files, too\n\t\n\t# Commit another snapshot\n\tgit commit -a -m \"Continue my crazy feature\"\n\t\n\t# Decide to scrap the feature and remove the associated commits\n\tgit reset --hard HEAD~2\n\t\n`git reset HEAD~2`这句命令让当前分支回滚了两个提交，实际上，从项目历史上删除了我们刚刚创建的两个快照。请记住，这种类型的`reset`应该只用在未推送到远程服务器的commits上，绝不要在那些已经被推送至公有仓库的commits上执行上面的操作。\n\n### git clean\n\n`git clean`从工作区移除未追踪的文件。这的确是一个更方便的命令，因为它使用`git status`琐细地查看哪些文件未追踪，然后手动删除它们。就像普通的`rm`命令一样，`git clean`是不可恢复的，所以在运行它之前请确保你是真的想要删除那些未追踪的文件。\n\n`git clean`命令经常和`git reset --hard`一起被执行，`reset`仅仅影响已追踪的文件，因此需要`git clean`来单独清理未追踪的文件，这两个命令相结合可以让你的工作区回滚到一个特定的commit的确切状态。\n\n#### 用法\n\n\tgit clean -n\n\t\n执行`git clean`的“演习”。这向您展示哪个文件将会被删除，但不会真正地执行。\n\n\tgit clean -f\n\t\n从当前工作区中移除未追踪的文件。`-f(force)`标记是必需的，除非`clean.requireForce`选项被设为`false`（默认是`true`）。这不会移除`.gitignore`指定的未追踪的文件。\n\n\tgit clean -f <path>\n\t\n移除未追踪的文件，但仅限于操作指定的路径。\n\n\tgit clean -df\n\t\n从当前工作区中移除未追踪的文件和目录。\n\n\tgit clean -xf\n\t\n从当前工作区中移除未追踪的文件，包括`Git`忽略的文件。\n\n#### 讨论\n\n当你在本地仓库中做了一些令人尴尬的开发想要销毁证据时，`git reset --hard`和`git clean -f`会是你最好的朋友，运行着两个命令将会使你的工作区回滚至最近的一次commit，还你一个干净的工作区。\n\n`git clean`在`build`后清理工作区是很有用的，比如，你可以很容易地移除`.o`和`.exe`等C编译器生成的二进制文件，这是偶尔打包项目发布前的必要步骤，`-x`选项达到这个目的特别方便。\n\n记住，一起使用`git reset`和`git clean`是唯一一个具有潜在威胁的永久地删除提交的命令，所以请谨慎使用。事实上，在使用`git clean`时，-f`是必须的，`Git`的维护者甚至将它作为最基本的操作，而很多人会忘记的这一重要步骤，但这也预防了愚蠢行为而一不小心突然地删除所有辛辛苦苦写的代码。\n\n#### 示例\n\n下面的例子撤销了工作区所有的改动，包括新增的文件。假设你已经提交了一些快照，然后正在尝试一些些新的开发，但不知道自己做了什么导致了一些错误，想要撤销然后重新开始。\n\n\t# Edit some existing files\n\t# Add some new files\n\t# Realize you have no idea what you're doing\n\t\n\t# Undo changes in tracked files\n\tgit reset --hard\n\t\n\t# Remove untracked files\n\tgit clean -df\n\t\n运行完`reset/clean`一系列命令后，工作区和暂存区回滚到最近的commit，`git status`将会告诉你这是一个干净的工作区，你现在可以准备重新开始了。\n\n注意，那些新增的文件没有被加入暂存区，它们不会被`git reset --hard`影响，必须使用`git clean`删除它们。","source":"_posts/2016-08-17-git-go-back-1.md","raw":"title: Git的反悔操作(一)\n------------------\n\n## 概述\n\n这次主要来讲讲`Git`的反悔操作，自己平时在写代码的过程中经常会出现想要弃用所有的改动或回滚到上一次`commit`的情况。`Git`上的反悔操作有`reset`、`rebase`、`revert`等，每个操作各有区别和对应的使用场景，这里做下总结。\n\n`Git`的反悔操作有两大类:\n\n* 撤销改动 ( Undoing Change )\n* 重写历史 ( Rewriting History )\n\n> 文章大部分翻译于 [Undoing Changes](https://www.atlassian.com/git/tutorials/undoing-changes) 和 [Rewriting history](https://www.atlassian.com/git/tutorials/rewriting-history)，并结合了自己的一些理解和补充。\n\n\n## 撤销改动(Undoing Change)\n\n### git checkout\n\n`git checkout`有三个不同的功能：切换分支、回滚至某个commit、回滚一个文件至某个commit。切换分支是`git checkout`最常见的功能，不做介绍，这里主要介绍下它在撤销文件改动上的应用。\n\n#### 回滚至某个commit\n\n\tgit chekcout <commit>\n\t\n上面的命令是回滚到工作目录中指定的 commit 上，这是一个 **只读** 操作，不会影响到当前工作区的状态，它在你查看旧版本的文件时不会损坏你的代码仓库。通常，`HEAD`指向master分支或其他本地分支，当使用`git checkout`回滚到以前的 commit 时，`HEAD`就不再指向某个分支了，而是直接指向一个commit，这时就叫做`detached HEAD`状态。\n\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/05.svg)\n\n切换到`detached HEAD`状态时，会有一个警告。\n\n![警告](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/B419EBE2-88F9-4736-BFBB-8003DEDA13F6.png)\n\n这个警告是告诉你，你现在做的所有事情与你开发项目的其余工作区是分离的，即所有的改动与本地仓库的任一分支都无关，不会影响到其他的分支的状态。如果你准备在`detached HEAD`状态下开发新的feature，那将会没有分支允许你回退这里，当你不可避免地切换到其他分支时，将没有任何办法引用到这个feature。你可以把`detached HEAD`状态看作是正在一个未命名的分支上。\n\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/06.svg)\n\n> **[HEAD](https://git-scm.com/book/tr/v2/Git-Internals-Git-References)** 和 **[detached HEAD](https://www.atlassian.com/git/tutorials/using-branches/git-checkout)** 的区别可以参考 [How can I reconcile detached HEAD with master/origin?](http://stackoverflow.com/questions/5772192/how-can-i-reconcile-detached-head-with-master-origin)\n> \n> 将英文翻译为中文经常会词不达意，很难把握，建议还是看英文原文:)。\n\n##### 示例\n\n假设你正在进行一次疯狂的重构，但现在你不确定是否要继续下去。这时你想要看一下开始这次重构之前项目原来的样子，首先你需要找到你想要查看的版本的ID。\n\n\tgit log --oneline\n\t\n假设你的项目历史看起来像下面这样：\n\n\tb7119f2 Continue doing crazy things\n\t872fa7e Try something crazy\n\ta1e8fb5 Make some important changes to hello.py\n\t435b61d Create hello.py\n\t9773e52 Initial import\n\t\n你可以使用`git checkout`查看`Make some important changes to hello.py`这次commit，如下：\n\n\tgit checkout a1e8fb5\n\t\n这让你的工作区切换到了`a1e8fb5`comimit的状态。你可以查看文件、编译项目、运行测试用例，甚至编辑文件，完全不用担心丢失项目“当前”的状态，你在这里做的所有修改都不会被保存到项目中。当你想要继续那次疯狂的重构时，你需要回到项目的“当前”状态。\n\n\tgit checkout master\n\n#### 回滚一个文件至某个commit\n\n\tgit checkout <commit> <file>\n\t\n回滚一个文件到以前的一个版本，这个操作会 **影响** 当前工作区的状态。\n\n你可以在一个新的快照中重新提交这个旧版本，当然也包含其他任何文件。实际上，`checkout`的这个用法和`revert`类似，只不过是仅针对一个文件。\n\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/02.svg)\n\n##### 示例\n\n如果你只对单个文件感兴趣，你可以使用\t`git checkout` 获取到该文件的旧版本。比如，如果你只想要看看 某次commit下的`hello.py`文件，可以使用下面的命令：\n\n\tgit checkout a1e8fb5 hello.py\n\n记住，不像切换commit，这会影响当前项目的状态。这个旧版本的文件的状态会变为 `Change to be committed`，给你一个机会将该文件恢复到先前的版本。\n\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/598F500E-7F1F-4103-8D50-417B5AE71481.png)\n\n如果你决定不需要保留这个旧版本了，你可以切换到最近的版本，如下：\n\n\tgit checkout HEAD hello.py\n\n### git revert\n\n`git revert` 可以撤销一个已提交的快照(snapshot)，但它解决的是如何撤销已提交的被引入的改动，并生成内容来追加一个新的提交，而不是从项目的历史中移除这个提交，这避免了丢失历史记录，这对于项目的每一次修改的历史记录的完整性来说非常重要，并这是服务于可靠的多人协作开发的。\n\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/git-revert-01.svg)\n\n\tgit revert <commit>\n\t\n这句命令会撤销这次<commit>所有被引入的改动，生成一个新的commit，并应用在当前分支上。\n\n当你想从你的项目历史中移除一个完整的commit时，就应该使用`git revert`。比如，你正在追踪一个Bug并发现它是在一次单一的commit中被引入的，你可以手动进行修改，删除有Bug的代码来修复它，然后提交一个新的快照，但这样很麻烦，效率也很低，你更应该做的是，使用`git revert`自动完成，撤销这次commit所有被引入的改动。\n\n#### Reverting vs. Resetting\n\n很重要的一点，`revert`是对一次单一的commit的撤销，并不是真正意义上的回滚。它不是通过移除项目中一次commit后面的所有提交来“回滚”之前的状态，实际上那样的操作在`Git`上被叫做`reset`，而不是`revert`。\n\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/04.svg)\n\n比起`reset`，`revert`有两个重要的好处：\n\n* `revert`不会改变项目的历史。如果那些commits已经推到了共享的代码仓库，它会是一个“安全”的操作。为什么改变共享代码仓库的历史是危险的，请看后面的`git reset`的介绍。\n\n* `revert`可以作用于历史中 **任意** 的单一的commit节点，然而`reset`只能做到从当前 **最新** 的commit开始回滚。比如说，如果你想要只撤销一次旧的指定的commit，使用`git reset`，你则必须移除该commit和该commit之后出现的所有commits，然后再把那些随后的commit重新提交。毫无疑问，这种撤销的方式一点都不优雅。\n\n#### 示例1\n\n下面的例子是`git revert`的一个简单示例，提交了一个快照，然后立即使用`revert`撤销了它。\n\n\t# Edit some tracked files\n\n\t# Commit a snapshot\n\tgit commit -m \"Make some changes that will be undone\"\n\t\n\t# Revert the commit we just created\n\tgit revert HEAD\n\t\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/git-revert-02.svg)\n\n> 注意：在`revert`后，第4次commit仍然被保留在项目历史中，`git revert`新增了一个新的commit来撤销它的改动，而不是删除它。结果就是，第3次和第5次commit的代码是完全一样的，第4次commit依然保留在历史中，以防我们想要重新回滚到这里。\n\n#### 示例2\n\n假设你发现在某次commit中引入了一个bug，你想使用 `git revert`来回滚。查看历史：\n\t\n\tgit log --oneline\n\t\n项目历史如下：\n\n\t417e4a9 commit 4\n\t427d76b commit 3\n\t1642475 introduced a bug\n\t71d3ef7 commit 1\n\tbf4f6f6 git initial\n\t\n使用 `revert` 回滚到 `1642475`\n\n\tgit revert 1642475\n\t\n但你会发现没有想象中那么简单，而是发生冲突了，报错如下：\n\n\terror: could not revert 1642475... introduced a bug\n\thint: after resolving the conflicts, mark the corrected paths\n\thint: with 'git add <paths>' or 'git rm <paths>'\n\thint: and commit the result with 'git commit'\n\t\n`revert` 仅仅是撤销`introduced a bug`这一commit的改动，默认会生成一个新的commit提交，但在它之后还有`commit 3`和`commit 4`，它们的改动不会被影响，依然保留在工作区中，因此产生了冲突。你可以手动解决冲突后commit，但这却是个麻烦且不优雅的方式。因为`1642475`、`427d76b`和`417e4a9`这几个commit的改动被一起合并在暂存区中，如果你修改的不止一个文件，那手动解决冲突将会非常麻烦。解决方式是，默认 *不* 生成新的commit，并按顺序回滚。\n\n先强制结束`revert`\n\n\tgit revert --abort\n\t\n按顺序回滚\n\n\tgit revert 417e4a9 --no-commit\n\tgit revert 427d76b --no-commit\n\tgit revert 1642475 --no-commit\t\n\tgit revert --continue\n\t\n> `git revert --continue`，会生成带默认message的commit。\n> \n> 更多参数说明详见：[git-revert-document](https://git-scm.com/docs/git-revert)\n\n[](id:git-reset)\n### git reset\n\n如果`git revert`是以一个\"安全\"\"的方式来撤销改动，那你可以认为`git reset`是一种 *危险* 的方式。当你使用`git reset`后，将没有办法恢复原样，它是一个永恒的撤销,因为那些commits不再被任何`ref`或`reflog`引用。在使用这个工具时请务必谨慎，因为它是`git`命令中唯一一个潜在的使你的努力付诸东流的命令。\n\n`git reset`是一个功能丰富的命令，它可以用于移除已提交的快照，但它更多的是用来撤销暂存区和工作区的改动，另一种情况是，它应该只用于撤销本地的改动（不应该`reset`那些已经与其他开发者共享了的快照）。\n\n#### 用法\n\n\tgit reset <file>\n\t\n从暂存区中移除指定的文件，但保留工作区不变。它`unstage`了 *一个* 文件且没有覆盖任何改动。\n\n> 把文件加入暂存区叫做`stage`，文件修改过但还未使用`git add`加入暂存区叫做`unstage`\n\n\tgit reset\n\t\n重置暂存区匹配至最近的一次commit，但保留工作区不变。它`unstage`了 *所有* 文件且没有覆盖任何改动，让你有机会从头开始重建暂存快照。\n\n\tgit reset --hard\n\t\n重置暂存区和工作区匹配至最近的一次commit。除了`unstage`所有文件外，`--hard`还告诉`Git`也一并覆盖工作区的所有改动，也就是说，这个操作撤销了所有未提交的改动，所以在使用它前，请确定你是真的想丢弃本地的开发。\n\n\tgit reset <commit>\n\t\n将当前分支的HEAD移动至`<commit>`，重置暂存区匹配至`<commit>`，但不包括工作区。从`<commit>`开始的所有改动会被驻留在工作区，这让你可以使用更干净、更原子性的快照来重新提交项目历史。\n\n\tgit reset --hard <commit>\n\n将当前分支的HEAD移动至`<commit>`以及重置暂存区和工作区匹配至`<commit>`。它不仅撤销了未提交的改动，还撤销了`<commit>`之后的所有commits。\n\n#### 讨论\n\n正如上面提及到的，`git reset`是用来从一个代码仓库中移除改动的。没有`--hard`标记时，`git reset`通过`unstage`改动或撤销(uncommit)一系列已提交的快照来清理干净代码仓库，然后重头开始重建它们。当一个试验已经往可怕的方向发展时，`--hard`标记就派上用场了，你需要一个干净的工作空间。\n\n`reset`是被设计来撤销 *本地* 的改动的，而`revert`是被设计来安全地撤销 *公有* 的commit的。出于完全不同的目的，这两个命令的执行结果也不同：`reset`是完全地移除有改动的地方，而`revert`则是维持原来的改动，使用一个新的commit来达到撤销的目的。\n\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/04.svg)\n\n#### 不要重置公有的历史\n\n当`<commit`后面的任一快照被推送到公有仓库时，你就不应该使用`git reset <commit>`，推送一个commit到公有仓库后，就必须假设其他开发者是依赖于它的。删除一个其他团队成员在此基础上持续开发的commit会引发团队协作上的严重问题，当他们尝试与你的代码仓库同步时，就像一大块项目历史突然地消失了。\n\n下面的例子就是当你尝试`reset`一个公有的commit时会发生的。\n\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/commit-after-git-reset.svg)\n\n一旦你在`reset`后新增一个commit，`Git`会认为你本地的历史与`origin/master`背道而驰了，当合并commit时，需要先同步你的代码仓库，这就有可能使你的团队感到迷惑和无助。\n\n所以重点就是，你打算用`git reset <commit>`来撤销你那糟糕的试验时，请确保它只作用于本地（还没被推送至远程服务器）的改动。如果你需要修复一个公有的commit，请使用`git revert`，因为它正是为了这个目的而被设计的。\n\n#### 示例\n\n##### Unstage 一个文件\n\n假设有两个文件`hello.py`和`main.py`，已经被添加到`Git`仓库中，修改这两文件并进行提交。\n\n\t# Edit both hello.py and main.py\n\n\t# Stage everything in the current directory\n\tgit add .\n\t\n\t# Realize that the changes in hello.py and main.py\n\t# should be committed in different snapshots\n\t\n\t# Unstage main.py\n\tgit reset main.py\n\t\n\t# Commit only hello.py\n\tgit commit -m \"Make some changes to hello.py\"\n\t\n\t# Commit main.py in a separate snapshot\n\tgit add main.py\n\tgit commit -m \"Edit main.py\"\n\t\n正如你所看到的，你可以使用`git reset`来`unstage`掉一些不小心加入暂存区但又与此次commit无关的文件，让你的commits保持高度的专一。\n\n##### 移除本地的commits\n\n接下来的例子展示了一个更高级的使用情况，它示范了你在一个新的试验上工作了一段时间并在提交了一些快照后，决定彻底抛弃它这整个过程究竟发生了什么。\n\n\t# Create a new file called `foo.py` and add some code to it\n\t\n\t# Commit it to the project history\n\tgit add foo.py\n\tgit commit -m \"Start developing a crazy feature\"\n\t\n\t# Edit `foo.py` again and change some other tracked files, too\n\t\n\t# Commit another snapshot\n\tgit commit -a -m \"Continue my crazy feature\"\n\t\n\t# Decide to scrap the feature and remove the associated commits\n\tgit reset --hard HEAD~2\n\t\n`git reset HEAD~2`这句命令让当前分支回滚了两个提交，实际上，从项目历史上删除了我们刚刚创建的两个快照。请记住，这种类型的`reset`应该只用在未推送到远程服务器的commits上，绝不要在那些已经被推送至公有仓库的commits上执行上面的操作。\n\n### git clean\n\n`git clean`从工作区移除未追踪的文件。这的确是一个更方便的命令，因为它使用`git status`琐细地查看哪些文件未追踪，然后手动删除它们。就像普通的`rm`命令一样，`git clean`是不可恢复的，所以在运行它之前请确保你是真的想要删除那些未追踪的文件。\n\n`git clean`命令经常和`git reset --hard`一起被执行，`reset`仅仅影响已追踪的文件，因此需要`git clean`来单独清理未追踪的文件，这两个命令相结合可以让你的工作区回滚到一个特定的commit的确切状态。\n\n#### 用法\n\n\tgit clean -n\n\t\n执行`git clean`的“演习”。这向您展示哪个文件将会被删除，但不会真正地执行。\n\n\tgit clean -f\n\t\n从当前工作区中移除未追踪的文件。`-f(force)`标记是必需的，除非`clean.requireForce`选项被设为`false`（默认是`true`）。这不会移除`.gitignore`指定的未追踪的文件。\n\n\tgit clean -f <path>\n\t\n移除未追踪的文件，但仅限于操作指定的路径。\n\n\tgit clean -df\n\t\n从当前工作区中移除未追踪的文件和目录。\n\n\tgit clean -xf\n\t\n从当前工作区中移除未追踪的文件，包括`Git`忽略的文件。\n\n#### 讨论\n\n当你在本地仓库中做了一些令人尴尬的开发想要销毁证据时，`git reset --hard`和`git clean -f`会是你最好的朋友，运行着两个命令将会使你的工作区回滚至最近的一次commit，还你一个干净的工作区。\n\n`git clean`在`build`后清理工作区是很有用的，比如，你可以很容易地移除`.o`和`.exe`等C编译器生成的二进制文件，这是偶尔打包项目发布前的必要步骤，`-x`选项达到这个目的特别方便。\n\n记住，一起使用`git reset`和`git clean`是唯一一个具有潜在威胁的永久地删除提交的命令，所以请谨慎使用。事实上，在使用`git clean`时，-f`是必须的，`Git`的维护者甚至将它作为最基本的操作，而很多人会忘记的这一重要步骤，但这也预防了愚蠢行为而一不小心突然地删除所有辛辛苦苦写的代码。\n\n#### 示例\n\n下面的例子撤销了工作区所有的改动，包括新增的文件。假设你已经提交了一些快照，然后正在尝试一些些新的开发，但不知道自己做了什么导致了一些错误，想要撤销然后重新开始。\n\n\t# Edit some existing files\n\t# Add some new files\n\t# Realize you have no idea what you're doing\n\t\n\t# Undo changes in tracked files\n\tgit reset --hard\n\t\n\t# Remove untracked files\n\tgit clean -df\n\t\n运行完`reset/clean`一系列命令后，工作区和暂存区回滚到最近的commit，`git status`将会告诉你这是一个干净的工作区，你现在可以准备重新开始了。\n\n注意，那些新增的文件没有被加入暂存区，它们不会被`git reset --hard`影响，必须使用`git clean`删除它们。","slug":"2016-08-17-git-go-back-1","published":1,"date":"2016-08-28T15:34:53.000Z","updated":"2016-08-28T15:34:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciw78hu7i0006bg82xv07slzx","content":"<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>这次主要来讲讲<code>Git</code>的反悔操作，自己平时在写代码的过程中经常会出现想要弃用所有的改动或回滚到上一次<code>commit</code>的情况。<code>Git</code>上的反悔操作有<code>reset</code>、<code>rebase</code>、<code>revert</code>等，每个操作各有区别和对应的使用场景，这里做下总结。</p>\n<p><code>Git</code>的反悔操作有两大类:</p>\n<ul>\n<li>撤销改动 ( Undoing Change )</li>\n<li>重写历史 ( Rewriting History )</li>\n</ul>\n<blockquote>\n<p>文章大部分翻译于 <a href=\"https://www.atlassian.com/git/tutorials/undoing-changes\" target=\"_blank\" rel=\"external\">Undoing Changes</a> 和 <a href=\"https://www.atlassian.com/git/tutorials/rewriting-history\" target=\"_blank\" rel=\"external\">Rewriting history</a>，并结合了自己的一些理解和补充。</p>\n</blockquote>\n<h2 id=\"撤销改动-Undoing-Change\"><a href=\"#撤销改动-Undoing-Change\" class=\"headerlink\" title=\"撤销改动(Undoing Change)\"></a>撤销改动(Undoing Change)</h2><h3 id=\"git-checkout\"><a href=\"#git-checkout\" class=\"headerlink\" title=\"git checkout\"></a>git checkout</h3><p><code>git checkout</code>有三个不同的功能：切换分支、回滚至某个commit、回滚一个文件至某个commit。切换分支是<code>git checkout</code>最常见的功能，不做介绍，这里主要介绍下它在撤销文件改动上的应用。</p>\n<h4 id=\"回滚至某个commit\"><a href=\"#回滚至某个commit\" class=\"headerlink\" title=\"回滚至某个commit\"></a>回滚至某个commit</h4><pre><code>git chekcout &lt;commit&gt;\n</code></pre><p>上面的命令是回滚到工作目录中指定的 commit 上，这是一个 <strong>只读</strong> 操作，不会影响到当前工作区的状态，它在你查看旧版本的文件时不会损坏你的代码仓库。通常，<code>HEAD</code>指向master分支或其他本地分支，当使用<code>git checkout</code>回滚到以前的 commit 时，<code>HEAD</code>就不再指向某个分支了，而是直接指向一个commit，这时就叫做<code>detached HEAD</code>状态。</p>\n<p><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/05.svg\" alt=\"\"></p>\n<p>切换到<code>detached HEAD</code>状态时，会有一个警告。</p>\n<p><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/B419EBE2-88F9-4736-BFBB-8003DEDA13F6.png\" alt=\"警告\"></p>\n<p>这个警告是告诉你，你现在做的所有事情与你开发项目的其余工作区是分离的，即所有的改动与本地仓库的任一分支都无关，不会影响到其他的分支的状态。如果你准备在<code>detached HEAD</code>状态下开发新的feature，那将会没有分支允许你回退这里，当你不可避免地切换到其他分支时，将没有任何办法引用到这个feature。你可以把<code>detached HEAD</code>状态看作是正在一个未命名的分支上。</p>\n<p><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/06.svg\" alt=\"\"></p>\n<blockquote>\n<p><strong><a href=\"https://git-scm.com/book/tr/v2/Git-Internals-Git-References\" target=\"_blank\" rel=\"external\">HEAD</a></strong> 和 <strong><a href=\"https://www.atlassian.com/git/tutorials/using-branches/git-checkout\" target=\"_blank\" rel=\"external\">detached HEAD</a></strong> 的区别可以参考 <a href=\"http://stackoverflow.com/questions/5772192/how-can-i-reconcile-detached-head-with-master-origin\" target=\"_blank\" rel=\"external\">How can I reconcile detached HEAD with master/origin?</a></p>\n<p>将英文翻译为中文经常会词不达意，很难把握，建议还是看英文原文:)。</p>\n</blockquote>\n<h5 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h5><p>假设你正在进行一次疯狂的重构，但现在你不确定是否要继续下去。这时你想要看一下开始这次重构之前项目原来的样子，首先你需要找到你想要查看的版本的ID。</p>\n<pre><code>git log --oneline\n</code></pre><p>假设你的项目历史看起来像下面这样：</p>\n<pre><code>b7119f2 Continue doing crazy things\n872fa7e Try something crazy\na1e8fb5 Make some important changes to hello.py\n435b61d Create hello.py\n9773e52 Initial import\n</code></pre><p>你可以使用<code>git checkout</code>查看<code>Make some important changes to hello.py</code>这次commit，如下：</p>\n<pre><code>git checkout a1e8fb5\n</code></pre><p>这让你的工作区切换到了<code>a1e8fb5</code>comimit的状态。你可以查看文件、编译项目、运行测试用例，甚至编辑文件，完全不用担心丢失项目“当前”的状态，你在这里做的所有修改都不会被保存到项目中。当你想要继续那次疯狂的重构时，你需要回到项目的“当前”状态。</p>\n<pre><code>git checkout master\n</code></pre><h4 id=\"回滚一个文件至某个commit\"><a href=\"#回滚一个文件至某个commit\" class=\"headerlink\" title=\"回滚一个文件至某个commit\"></a>回滚一个文件至某个commit</h4><pre><code>git checkout &lt;commit&gt; &lt;file&gt;\n</code></pre><p>回滚一个文件到以前的一个版本，这个操作会 <strong>影响</strong> 当前工作区的状态。</p>\n<p>你可以在一个新的快照中重新提交这个旧版本，当然也包含其他任何文件。实际上，<code>checkout</code>的这个用法和<code>revert</code>类似，只不过是仅针对一个文件。</p>\n<p><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/02.svg\" alt=\"\"></p>\n<h5 id=\"示例-1\"><a href=\"#示例-1\" class=\"headerlink\" title=\"示例\"></a>示例</h5><p>如果你只对单个文件感兴趣，你可以使用    <code>git checkout</code> 获取到该文件的旧版本。比如，如果你只想要看看 某次commit下的<code>hello.py</code>文件，可以使用下面的命令：</p>\n<pre><code>git checkout a1e8fb5 hello.py\n</code></pre><p>记住，不像切换commit，这会影响当前项目的状态。这个旧版本的文件的状态会变为 <code>Change to be committed</code>，给你一个机会将该文件恢复到先前的版本。</p>\n<p><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/598F500E-7F1F-4103-8D50-417B5AE71481.png\" alt=\"\"></p>\n<p>如果你决定不需要保留这个旧版本了，你可以切换到最近的版本，如下：</p>\n<pre><code>git checkout HEAD hello.py\n</code></pre><h3 id=\"git-revert\"><a href=\"#git-revert\" class=\"headerlink\" title=\"git revert\"></a>git revert</h3><p><code>git revert</code> 可以撤销一个已提交的快照(snapshot)，但它解决的是如何撤销已提交的被引入的改动，并生成内容来追加一个新的提交，而不是从项目的历史中移除这个提交，这避免了丢失历史记录，这对于项目的每一次修改的历史记录的完整性来说非常重要，并这是服务于可靠的多人协作开发的。</p>\n<p><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/git-revert-01.svg\" alt=\"\"></p>\n<pre><code>git revert &lt;commit&gt;\n</code></pre><p>这句命令会撤销这次<commit>所有被引入的改动，生成一个新的commit，并应用在当前分支上。</commit></p>\n<p>当你想从你的项目历史中移除一个完整的commit时，就应该使用<code>git revert</code>。比如，你正在追踪一个Bug并发现它是在一次单一的commit中被引入的，你可以手动进行修改，删除有Bug的代码来修复它，然后提交一个新的快照，但这样很麻烦，效率也很低，你更应该做的是，使用<code>git revert</code>自动完成，撤销这次commit所有被引入的改动。</p>\n<h4 id=\"Reverting-vs-Resetting\"><a href=\"#Reverting-vs-Resetting\" class=\"headerlink\" title=\"Reverting vs. Resetting\"></a>Reverting vs. Resetting</h4><p>很重要的一点，<code>revert</code>是对一次单一的commit的撤销，并不是真正意义上的回滚。它不是通过移除项目中一次commit后面的所有提交来“回滚”之前的状态，实际上那样的操作在<code>Git</code>上被叫做<code>reset</code>，而不是<code>revert</code>。</p>\n<p><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/04.svg\" alt=\"\"></p>\n<p>比起<code>reset</code>，<code>revert</code>有两个重要的好处：</p>\n<ul>\n<li><p><code>revert</code>不会改变项目的历史。如果那些commits已经推到了共享的代码仓库，它会是一个“安全”的操作。为什么改变共享代码仓库的历史是危险的，请看后面的<code>git reset</code>的介绍。</p>\n</li>\n<li><p><code>revert</code>可以作用于历史中 <strong>任意</strong> 的单一的commit节点，然而<code>reset</code>只能做到从当前 <strong>最新</strong> 的commit开始回滚。比如说，如果你想要只撤销一次旧的指定的commit，使用<code>git reset</code>，你则必须移除该commit和该commit之后出现的所有commits，然后再把那些随后的commit重新提交。毫无疑问，这种撤销的方式一点都不优雅。</p>\n</li>\n</ul>\n<h4 id=\"示例1\"><a href=\"#示例1\" class=\"headerlink\" title=\"示例1\"></a>示例1</h4><p>下面的例子是<code>git revert</code>的一个简单示例，提交了一个快照，然后立即使用<code>revert</code>撤销了它。</p>\n<pre><code># Edit some tracked files\n\n# Commit a snapshot\ngit commit -m &quot;Make some changes that will be undone&quot;\n\n# Revert the commit we just created\ngit revert HEAD\n</code></pre><p><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/git-revert-02.svg\" alt=\"\"></p>\n<blockquote>\n<p>注意：在<code>revert</code>后，第4次commit仍然被保留在项目历史中，<code>git revert</code>新增了一个新的commit来撤销它的改动，而不是删除它。结果就是，第3次和第5次commit的代码是完全一样的，第4次commit依然保留在历史中，以防我们想要重新回滚到这里。</p>\n</blockquote>\n<h4 id=\"示例2\"><a href=\"#示例2\" class=\"headerlink\" title=\"示例2\"></a>示例2</h4><p>假设你发现在某次commit中引入了一个bug，你想使用 <code>git revert</code>来回滚。查看历史：</p>\n<pre><code>git log --oneline\n</code></pre><p>项目历史如下：</p>\n<pre><code>417e4a9 commit 4\n427d76b commit 3\n1642475 introduced a bug\n71d3ef7 commit 1\nbf4f6f6 git initial\n</code></pre><p>使用 <code>revert</code> 回滚到 <code>1642475</code></p>\n<pre><code>git revert 1642475\n</code></pre><p>但你会发现没有想象中那么简单，而是发生冲突了，报错如下：</p>\n<pre><code>error: could not revert 1642475... introduced a bug\nhint: after resolving the conflicts, mark the corrected paths\nhint: with &apos;git add &lt;paths&gt;&apos; or &apos;git rm &lt;paths&gt;&apos;\nhint: and commit the result with &apos;git commit&apos;\n</code></pre><p><code>revert</code> 仅仅是撤销<code>introduced a bug</code>这一commit的改动，默认会生成一个新的commit提交，但在它之后还有<code>commit 3</code>和<code>commit 4</code>，它们的改动不会被影响，依然保留在工作区中，因此产生了冲突。你可以手动解决冲突后commit，但这却是个麻烦且不优雅的方式。因为<code>1642475</code>、<code>427d76b</code>和<code>417e4a9</code>这几个commit的改动被一起合并在暂存区中，如果你修改的不止一个文件，那手动解决冲突将会非常麻烦。解决方式是，默认 <em>不</em> 生成新的commit，并按顺序回滚。</p>\n<p>先强制结束<code>revert</code></p>\n<pre><code>git revert --abort\n</code></pre><p>按顺序回滚</p>\n<pre><code>git revert 417e4a9 --no-commit\ngit revert 427d76b --no-commit\ngit revert 1642475 --no-commit    \ngit revert --continue\n</code></pre><blockquote>\n<p><code>git revert --continue</code>，会生成带默认message的commit。</p>\n<p>更多参数说明详见：<a href=\"https://git-scm.com/docs/git-revert\" target=\"_blank\" rel=\"external\">git-revert-document</a></p>\n</blockquote>\n<p><a href=\"id:git-reset\" target=\"_blank\" rel=\"external\"></a></p>\n<h3 id=\"git-reset\"><a href=\"#git-reset\" class=\"headerlink\" title=\"git reset\"></a>git reset</h3><p>如果<code>git revert</code>是以一个”安全””的方式来撤销改动，那你可以认为<code>git reset</code>是一种 <em>危险</em> 的方式。当你使用<code>git reset</code>后，将没有办法恢复原样，它是一个永恒的撤销,因为那些commits不再被任何<code>ref</code>或<code>reflog</code>引用。在使用这个工具时请务必谨慎，因为它是<code>git</code>命令中唯一一个潜在的使你的努力付诸东流的命令。</p>\n<p><code>git reset</code>是一个功能丰富的命令，它可以用于移除已提交的快照，但它更多的是用来撤销暂存区和工作区的改动，另一种情况是，它应该只用于撤销本地的改动（不应该<code>reset</code>那些已经与其他开发者共享了的快照）。</p>\n<h4 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h4><pre><code>git reset &lt;file&gt;\n</code></pre><p>从暂存区中移除指定的文件，但保留工作区不变。它<code>unstage</code>了 <em>一个</em> 文件且没有覆盖任何改动。</p>\n<blockquote>\n<p>把文件加入暂存区叫做<code>stage</code>，文件修改过但还未使用<code>git add</code>加入暂存区叫做<code>unstage</code></p>\n</blockquote>\n<pre><code>git reset\n</code></pre><p>重置暂存区匹配至最近的一次commit，但保留工作区不变。它<code>unstage</code>了 <em>所有</em> 文件且没有覆盖任何改动，让你有机会从头开始重建暂存快照。</p>\n<pre><code>git reset --hard\n</code></pre><p>重置暂存区和工作区匹配至最近的一次commit。除了<code>unstage</code>所有文件外，<code>--hard</code>还告诉<code>Git</code>也一并覆盖工作区的所有改动，也就是说，这个操作撤销了所有未提交的改动，所以在使用它前，请确定你是真的想丢弃本地的开发。</p>\n<pre><code>git reset &lt;commit&gt;\n</code></pre><p>将当前分支的HEAD移动至<code>&lt;commit&gt;</code>，重置暂存区匹配至<code>&lt;commit&gt;</code>，但不包括工作区。从<code>&lt;commit&gt;</code>开始的所有改动会被驻留在工作区，这让你可以使用更干净、更原子性的快照来重新提交项目历史。</p>\n<pre><code>git reset --hard &lt;commit&gt;\n</code></pre><p>将当前分支的HEAD移动至<code>&lt;commit&gt;</code>以及重置暂存区和工作区匹配至<code>&lt;commit&gt;</code>。它不仅撤销了未提交的改动，还撤销了<code>&lt;commit&gt;</code>之后的所有commits。</p>\n<h4 id=\"讨论\"><a href=\"#讨论\" class=\"headerlink\" title=\"讨论\"></a>讨论</h4><p>正如上面提及到的，<code>git reset</code>是用来从一个代码仓库中移除改动的。没有<code>--hard</code>标记时，<code>git reset</code>通过<code>unstage</code>改动或撤销(uncommit)一系列已提交的快照来清理干净代码仓库，然后重头开始重建它们。当一个试验已经往可怕的方向发展时，<code>--hard</code>标记就派上用场了，你需要一个干净的工作空间。</p>\n<p><code>reset</code>是被设计来撤销 <em>本地</em> 的改动的，而<code>revert</code>是被设计来安全地撤销 <em>公有</em> 的commit的。出于完全不同的目的，这两个命令的执行结果也不同：<code>reset</code>是完全地移除有改动的地方，而<code>revert</code>则是维持原来的改动，使用一个新的commit来达到撤销的目的。</p>\n<p><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/04.svg\" alt=\"\"></p>\n<h4 id=\"不要重置公有的历史\"><a href=\"#不要重置公有的历史\" class=\"headerlink\" title=\"不要重置公有的历史\"></a>不要重置公有的历史</h4><p>当<code>&lt;commit</code>后面的任一快照被推送到公有仓库时，你就不应该使用<code>git reset &lt;commit&gt;</code>，推送一个commit到公有仓库后，就必须假设其他开发者是依赖于它的。删除一个其他团队成员在此基础上持续开发的commit会引发团队协作上的严重问题，当他们尝试与你的代码仓库同步时，就像一大块项目历史突然地消失了。</p>\n<p>下面的例子就是当你尝试<code>reset</code>一个公有的commit时会发生的。</p>\n<p><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/commit-after-git-reset.svg\" alt=\"\"></p>\n<p>一旦你在<code>reset</code>后新增一个commit，<code>Git</code>会认为你本地的历史与<code>origin/master</code>背道而驰了，当合并commit时，需要先同步你的代码仓库，这就有可能使你的团队感到迷惑和无助。</p>\n<p>所以重点就是，你打算用<code>git reset &lt;commit&gt;</code>来撤销你那糟糕的试验时，请确保它只作用于本地（还没被推送至远程服务器）的改动。如果你需要修复一个公有的commit，请使用<code>git revert</code>，因为它正是为了这个目的而被设计的。</p>\n<h4 id=\"示例-2\"><a href=\"#示例-2\" class=\"headerlink\" title=\"示例\"></a>示例</h4><h5 id=\"Unstage-一个文件\"><a href=\"#Unstage-一个文件\" class=\"headerlink\" title=\"Unstage 一个文件\"></a>Unstage 一个文件</h5><p>假设有两个文件<code>hello.py</code>和<code>main.py</code>，已经被添加到<code>Git</code>仓库中，修改这两文件并进行提交。</p>\n<pre><code># Edit both hello.py and main.py\n\n# Stage everything in the current directory\ngit add .\n\n# Realize that the changes in hello.py and main.py\n# should be committed in different snapshots\n\n# Unstage main.py\ngit reset main.py\n\n# Commit only hello.py\ngit commit -m &quot;Make some changes to hello.py&quot;\n\n# Commit main.py in a separate snapshot\ngit add main.py\ngit commit -m &quot;Edit main.py&quot;\n</code></pre><p>正如你所看到的，你可以使用<code>git reset</code>来<code>unstage</code>掉一些不小心加入暂存区但又与此次commit无关的文件，让你的commits保持高度的专一。</p>\n<h5 id=\"移除本地的commits\"><a href=\"#移除本地的commits\" class=\"headerlink\" title=\"移除本地的commits\"></a>移除本地的commits</h5><p>接下来的例子展示了一个更高级的使用情况，它示范了你在一个新的试验上工作了一段时间并在提交了一些快照后，决定彻底抛弃它这整个过程究竟发生了什么。</p>\n<pre><code># Create a new file called `foo.py` and add some code to it\n\n# Commit it to the project history\ngit add foo.py\ngit commit -m &quot;Start developing a crazy feature&quot;\n\n# Edit `foo.py` again and change some other tracked files, too\n\n# Commit another snapshot\ngit commit -a -m &quot;Continue my crazy feature&quot;\n\n# Decide to scrap the feature and remove the associated commits\ngit reset --hard HEAD~2\n</code></pre><p><code>git reset HEAD~2</code>这句命令让当前分支回滚了两个提交，实际上，从项目历史上删除了我们刚刚创建的两个快照。请记住，这种类型的<code>reset</code>应该只用在未推送到远程服务器的commits上，绝不要在那些已经被推送至公有仓库的commits上执行上面的操作。</p>\n<h3 id=\"git-clean\"><a href=\"#git-clean\" class=\"headerlink\" title=\"git clean\"></a>git clean</h3><p><code>git clean</code>从工作区移除未追踪的文件。这的确是一个更方便的命令，因为它使用<code>git status</code>琐细地查看哪些文件未追踪，然后手动删除它们。就像普通的<code>rm</code>命令一样，<code>git clean</code>是不可恢复的，所以在运行它之前请确保你是真的想要删除那些未追踪的文件。</p>\n<p><code>git clean</code>命令经常和<code>git reset --hard</code>一起被执行，<code>reset</code>仅仅影响已追踪的文件，因此需要<code>git clean</code>来单独清理未追踪的文件，这两个命令相结合可以让你的工作区回滚到一个特定的commit的确切状态。</p>\n<h4 id=\"用法-1\"><a href=\"#用法-1\" class=\"headerlink\" title=\"用法\"></a>用法</h4><pre><code>git clean -n\n</code></pre><p>执行<code>git clean</code>的“演习”。这向您展示哪个文件将会被删除，但不会真正地执行。</p>\n<pre><code>git clean -f\n</code></pre><p>从当前工作区中移除未追踪的文件。<code>-f(force)</code>标记是必需的，除非<code>clean.requireForce</code>选项被设为<code>false</code>（默认是<code>true</code>）。这不会移除<code>.gitignore</code>指定的未追踪的文件。</p>\n<pre><code>git clean -f &lt;path&gt;\n</code></pre><p>移除未追踪的文件，但仅限于操作指定的路径。</p>\n<pre><code>git clean -df\n</code></pre><p>从当前工作区中移除未追踪的文件和目录。</p>\n<pre><code>git clean -xf\n</code></pre><p>从当前工作区中移除未追踪的文件，包括<code>Git</code>忽略的文件。</p>\n<h4 id=\"讨论-1\"><a href=\"#讨论-1\" class=\"headerlink\" title=\"讨论\"></a>讨论</h4><p>当你在本地仓库中做了一些令人尴尬的开发想要销毁证据时，<code>git reset --hard</code>和<code>git clean -f</code>会是你最好的朋友，运行着两个命令将会使你的工作区回滚至最近的一次commit，还你一个干净的工作区。</p>\n<p><code>git clean</code>在<code>build</code>后清理工作区是很有用的，比如，你可以很容易地移除<code>.o</code>和<code>.exe</code>等C编译器生成的二进制文件，这是偶尔打包项目发布前的必要步骤，<code>-x</code>选项达到这个目的特别方便。</p>\n<p>记住，一起使用<code>git reset</code>和<code>git clean</code>是唯一一个具有潜在威胁的永久地删除提交的命令，所以请谨慎使用。事实上，在使用<code>git clean</code>时，-f<code>是必须的，</code>Git`的维护者甚至将它作为最基本的操作，而很多人会忘记的这一重要步骤，但这也预防了愚蠢行为而一不小心突然地删除所有辛辛苦苦写的代码。</p>\n<h4 id=\"示例-3\"><a href=\"#示例-3\" class=\"headerlink\" title=\"示例\"></a>示例</h4><p>下面的例子撤销了工作区所有的改动，包括新增的文件。假设你已经提交了一些快照，然后正在尝试一些些新的开发，但不知道自己做了什么导致了一些错误，想要撤销然后重新开始。</p>\n<pre><code># Edit some existing files\n# Add some new files\n# Realize you have no idea what you&apos;re doing\n\n# Undo changes in tracked files\ngit reset --hard\n\n# Remove untracked files\ngit clean -df\n</code></pre><p>运行完<code>reset/clean</code>一系列命令后，工作区和暂存区回滚到最近的commit，<code>git status</code>将会告诉你这是一个干净的工作区，你现在可以准备重新开始了。</p>\n<p>注意，那些新增的文件没有被加入暂存区，它们不会被<code>git reset --hard</code>影响，必须使用<code>git clean</code>删除它们。</p>\n","excerpt":"","more":"<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>这次主要来讲讲<code>Git</code>的反悔操作，自己平时在写代码的过程中经常会出现想要弃用所有的改动或回滚到上一次<code>commit</code>的情况。<code>Git</code>上的反悔操作有<code>reset</code>、<code>rebase</code>、<code>revert</code>等，每个操作各有区别和对应的使用场景，这里做下总结。</p>\n<p><code>Git</code>的反悔操作有两大类:</p>\n<ul>\n<li>撤销改动 ( Undoing Change )</li>\n<li>重写历史 ( Rewriting History )</li>\n</ul>\n<blockquote>\n<p>文章大部分翻译于 <a href=\"https://www.atlassian.com/git/tutorials/undoing-changes\">Undoing Changes</a> 和 <a href=\"https://www.atlassian.com/git/tutorials/rewriting-history\">Rewriting history</a>，并结合了自己的一些理解和补充。</p>\n</blockquote>\n<h2 id=\"撤销改动-Undoing-Change\"><a href=\"#撤销改动-Undoing-Change\" class=\"headerlink\" title=\"撤销改动(Undoing Change)\"></a>撤销改动(Undoing Change)</h2><h3 id=\"git-checkout\"><a href=\"#git-checkout\" class=\"headerlink\" title=\"git checkout\"></a>git checkout</h3><p><code>git checkout</code>有三个不同的功能：切换分支、回滚至某个commit、回滚一个文件至某个commit。切换分支是<code>git checkout</code>最常见的功能，不做介绍，这里主要介绍下它在撤销文件改动上的应用。</p>\n<h4 id=\"回滚至某个commit\"><a href=\"#回滚至某个commit\" class=\"headerlink\" title=\"回滚至某个commit\"></a>回滚至某个commit</h4><pre><code>git chekcout &lt;commit&gt;\n</code></pre><p>上面的命令是回滚到工作目录中指定的 commit 上，这是一个 <strong>只读</strong> 操作，不会影响到当前工作区的状态，它在你查看旧版本的文件时不会损坏你的代码仓库。通常，<code>HEAD</code>指向master分支或其他本地分支，当使用<code>git checkout</code>回滚到以前的 commit 时，<code>HEAD</code>就不再指向某个分支了，而是直接指向一个commit，这时就叫做<code>detached HEAD</code>状态。</p>\n<p><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/05.svg\" alt=\"\"></p>\n<p>切换到<code>detached HEAD</code>状态时，会有一个警告。</p>\n<p><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/B419EBE2-88F9-4736-BFBB-8003DEDA13F6.png\" alt=\"警告\"></p>\n<p>这个警告是告诉你，你现在做的所有事情与你开发项目的其余工作区是分离的，即所有的改动与本地仓库的任一分支都无关，不会影响到其他的分支的状态。如果你准备在<code>detached HEAD</code>状态下开发新的feature，那将会没有分支允许你回退这里，当你不可避免地切换到其他分支时，将没有任何办法引用到这个feature。你可以把<code>detached HEAD</code>状态看作是正在一个未命名的分支上。</p>\n<p><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/06.svg\" alt=\"\"></p>\n<blockquote>\n<p><strong><a href=\"https://git-scm.com/book/tr/v2/Git-Internals-Git-References\">HEAD</a></strong> 和 <strong><a href=\"https://www.atlassian.com/git/tutorials/using-branches/git-checkout\">detached HEAD</a></strong> 的区别可以参考 <a href=\"http://stackoverflow.com/questions/5772192/how-can-i-reconcile-detached-head-with-master-origin\">How can I reconcile detached HEAD with master/origin?</a></p>\n<p>将英文翻译为中文经常会词不达意，很难把握，建议还是看英文原文:)。</p>\n</blockquote>\n<h5 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h5><p>假设你正在进行一次疯狂的重构，但现在你不确定是否要继续下去。这时你想要看一下开始这次重构之前项目原来的样子，首先你需要找到你想要查看的版本的ID。</p>\n<pre><code>git log --oneline\n</code></pre><p>假设你的项目历史看起来像下面这样：</p>\n<pre><code>b7119f2 Continue doing crazy things\n872fa7e Try something crazy\na1e8fb5 Make some important changes to hello.py\n435b61d Create hello.py\n9773e52 Initial import\n</code></pre><p>你可以使用<code>git checkout</code>查看<code>Make some important changes to hello.py</code>这次commit，如下：</p>\n<pre><code>git checkout a1e8fb5\n</code></pre><p>这让你的工作区切换到了<code>a1e8fb5</code>comimit的状态。你可以查看文件、编译项目、运行测试用例，甚至编辑文件，完全不用担心丢失项目“当前”的状态，你在这里做的所有修改都不会被保存到项目中。当你想要继续那次疯狂的重构时，你需要回到项目的“当前”状态。</p>\n<pre><code>git checkout master\n</code></pre><h4 id=\"回滚一个文件至某个commit\"><a href=\"#回滚一个文件至某个commit\" class=\"headerlink\" title=\"回滚一个文件至某个commit\"></a>回滚一个文件至某个commit</h4><pre><code>git checkout &lt;commit&gt; &lt;file&gt;\n</code></pre><p>回滚一个文件到以前的一个版本，这个操作会 <strong>影响</strong> 当前工作区的状态。</p>\n<p>你可以在一个新的快照中重新提交这个旧版本，当然也包含其他任何文件。实际上，<code>checkout</code>的这个用法和<code>revert</code>类似，只不过是仅针对一个文件。</p>\n<p><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/02.svg\" alt=\"\"></p>\n<h5 id=\"示例-1\"><a href=\"#示例-1\" class=\"headerlink\" title=\"示例\"></a>示例</h5><p>如果你只对单个文件感兴趣，你可以使用    <code>git checkout</code> 获取到该文件的旧版本。比如，如果你只想要看看 某次commit下的<code>hello.py</code>文件，可以使用下面的命令：</p>\n<pre><code>git checkout a1e8fb5 hello.py\n</code></pre><p>记住，不像切换commit，这会影响当前项目的状态。这个旧版本的文件的状态会变为 <code>Change to be committed</code>，给你一个机会将该文件恢复到先前的版本。</p>\n<p><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/598F500E-7F1F-4103-8D50-417B5AE71481.png\" alt=\"\"></p>\n<p>如果你决定不需要保留这个旧版本了，你可以切换到最近的版本，如下：</p>\n<pre><code>git checkout HEAD hello.py\n</code></pre><h3 id=\"git-revert\"><a href=\"#git-revert\" class=\"headerlink\" title=\"git revert\"></a>git revert</h3><p><code>git revert</code> 可以撤销一个已提交的快照(snapshot)，但它解决的是如何撤销已提交的被引入的改动，并生成内容来追加一个新的提交，而不是从项目的历史中移除这个提交，这避免了丢失历史记录，这对于项目的每一次修改的历史记录的完整性来说非常重要，并这是服务于可靠的多人协作开发的。</p>\n<p><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/git-revert-01.svg\" alt=\"\"></p>\n<pre><code>git revert &lt;commit&gt;\n</code></pre><p>这句命令会撤销这次<commit>所有被引入的改动，生成一个新的commit，并应用在当前分支上。</p>\n<p>当你想从你的项目历史中移除一个完整的commit时，就应该使用<code>git revert</code>。比如，你正在追踪一个Bug并发现它是在一次单一的commit中被引入的，你可以手动进行修改，删除有Bug的代码来修复它，然后提交一个新的快照，但这样很麻烦，效率也很低，你更应该做的是，使用<code>git revert</code>自动完成，撤销这次commit所有被引入的改动。</p>\n<h4 id=\"Reverting-vs-Resetting\"><a href=\"#Reverting-vs-Resetting\" class=\"headerlink\" title=\"Reverting vs. Resetting\"></a>Reverting vs. Resetting</h4><p>很重要的一点，<code>revert</code>是对一次单一的commit的撤销，并不是真正意义上的回滚。它不是通过移除项目中一次commit后面的所有提交来“回滚”之前的状态，实际上那样的操作在<code>Git</code>上被叫做<code>reset</code>，而不是<code>revert</code>。</p>\n<p><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/04.svg\" alt=\"\"></p>\n<p>比起<code>reset</code>，<code>revert</code>有两个重要的好处：</p>\n<ul>\n<li><p><code>revert</code>不会改变项目的历史。如果那些commits已经推到了共享的代码仓库，它会是一个“安全”的操作。为什么改变共享代码仓库的历史是危险的，请看后面的<code>git reset</code>的介绍。</p>\n</li>\n<li><p><code>revert</code>可以作用于历史中 <strong>任意</strong> 的单一的commit节点，然而<code>reset</code>只能做到从当前 <strong>最新</strong> 的commit开始回滚。比如说，如果你想要只撤销一次旧的指定的commit，使用<code>git reset</code>，你则必须移除该commit和该commit之后出现的所有commits，然后再把那些随后的commit重新提交。毫无疑问，这种撤销的方式一点都不优雅。</p>\n</li>\n</ul>\n<h4 id=\"示例1\"><a href=\"#示例1\" class=\"headerlink\" title=\"示例1\"></a>示例1</h4><p>下面的例子是<code>git revert</code>的一个简单示例，提交了一个快照，然后立即使用<code>revert</code>撤销了它。</p>\n<pre><code># Edit some tracked files\n\n# Commit a snapshot\ngit commit -m &quot;Make some changes that will be undone&quot;\n\n# Revert the commit we just created\ngit revert HEAD\n</code></pre><p><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/git-revert-02.svg\" alt=\"\"></p>\n<blockquote>\n<p>注意：在<code>revert</code>后，第4次commit仍然被保留在项目历史中，<code>git revert</code>新增了一个新的commit来撤销它的改动，而不是删除它。结果就是，第3次和第5次commit的代码是完全一样的，第4次commit依然保留在历史中，以防我们想要重新回滚到这里。</p>\n</blockquote>\n<h4 id=\"示例2\"><a href=\"#示例2\" class=\"headerlink\" title=\"示例2\"></a>示例2</h4><p>假设你发现在某次commit中引入了一个bug，你想使用 <code>git revert</code>来回滚。查看历史：</p>\n<pre><code>git log --oneline\n</code></pre><p>项目历史如下：</p>\n<pre><code>417e4a9 commit 4\n427d76b commit 3\n1642475 introduced a bug\n71d3ef7 commit 1\nbf4f6f6 git initial\n</code></pre><p>使用 <code>revert</code> 回滚到 <code>1642475</code></p>\n<pre><code>git revert 1642475\n</code></pre><p>但你会发现没有想象中那么简单，而是发生冲突了，报错如下：</p>\n<pre><code>error: could not revert 1642475... introduced a bug\nhint: after resolving the conflicts, mark the corrected paths\nhint: with &apos;git add &lt;paths&gt;&apos; or &apos;git rm &lt;paths&gt;&apos;\nhint: and commit the result with &apos;git commit&apos;\n</code></pre><p><code>revert</code> 仅仅是撤销<code>introduced a bug</code>这一commit的改动，默认会生成一个新的commit提交，但在它之后还有<code>commit 3</code>和<code>commit 4</code>，它们的改动不会被影响，依然保留在工作区中，因此产生了冲突。你可以手动解决冲突后commit，但这却是个麻烦且不优雅的方式。因为<code>1642475</code>、<code>427d76b</code>和<code>417e4a9</code>这几个commit的改动被一起合并在暂存区中，如果你修改的不止一个文件，那手动解决冲突将会非常麻烦。解决方式是，默认 <em>不</em> 生成新的commit，并按顺序回滚。</p>\n<p>先强制结束<code>revert</code></p>\n<pre><code>git revert --abort\n</code></pre><p>按顺序回滚</p>\n<pre><code>git revert 417e4a9 --no-commit\ngit revert 427d76b --no-commit\ngit revert 1642475 --no-commit    \ngit revert --continue\n</code></pre><blockquote>\n<p><code>git revert --continue</code>，会生成带默认message的commit。</p>\n<p>更多参数说明详见：<a href=\"https://git-scm.com/docs/git-revert\">git-revert-document</a></p>\n</blockquote>\n<p><a href=\"id:git-reset\"></a></p>\n<h3 id=\"git-reset\"><a href=\"#git-reset\" class=\"headerlink\" title=\"git reset\"></a>git reset</h3><p>如果<code>git revert</code>是以一个”安全””的方式来撤销改动，那你可以认为<code>git reset</code>是一种 <em>危险</em> 的方式。当你使用<code>git reset</code>后，将没有办法恢复原样，它是一个永恒的撤销,因为那些commits不再被任何<code>ref</code>或<code>reflog</code>引用。在使用这个工具时请务必谨慎，因为它是<code>git</code>命令中唯一一个潜在的使你的努力付诸东流的命令。</p>\n<p><code>git reset</code>是一个功能丰富的命令，它可以用于移除已提交的快照，但它更多的是用来撤销暂存区和工作区的改动，另一种情况是，它应该只用于撤销本地的改动（不应该<code>reset</code>那些已经与其他开发者共享了的快照）。</p>\n<h4 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h4><pre><code>git reset &lt;file&gt;\n</code></pre><p>从暂存区中移除指定的文件，但保留工作区不变。它<code>unstage</code>了 <em>一个</em> 文件且没有覆盖任何改动。</p>\n<blockquote>\n<p>把文件加入暂存区叫做<code>stage</code>，文件修改过但还未使用<code>git add</code>加入暂存区叫做<code>unstage</code></p>\n</blockquote>\n<pre><code>git reset\n</code></pre><p>重置暂存区匹配至最近的一次commit，但保留工作区不变。它<code>unstage</code>了 <em>所有</em> 文件且没有覆盖任何改动，让你有机会从头开始重建暂存快照。</p>\n<pre><code>git reset --hard\n</code></pre><p>重置暂存区和工作区匹配至最近的一次commit。除了<code>unstage</code>所有文件外，<code>--hard</code>还告诉<code>Git</code>也一并覆盖工作区的所有改动，也就是说，这个操作撤销了所有未提交的改动，所以在使用它前，请确定你是真的想丢弃本地的开发。</p>\n<pre><code>git reset &lt;commit&gt;\n</code></pre><p>将当前分支的HEAD移动至<code>&lt;commit&gt;</code>，重置暂存区匹配至<code>&lt;commit&gt;</code>，但不包括工作区。从<code>&lt;commit&gt;</code>开始的所有改动会被驻留在工作区，这让你可以使用更干净、更原子性的快照来重新提交项目历史。</p>\n<pre><code>git reset --hard &lt;commit&gt;\n</code></pre><p>将当前分支的HEAD移动至<code>&lt;commit&gt;</code>以及重置暂存区和工作区匹配至<code>&lt;commit&gt;</code>。它不仅撤销了未提交的改动，还撤销了<code>&lt;commit&gt;</code>之后的所有commits。</p>\n<h4 id=\"讨论\"><a href=\"#讨论\" class=\"headerlink\" title=\"讨论\"></a>讨论</h4><p>正如上面提及到的，<code>git reset</code>是用来从一个代码仓库中移除改动的。没有<code>--hard</code>标记时，<code>git reset</code>通过<code>unstage</code>改动或撤销(uncommit)一系列已提交的快照来清理干净代码仓库，然后重头开始重建它们。当一个试验已经往可怕的方向发展时，<code>--hard</code>标记就派上用场了，你需要一个干净的工作空间。</p>\n<p><code>reset</code>是被设计来撤销 <em>本地</em> 的改动的，而<code>revert</code>是被设计来安全地撤销 <em>公有</em> 的commit的。出于完全不同的目的，这两个命令的执行结果也不同：<code>reset</code>是完全地移除有改动的地方，而<code>revert</code>则是维持原来的改动，使用一个新的commit来达到撤销的目的。</p>\n<p><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/04.svg\" alt=\"\"></p>\n<h4 id=\"不要重置公有的历史\"><a href=\"#不要重置公有的历史\" class=\"headerlink\" title=\"不要重置公有的历史\"></a>不要重置公有的历史</h4><p>当<code>&lt;commit</code>后面的任一快照被推送到公有仓库时，你就不应该使用<code>git reset &lt;commit&gt;</code>，推送一个commit到公有仓库后，就必须假设其他开发者是依赖于它的。删除一个其他团队成员在此基础上持续开发的commit会引发团队协作上的严重问题，当他们尝试与你的代码仓库同步时，就像一大块项目历史突然地消失了。</p>\n<p>下面的例子就是当你尝试<code>reset</code>一个公有的commit时会发生的。</p>\n<p><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/commit-after-git-reset.svg\" alt=\"\"></p>\n<p>一旦你在<code>reset</code>后新增一个commit，<code>Git</code>会认为你本地的历史与<code>origin/master</code>背道而驰了，当合并commit时，需要先同步你的代码仓库，这就有可能使你的团队感到迷惑和无助。</p>\n<p>所以重点就是，你打算用<code>git reset &lt;commit&gt;</code>来撤销你那糟糕的试验时，请确保它只作用于本地（还没被推送至远程服务器）的改动。如果你需要修复一个公有的commit，请使用<code>git revert</code>，因为它正是为了这个目的而被设计的。</p>\n<h4 id=\"示例-2\"><a href=\"#示例-2\" class=\"headerlink\" title=\"示例\"></a>示例</h4><h5 id=\"Unstage-一个文件\"><a href=\"#Unstage-一个文件\" class=\"headerlink\" title=\"Unstage 一个文件\"></a>Unstage 一个文件</h5><p>假设有两个文件<code>hello.py</code>和<code>main.py</code>，已经被添加到<code>Git</code>仓库中，修改这两文件并进行提交。</p>\n<pre><code># Edit both hello.py and main.py\n\n# Stage everything in the current directory\ngit add .\n\n# Realize that the changes in hello.py and main.py\n# should be committed in different snapshots\n\n# Unstage main.py\ngit reset main.py\n\n# Commit only hello.py\ngit commit -m &quot;Make some changes to hello.py&quot;\n\n# Commit main.py in a separate snapshot\ngit add main.py\ngit commit -m &quot;Edit main.py&quot;\n</code></pre><p>正如你所看到的，你可以使用<code>git reset</code>来<code>unstage</code>掉一些不小心加入暂存区但又与此次commit无关的文件，让你的commits保持高度的专一。</p>\n<h5 id=\"移除本地的commits\"><a href=\"#移除本地的commits\" class=\"headerlink\" title=\"移除本地的commits\"></a>移除本地的commits</h5><p>接下来的例子展示了一个更高级的使用情况，它示范了你在一个新的试验上工作了一段时间并在提交了一些快照后，决定彻底抛弃它这整个过程究竟发生了什么。</p>\n<pre><code># Create a new file called `foo.py` and add some code to it\n\n# Commit it to the project history\ngit add foo.py\ngit commit -m &quot;Start developing a crazy feature&quot;\n\n# Edit `foo.py` again and change some other tracked files, too\n\n# Commit another snapshot\ngit commit -a -m &quot;Continue my crazy feature&quot;\n\n# Decide to scrap the feature and remove the associated commits\ngit reset --hard HEAD~2\n</code></pre><p><code>git reset HEAD~2</code>这句命令让当前分支回滚了两个提交，实际上，从项目历史上删除了我们刚刚创建的两个快照。请记住，这种类型的<code>reset</code>应该只用在未推送到远程服务器的commits上，绝不要在那些已经被推送至公有仓库的commits上执行上面的操作。</p>\n<h3 id=\"git-clean\"><a href=\"#git-clean\" class=\"headerlink\" title=\"git clean\"></a>git clean</h3><p><code>git clean</code>从工作区移除未追踪的文件。这的确是一个更方便的命令，因为它使用<code>git status</code>琐细地查看哪些文件未追踪，然后手动删除它们。就像普通的<code>rm</code>命令一样，<code>git clean</code>是不可恢复的，所以在运行它之前请确保你是真的想要删除那些未追踪的文件。</p>\n<p><code>git clean</code>命令经常和<code>git reset --hard</code>一起被执行，<code>reset</code>仅仅影响已追踪的文件，因此需要<code>git clean</code>来单独清理未追踪的文件，这两个命令相结合可以让你的工作区回滚到一个特定的commit的确切状态。</p>\n<h4 id=\"用法-1\"><a href=\"#用法-1\" class=\"headerlink\" title=\"用法\"></a>用法</h4><pre><code>git clean -n\n</code></pre><p>执行<code>git clean</code>的“演习”。这向您展示哪个文件将会被删除，但不会真正地执行。</p>\n<pre><code>git clean -f\n</code></pre><p>从当前工作区中移除未追踪的文件。<code>-f(force)</code>标记是必需的，除非<code>clean.requireForce</code>选项被设为<code>false</code>（默认是<code>true</code>）。这不会移除<code>.gitignore</code>指定的未追踪的文件。</p>\n<pre><code>git clean -f &lt;path&gt;\n</code></pre><p>移除未追踪的文件，但仅限于操作指定的路径。</p>\n<pre><code>git clean -df\n</code></pre><p>从当前工作区中移除未追踪的文件和目录。</p>\n<pre><code>git clean -xf\n</code></pre><p>从当前工作区中移除未追踪的文件，包括<code>Git</code>忽略的文件。</p>\n<h4 id=\"讨论-1\"><a href=\"#讨论-1\" class=\"headerlink\" title=\"讨论\"></a>讨论</h4><p>当你在本地仓库中做了一些令人尴尬的开发想要销毁证据时，<code>git reset --hard</code>和<code>git clean -f</code>会是你最好的朋友，运行着两个命令将会使你的工作区回滚至最近的一次commit，还你一个干净的工作区。</p>\n<p><code>git clean</code>在<code>build</code>后清理工作区是很有用的，比如，你可以很容易地移除<code>.o</code>和<code>.exe</code>等C编译器生成的二进制文件，这是偶尔打包项目发布前的必要步骤，<code>-x</code>选项达到这个目的特别方便。</p>\n<p>记住，一起使用<code>git reset</code>和<code>git clean</code>是唯一一个具有潜在威胁的永久地删除提交的命令，所以请谨慎使用。事实上，在使用<code>git clean</code>时，-f<code>是必须的，</code>Git`的维护者甚至将它作为最基本的操作，而很多人会忘记的这一重要步骤，但这也预防了愚蠢行为而一不小心突然地删除所有辛辛苦苦写的代码。</p>\n<h4 id=\"示例-3\"><a href=\"#示例-3\" class=\"headerlink\" title=\"示例\"></a>示例</h4><p>下面的例子撤销了工作区所有的改动，包括新增的文件。假设你已经提交了一些快照，然后正在尝试一些些新的开发，但不知道自己做了什么导致了一些错误，想要撤销然后重新开始。</p>\n<pre><code># Edit some existing files\n# Add some new files\n# Realize you have no idea what you&apos;re doing\n\n# Undo changes in tracked files\ngit reset --hard\n\n# Remove untracked files\ngit clean -df\n</code></pre><p>运行完<code>reset/clean</code>一系列命令后，工作区和暂存区回滚到最近的commit，<code>git status</code>将会告诉你这是一个干净的工作区，你现在可以准备重新开始了。</p>\n<p>注意，那些新增的文件没有被加入暂存区，它们不会被<code>git reset --hard</code>影响，必须使用<code>git clean</code>删除它们。</p>\n"},{"title":"iOS Status Bar 的隐藏","_content":"\n自己一个人负责项目的好处是：代码想怎么写就怎么写，然而坏处是：代码要多渣有多渣，踩坑也是必须的\n\niOS开发也已有一年半，踩过的坑实在是太多了，之前只是简单的记录下笔记，现在开始整理总结成文章，希望形成一套自己的理论体系。\n\n--------------------------------------  我是一条华丽的分隔线 --------------------------------------\n\n之前一直以为，隐藏 *status bar* 只是一句简单的语句调用就搞定了，但在做公司的项目的过程中，发现居然隐藏不了，纳闷了许久后算是明白了点，没想到也是蛮多坑的。\n\n> 以下内容均是基于 **iOS 9** 及其以上的，如有出入，请善用搜索引擎\n\n### Status Bar 的正常隐藏\n\n###### view-controllers 控制 status bar 的隐藏\n\n在iOS 9中，*status bar* 的隐藏默认是通过 *view-controlls* 控制的，即每个控制器决定是否隐藏 *status bar* 。\n\n只需在 *controller* 中重载 `prefersStatusBarHidden` 函数\n\n```swift\noverride func prefersStatusBarHidden() -> Bool {\n    return true\n}\n```\n\n###### 全局控制 status bar 的隐藏\n\n如果想要全局控制，只需两步：\n\n* 在Info.plist中，添加属性 `View controller-based status bar appearance` 为 `NO`\n* 添加如下代码\n  \n  ``` swift\n  UIApplication.sharedApplication().statusBarHidden = true\n  ```\n  \n如果想改成每个控制器自行控制，将 `View controller-based status bar appearance` 为 `YES`即可\n\n### Status Bar 隐藏不了的情况\n\n但是，有时候也会有意外发生，上述方法并不能如愿隐藏 *status bar* ,那就是 **在*ParentViewController* 中添加一个全屏的 *ChildViewController* ，此时想用 *ChildViewController* 来控制状态栏时** ，就会失效，即使 *ChildViewController* 中的`prefersStatusBarHidden`方法返回的是`YES`，也无法隐藏 *status bar* 。\n\n**解决办法是：重载 `childViewControllerForStatusBarHidden`方法**\n\n苹果官方文档 [UIViewController Class Reference](https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIViewController_Class/index.html#//apple_ref/occ/instm/UIViewController/childViewControllerForStatusBarHidden) 是这样解释的：\n> Called when the system needs the view controller to use for determining status bar hidden/unhidden state.\n> \n> Return Value:\n> \n>  The view controller whose status bar hidden/unhidden status should be used. Default return value is nil.\n\n> Discussion:\n> \nIf your container view controller derives derives the hidden state of the status bar from one of its child view controllers, implement this method to specify which child view controller you want to control the hidden/unhidden state. If you return nil or do not override this method, the status bar hidden/unhidden state for self is used.\n\n> If you change the return value from this method, call the `setNeedsStatusBarAppearanceUpdate` method.\n\n大概意思就是，如果你想要让你的 *container view controller* 的 *child view controller* 控制 *status bar* 的隐藏状态的话，就重载该方法，决定使用哪个 *child view controller* 来控制 *隐藏/非隐藏* 的状态。如果返回 *nil* 或不重载该方法，就用它自己来控制 *status bar* 的状态。可以通过调用 `setNeedsStatusBarAppearanceUpdate` 方法来改变该方法返回的值，即再调用该方法一次。\n\n```swift\nclass StatusBarHiddenParentController: UIViewController {\n    \n    var childController: StatusBarHiddenChildController?\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        childController = StatusBarHiddenChildController.fromStoryboard(\"Main\")\n        addChildViewController(childController!)\n        view.addSubview(childController!.view)\n        setNeedsStatusBarAppearanceUpdate()\n    }\n\n    override func childViewControllerForStatusBarHidden() -> UIViewController? {\n        return childController\n    }\n    \n    override func prefersStatusBarHidden() -> Bool {\n        return false\n    }\n\n}\n\n\nclass StatusBarHiddenChildController: UIViewController {\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        // Do any additional setup after loading the view.\n    }\n\n    override func prefersStatusBarHidden() -> Bool {\n        return true\n    }\n\n}\n```\n\n上述代码最终能将状态栏隐藏，即使在 *StatusBarHiddenParentController* 中的`prefersStatusBarHidden`返回的是`NO`\n\n注意：因为`childViewControllerForStatusBarHidden`会比`viewDidLoad` 先调用，所以在`viewDidLoad`中要调用`setNeedsStatusBarAppearanceUpdate`\n\n有时候我们需要关闭控制器视图，如下列三种情况：\n\n* 将控制器从navigationController的堆栈中pop出去\n* 将present出来的控制器dismiss掉\n* 将子控制器从父控制器中移除\n\n*push* 和 *present* 两种方式展示的 *view controller* 在 *pop* 和 *dismiss* 时都能够自动还原 *status bar* 的状态。但是，把子控制器从父控制器中移除时，就会出现奇怪的问题， *status bar* 并不能自动还原，因此还需要特别处理。\n\n我们可以设置一个Bool变量 `statusBarHidden` 用来记录目前 *statusBar* 是否隐藏，在 `prefersStatusBarHidden` 函数中返回 `statusBarHidden`值。在要移除子控制器的函数中做两步操作：\n\n1. 先将 `statusBarHidden` 设置为 `False`, 并调用 `setNeedsStatusBarAppearanceUpdate` 刷新状态栏\n2. 再将子控制器移除。\n\n```swift\nclass StatusBarHiddenRemoveWayChildController: UIViewController {\n    \n    var statusBarHidden: Bool = true\n    \n    override func viewDidLoad() {\n        super.viewDidLoad()\n        \n        let removeButton = UIButton(frame: CGRectMake(30, 80, 100, 30))\n        removeButton.setTitle(\"remove\", forState: .Normal)\n        removeButton.addTarget(self, action: \"remove\", forControlEvents: .TouchUpInside)\n        view.addSubview(removeButton)\n    }\n    \n    // 1. set `statusBarHidden` into `false`, and then refresh status bar\n    // 2. remove from parent controller\n    \n    func remove() {\n        statusBarHidden = false\n        setNeedsStatusBarAppearanceUpdate()\n        \n        view.removeFromSuperview()\n        removeFromParentViewController()\n    }\n    \n    override func prefersStatusBarHidden() -> Bool {\n        return statusBarHidden\n    }\n}\n```\n\n### 使用 Method Swizzling 隐藏 Status Bar\n\n对于 *status bar* 隐藏不了的情况，除了上面介绍的方法，iOS 中还有一种强大的黑魔法 *[Method Swizzling](http://nshipster.com/method-swizzling/)*，这里设计到了 **Objective-C** 语言的 *[runtime](https://developer.apple.com/library/mac/documentation/Cocoa/Reference/ObjCRuntimeRef/index.html#//apple_ref/c/func/method_getImplementation)* 特性，这是一个值得深入学习和研究的知识。\n\n我们只需要在 *ChildeViewController* 中对 *ParentViewController* 的 `prefersStatusBarHidden` 方法进行 *Hook* ，然后偷天换日，换成我们自己实现的方法，使其返回 `true` ，然后刷新状态栏，就可以隐藏 *status bar* 了。\n\n代码如下：\n\n```swift\n\nclass StatusBarHiddenSwizzlingChildController: UIViewController {\n\n\toverride func viewWillAppear(animated: Bool) {\n        super.viewWillAppear(animated)\n        \n        guard let parentViewController = parentViewController else {\n            return\n        }\n        \n        if parentViewController.respondsToSelector(\"setNeedsStatusBarAppearanceUpdate\") {\n            \n            hookPrefersStatusBarHidden(parentViewController)\n        }\n    }\n    \n    func hookPrefersStatusBarHidden(parentViewController: UIViewController) {\n        \n        let originalSelector = Selector(\"prefersStatusBarHidden\")\n        let swizzledSelector = Selector(\"hook_prefersStatusBarHidden\")\n        \n        let originalMethod = class_getInstanceMethod(parentViewController.dynamicType, originalSelector)\n        let swizzledMethod = class_getInstanceMethod(self.dynamicType, swizzledSelector)\n        \n        let didAddMethod: Bool = class_addMethod(parentViewController.dynamicType,\n            originalSelector,\n            method_getImplementation(swizzledMethod), method_getTypeEncoding(swizzledMethod))\n        \n        if didAddMethod {\n            class_replaceMethod(self.dynamicType,\n                swizzledSelector,\n                method_getImplementation(originalMethod),\n                method_getTypeEncoding(originalMethod))\n        } else {\n            method_exchangeImplementations(originalMethod, swizzledMethod)\n        }\n        \n        dispatch_async(dispatch_get_main_queue()) { () -> Void in\n        \n            parentViewController.prefersStatusBarHidden()\n            parentViewController.setNeedsStatusBarAppearanceUpdate()\n        }\n    }\n    \n    // must recover the hook when view will disappear\n    \n    override func viewWillDisappear(animated: Bool) {\n        super.viewWillDisappear(animated)\n        \n        guard let parentViewController = parentViewController else {\n            return\n        }\n        \n        if parentViewController.respondsToSelector(\"setNeedsStatusBarAppearanceUpdate\") {\n            \n            hookPrefersStatusBarHidden(parentViewController)\n        }\n        \n    }\n    \n    func hook_prefersStatusBarHidden() -> Bool {\n        return true\n    }\n}\n```\n\n> 注意事项：\n> \n> * 必须在 *ChildViewController* 的 `viewWillDisappear` 中将 *Hook* 的方法还原回来，否则可能会出现奇怪的问题。\n> * *ParentViewController* 中尽可能重载 `prefersStatusBarHidden` 方法，因为 *Method Swizzling* 有很多细节需要谨慎处理，如果 `hookPrefersStatusBarHidden` 写的有bug，会导致奇怪的问题。\n\n\n### 滚动ScrollView或TableView时隐藏Status Bar和Navigation Bar\n\n京东和淘宝客户端的商品搜索结果页面，在滚动时可以隐藏 *status bar* 和 *navigation bar* ，我自认为这是一个很好的设计，身为一个有追求的程序员，这个功能的实现那当然也不能放过啦~~\n\n*NavigationController* 有一个属性 `hidesBarsOnSwipe`，可以实现轻扫时隐藏 *navigation bar* ，与之对应的手势是它的另一个属性`barHideOnSwipeGestureRecognizer`，只要给这个手势添加一个方法来控制 *status bar* ，就可以实现同时隐藏 *status bar* 和 *navigation bar* 了。\n\n```swift\nclass StatusBarAndNavigationBarHiddenOnSwipeController: UITableViewController {\n    \n    var hideStatusBar = false\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        \n        view.backgroundColor = UIColor.grayColor()\n        \n        navigationController?.barHideOnSwipeGestureRecognizer.addTarget(self, action: \"swipe:\")\n        navigationController?.hidesBarsOnSwipe = true\n    }\n    \n    override func prefersStatusBarHidden() -> Bool {\n        return hideStatusBar\n    }\n    \n    func swipe(recognizer: UISwipeGestureRecognizer) {\n        \n        hideStatusBar = navigationController?.navigationBar.frame.origin.y < 0\n        \n        UIView.animateWithDuration(0.2) { () -> Void in\n            \n            self.setNeedsStatusBarAppearanceUpdate()\n        }\n    }\n    \n    override func preferredStatusBarUpdateAnimation() -> UIStatusBarAnimation {\n        return .Slide\n    }\n}\n```\n\n本文章所有示例代码下载地址：[Demo](/download/2016-03-26-status-bar-hidden-demo.zip)\n\n-------\n扩展阅读：[SWIZZLE](http://swifter.tips/swizzle/)","source":"_posts/2016-03-26-status-bar-hidden.md","raw":"----\ntitle: iOS Status Bar 的隐藏\n----\n\n自己一个人负责项目的好处是：代码想怎么写就怎么写，然而坏处是：代码要多渣有多渣，踩坑也是必须的\n\niOS开发也已有一年半，踩过的坑实在是太多了，之前只是简单的记录下笔记，现在开始整理总结成文章，希望形成一套自己的理论体系。\n\n--------------------------------------  我是一条华丽的分隔线 --------------------------------------\n\n之前一直以为，隐藏 *status bar* 只是一句简单的语句调用就搞定了，但在做公司的项目的过程中，发现居然隐藏不了，纳闷了许久后算是明白了点，没想到也是蛮多坑的。\n\n> 以下内容均是基于 **iOS 9** 及其以上的，如有出入，请善用搜索引擎\n\n### Status Bar 的正常隐藏\n\n###### view-controllers 控制 status bar 的隐藏\n\n在iOS 9中，*status bar* 的隐藏默认是通过 *view-controlls* 控制的，即每个控制器决定是否隐藏 *status bar* 。\n\n只需在 *controller* 中重载 `prefersStatusBarHidden` 函数\n\n```swift\noverride func prefersStatusBarHidden() -> Bool {\n    return true\n}\n```\n\n###### 全局控制 status bar 的隐藏\n\n如果想要全局控制，只需两步：\n\n* 在Info.plist中，添加属性 `View controller-based status bar appearance` 为 `NO`\n* 添加如下代码\n  \n  ``` swift\n  UIApplication.sharedApplication().statusBarHidden = true\n  ```\n  \n如果想改成每个控制器自行控制，将 `View controller-based status bar appearance` 为 `YES`即可\n\n### Status Bar 隐藏不了的情况\n\n但是，有时候也会有意外发生，上述方法并不能如愿隐藏 *status bar* ,那就是 **在*ParentViewController* 中添加一个全屏的 *ChildViewController* ，此时想用 *ChildViewController* 来控制状态栏时** ，就会失效，即使 *ChildViewController* 中的`prefersStatusBarHidden`方法返回的是`YES`，也无法隐藏 *status bar* 。\n\n**解决办法是：重载 `childViewControllerForStatusBarHidden`方法**\n\n苹果官方文档 [UIViewController Class Reference](https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIViewController_Class/index.html#//apple_ref/occ/instm/UIViewController/childViewControllerForStatusBarHidden) 是这样解释的：\n> Called when the system needs the view controller to use for determining status bar hidden/unhidden state.\n> \n> Return Value:\n> \n>  The view controller whose status bar hidden/unhidden status should be used. Default return value is nil.\n\n> Discussion:\n> \nIf your container view controller derives derives the hidden state of the status bar from one of its child view controllers, implement this method to specify which child view controller you want to control the hidden/unhidden state. If you return nil or do not override this method, the status bar hidden/unhidden state for self is used.\n\n> If you change the return value from this method, call the `setNeedsStatusBarAppearanceUpdate` method.\n\n大概意思就是，如果你想要让你的 *container view controller* 的 *child view controller* 控制 *status bar* 的隐藏状态的话，就重载该方法，决定使用哪个 *child view controller* 来控制 *隐藏/非隐藏* 的状态。如果返回 *nil* 或不重载该方法，就用它自己来控制 *status bar* 的状态。可以通过调用 `setNeedsStatusBarAppearanceUpdate` 方法来改变该方法返回的值，即再调用该方法一次。\n\n```swift\nclass StatusBarHiddenParentController: UIViewController {\n    \n    var childController: StatusBarHiddenChildController?\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        childController = StatusBarHiddenChildController.fromStoryboard(\"Main\")\n        addChildViewController(childController!)\n        view.addSubview(childController!.view)\n        setNeedsStatusBarAppearanceUpdate()\n    }\n\n    override func childViewControllerForStatusBarHidden() -> UIViewController? {\n        return childController\n    }\n    \n    override func prefersStatusBarHidden() -> Bool {\n        return false\n    }\n\n}\n\n\nclass StatusBarHiddenChildController: UIViewController {\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        // Do any additional setup after loading the view.\n    }\n\n    override func prefersStatusBarHidden() -> Bool {\n        return true\n    }\n\n}\n```\n\n上述代码最终能将状态栏隐藏，即使在 *StatusBarHiddenParentController* 中的`prefersStatusBarHidden`返回的是`NO`\n\n注意：因为`childViewControllerForStatusBarHidden`会比`viewDidLoad` 先调用，所以在`viewDidLoad`中要调用`setNeedsStatusBarAppearanceUpdate`\n\n有时候我们需要关闭控制器视图，如下列三种情况：\n\n* 将控制器从navigationController的堆栈中pop出去\n* 将present出来的控制器dismiss掉\n* 将子控制器从父控制器中移除\n\n*push* 和 *present* 两种方式展示的 *view controller* 在 *pop* 和 *dismiss* 时都能够自动还原 *status bar* 的状态。但是，把子控制器从父控制器中移除时，就会出现奇怪的问题， *status bar* 并不能自动还原，因此还需要特别处理。\n\n我们可以设置一个Bool变量 `statusBarHidden` 用来记录目前 *statusBar* 是否隐藏，在 `prefersStatusBarHidden` 函数中返回 `statusBarHidden`值。在要移除子控制器的函数中做两步操作：\n\n1. 先将 `statusBarHidden` 设置为 `False`, 并调用 `setNeedsStatusBarAppearanceUpdate` 刷新状态栏\n2. 再将子控制器移除。\n\n```swift\nclass StatusBarHiddenRemoveWayChildController: UIViewController {\n    \n    var statusBarHidden: Bool = true\n    \n    override func viewDidLoad() {\n        super.viewDidLoad()\n        \n        let removeButton = UIButton(frame: CGRectMake(30, 80, 100, 30))\n        removeButton.setTitle(\"remove\", forState: .Normal)\n        removeButton.addTarget(self, action: \"remove\", forControlEvents: .TouchUpInside)\n        view.addSubview(removeButton)\n    }\n    \n    // 1. set `statusBarHidden` into `false`, and then refresh status bar\n    // 2. remove from parent controller\n    \n    func remove() {\n        statusBarHidden = false\n        setNeedsStatusBarAppearanceUpdate()\n        \n        view.removeFromSuperview()\n        removeFromParentViewController()\n    }\n    \n    override func prefersStatusBarHidden() -> Bool {\n        return statusBarHidden\n    }\n}\n```\n\n### 使用 Method Swizzling 隐藏 Status Bar\n\n对于 *status bar* 隐藏不了的情况，除了上面介绍的方法，iOS 中还有一种强大的黑魔法 *[Method Swizzling](http://nshipster.com/method-swizzling/)*，这里设计到了 **Objective-C** 语言的 *[runtime](https://developer.apple.com/library/mac/documentation/Cocoa/Reference/ObjCRuntimeRef/index.html#//apple_ref/c/func/method_getImplementation)* 特性，这是一个值得深入学习和研究的知识。\n\n我们只需要在 *ChildeViewController* 中对 *ParentViewController* 的 `prefersStatusBarHidden` 方法进行 *Hook* ，然后偷天换日，换成我们自己实现的方法，使其返回 `true` ，然后刷新状态栏，就可以隐藏 *status bar* 了。\n\n代码如下：\n\n```swift\n\nclass StatusBarHiddenSwizzlingChildController: UIViewController {\n\n\toverride func viewWillAppear(animated: Bool) {\n        super.viewWillAppear(animated)\n        \n        guard let parentViewController = parentViewController else {\n            return\n        }\n        \n        if parentViewController.respondsToSelector(\"setNeedsStatusBarAppearanceUpdate\") {\n            \n            hookPrefersStatusBarHidden(parentViewController)\n        }\n    }\n    \n    func hookPrefersStatusBarHidden(parentViewController: UIViewController) {\n        \n        let originalSelector = Selector(\"prefersStatusBarHidden\")\n        let swizzledSelector = Selector(\"hook_prefersStatusBarHidden\")\n        \n        let originalMethod = class_getInstanceMethod(parentViewController.dynamicType, originalSelector)\n        let swizzledMethod = class_getInstanceMethod(self.dynamicType, swizzledSelector)\n        \n        let didAddMethod: Bool = class_addMethod(parentViewController.dynamicType,\n            originalSelector,\n            method_getImplementation(swizzledMethod), method_getTypeEncoding(swizzledMethod))\n        \n        if didAddMethod {\n            class_replaceMethod(self.dynamicType,\n                swizzledSelector,\n                method_getImplementation(originalMethod),\n                method_getTypeEncoding(originalMethod))\n        } else {\n            method_exchangeImplementations(originalMethod, swizzledMethod)\n        }\n        \n        dispatch_async(dispatch_get_main_queue()) { () -> Void in\n        \n            parentViewController.prefersStatusBarHidden()\n            parentViewController.setNeedsStatusBarAppearanceUpdate()\n        }\n    }\n    \n    // must recover the hook when view will disappear\n    \n    override func viewWillDisappear(animated: Bool) {\n        super.viewWillDisappear(animated)\n        \n        guard let parentViewController = parentViewController else {\n            return\n        }\n        \n        if parentViewController.respondsToSelector(\"setNeedsStatusBarAppearanceUpdate\") {\n            \n            hookPrefersStatusBarHidden(parentViewController)\n        }\n        \n    }\n    \n    func hook_prefersStatusBarHidden() -> Bool {\n        return true\n    }\n}\n```\n\n> 注意事项：\n> \n> * 必须在 *ChildViewController* 的 `viewWillDisappear` 中将 *Hook* 的方法还原回来，否则可能会出现奇怪的问题。\n> * *ParentViewController* 中尽可能重载 `prefersStatusBarHidden` 方法，因为 *Method Swizzling* 有很多细节需要谨慎处理，如果 `hookPrefersStatusBarHidden` 写的有bug，会导致奇怪的问题。\n\n\n### 滚动ScrollView或TableView时隐藏Status Bar和Navigation Bar\n\n京东和淘宝客户端的商品搜索结果页面，在滚动时可以隐藏 *status bar* 和 *navigation bar* ，我自认为这是一个很好的设计，身为一个有追求的程序员，这个功能的实现那当然也不能放过啦~~\n\n*NavigationController* 有一个属性 `hidesBarsOnSwipe`，可以实现轻扫时隐藏 *navigation bar* ，与之对应的手势是它的另一个属性`barHideOnSwipeGestureRecognizer`，只要给这个手势添加一个方法来控制 *status bar* ，就可以实现同时隐藏 *status bar* 和 *navigation bar* 了。\n\n```swift\nclass StatusBarAndNavigationBarHiddenOnSwipeController: UITableViewController {\n    \n    var hideStatusBar = false\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        \n        view.backgroundColor = UIColor.grayColor()\n        \n        navigationController?.barHideOnSwipeGestureRecognizer.addTarget(self, action: \"swipe:\")\n        navigationController?.hidesBarsOnSwipe = true\n    }\n    \n    override func prefersStatusBarHidden() -> Bool {\n        return hideStatusBar\n    }\n    \n    func swipe(recognizer: UISwipeGestureRecognizer) {\n        \n        hideStatusBar = navigationController?.navigationBar.frame.origin.y < 0\n        \n        UIView.animateWithDuration(0.2) { () -> Void in\n            \n            self.setNeedsStatusBarAppearanceUpdate()\n        }\n    }\n    \n    override func preferredStatusBarUpdateAnimation() -> UIStatusBarAnimation {\n        return .Slide\n    }\n}\n```\n\n本文章所有示例代码下载地址：[Demo](/download/2016-03-26-status-bar-hidden-demo.zip)\n\n-------\n扩展阅读：[SWIZZLE](http://swifter.tips/swizzle/)","slug":"2016-03-26-status-bar-hidden","published":1,"date":"2016-03-26T08:30:42.000Z","updated":"2016-03-26T08:30:42.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciw78hu7j0007bg820zsm7wfe","content":"<p>自己一个人负责项目的好处是：代码想怎么写就怎么写，然而坏处是：代码要多渣有多渣，踩坑也是必须的</p>\n<p>iOS开发也已有一年半，踩过的坑实在是太多了，之前只是简单的记录下笔记，现在开始整理总结成文章，希望形成一套自己的理论体系。</p>\n<p>————————————–  我是一条华丽的分隔线 ————————————–</p>\n<p>之前一直以为，隐藏 <em>status bar</em> 只是一句简单的语句调用就搞定了，但在做公司的项目的过程中，发现居然隐藏不了，纳闷了许久后算是明白了点，没想到也是蛮多坑的。</p>\n<blockquote>\n<p>以下内容均是基于 <strong>iOS 9</strong> 及其以上的，如有出入，请善用搜索引擎</p>\n</blockquote>\n<h3 id=\"Status-Bar-的正常隐藏\"><a href=\"#Status-Bar-的正常隐藏\" class=\"headerlink\" title=\"Status Bar 的正常隐藏\"></a>Status Bar 的正常隐藏</h3><h6 id=\"view-controllers-控制-status-bar-的隐藏\"><a href=\"#view-controllers-控制-status-bar-的隐藏\" class=\"headerlink\" title=\"view-controllers 控制 status bar 的隐藏\"></a>view-controllers 控制 status bar 的隐藏</h6><p>在iOS 9中，<em>status bar</em> 的隐藏默认是通过 <em>view-controlls</em> 控制的，即每个控制器决定是否隐藏 <em>status bar</em> 。</p>\n<p>只需在 <em>controller</em> 中重载 <code>prefersStatusBarHidden</code> 函数</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">prefersStatusBarHidden</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Bool</span> &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h6 id=\"全局控制-status-bar-的隐藏\"><a href=\"#全局控制-status-bar-的隐藏\" class=\"headerlink\" title=\"全局控制 status bar 的隐藏\"></a>全局控制 status bar 的隐藏</h6><p>如果想要全局控制，只需两步：</p>\n<ul>\n<li>在Info.plist中，添加属性 <code>View controller-based status bar appearance</code> 为 <code>NO</code></li>\n<li><p>添加如下代码</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"type\">UIApplication</span>.sharedApplication().statusBarHidden = <span class=\"literal\">true</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>如果想改成每个控制器自行控制，将 <code>View controller-based status bar appearance</code> 为 <code>YES</code>即可</p>\n<h3 id=\"Status-Bar-隐藏不了的情况\"><a href=\"#Status-Bar-隐藏不了的情况\" class=\"headerlink\" title=\"Status Bar 隐藏不了的情况\"></a>Status Bar 隐藏不了的情况</h3><p>但是，有时候也会有意外发生，上述方法并不能如愿隐藏 <em>status bar</em> ,那就是 <strong>在<em>ParentViewController</em> 中添加一个全屏的 <em>ChildViewController</em> ，此时想用 <em>ChildViewController</em> 来控制状态栏时</strong> ，就会失效，即使 <em>ChildViewController</em> 中的<code>prefersStatusBarHidden</code>方法返回的是<code>YES</code>，也无法隐藏 <em>status bar</em> 。</p>\n<p><strong>解决办法是：重载 <code>childViewControllerForStatusBarHidden</code>方法</strong></p>\n<p>苹果官方文档 <a href=\"https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIViewController_Class/index.html#//apple_ref/occ/instm/UIViewController/childViewControllerForStatusBarHidden\" target=\"_blank\" rel=\"external\">UIViewController Class Reference</a> 是这样解释的：</p>\n<blockquote>\n<p>Called when the system needs the view controller to use for determining status bar hidden/unhidden state.</p>\n<p>Return Value:</p>\n<p> The view controller whose status bar hidden/unhidden status should be used. Default return value is nil.</p>\n<p>Discussion:</p>\n<p>If your container view controller derives derives the hidden state of the status bar from one of its child view controllers, implement this method to specify which child view controller you want to control the hidden/unhidden state. If you return nil or do not override this method, the status bar hidden/unhidden state for self is used.</p>\n<p>If you change the return value from this method, call the <code>setNeedsStatusBarAppearanceUpdate</code> method.</p>\n</blockquote>\n<p>大概意思就是，如果你想要让你的 <em>container view controller</em> 的 <em>child view controller</em> 控制 <em>status bar</em> 的隐藏状态的话，就重载该方法，决定使用哪个 <em>child view controller</em> 来控制 <em>隐藏/非隐藏</em> 的状态。如果返回 <em>nil</em> 或不重载该方法，就用它自己来控制 <em>status bar</em> 的状态。可以通过调用 <code>setNeedsStatusBarAppearanceUpdate</code> 方法来改变该方法返回的值，即再调用该方法一次。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StatusBarHiddenParentController</span>: <span class=\"title\">UIViewController</span> </span>&#123;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">var</span> childController: <span class=\"type\">StatusBarHiddenChildController</span>?</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">viewDidLoad</span><span class=\"params\">()</span></span> &#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.viewDidLoad()</div><div class=\"line\"></div><div class=\"line\">        childController = <span class=\"type\">StatusBarHiddenChildController</span>.fromStoryboard(<span class=\"string\">\"Main\"</span>)</div><div class=\"line\">        addChildViewController(childController!)</div><div class=\"line\">        view.addSubview(childController!.view)</div><div class=\"line\">        setNeedsStatusBarAppearanceUpdate()</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">childViewControllerForStatusBarHidden</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">UIViewController</span>? &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> childController</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">prefersStatusBarHidden</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Bool</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StatusBarHiddenChildController</span>: <span class=\"title\">UIViewController</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">viewDidLoad</span><span class=\"params\">()</span></span> &#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.viewDidLoad()</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// Do any additional setup after loading the view.</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">prefersStatusBarHidden</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Bool</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>上述代码最终能将状态栏隐藏，即使在 <em>StatusBarHiddenParentController</em> 中的<code>prefersStatusBarHidden</code>返回的是<code>NO</code></p>\n<p>注意：因为<code>childViewControllerForStatusBarHidden</code>会比<code>viewDidLoad</code> 先调用，所以在<code>viewDidLoad</code>中要调用<code>setNeedsStatusBarAppearanceUpdate</code></p>\n<p>有时候我们需要关闭控制器视图，如下列三种情况：</p>\n<ul>\n<li>将控制器从navigationController的堆栈中pop出去</li>\n<li>将present出来的控制器dismiss掉</li>\n<li>将子控制器从父控制器中移除</li>\n</ul>\n<p><em>push</em> 和 <em>present</em> 两种方式展示的 <em>view controller</em> 在 <em>pop</em> 和 <em>dismiss</em> 时都能够自动还原 <em>status bar</em> 的状态。但是，把子控制器从父控制器中移除时，就会出现奇怪的问题， <em>status bar</em> 并不能自动还原，因此还需要特别处理。</p>\n<p>我们可以设置一个Bool变量 <code>statusBarHidden</code> 用来记录目前 <em>statusBar</em> 是否隐藏，在 <code>prefersStatusBarHidden</code> 函数中返回 <code>statusBarHidden</code>值。在要移除子控制器的函数中做两步操作：</p>\n<ol>\n<li>先将 <code>statusBarHidden</code> 设置为 <code>False</code>, 并调用 <code>setNeedsStatusBarAppearanceUpdate</code> 刷新状态栏</li>\n<li>再将子控制器移除。</li>\n</ol>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StatusBarHiddenRemoveWayChildController</span>: <span class=\"title\">UIViewController</span> </span>&#123;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">var</span> statusBarHidden: <span class=\"type\">Bool</span> = <span class=\"literal\">true</span></div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">viewDidLoad</span><span class=\"params\">()</span></span> &#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.viewDidLoad()</div><div class=\"line\">        </div><div class=\"line\">        <span class=\"keyword\">let</span> removeButton = <span class=\"type\">UIButton</span>(frame: <span class=\"type\">CGRectMake</span>(<span class=\"number\">30</span>, <span class=\"number\">80</span>, <span class=\"number\">100</span>, <span class=\"number\">30</span>))</div><div class=\"line\">        removeButton.setTitle(<span class=\"string\">\"remove\"</span>, forState: .<span class=\"type\">Normal</span>)</div><div class=\"line\">        removeButton.addTarget(<span class=\"keyword\">self</span>, action: <span class=\"string\">\"remove\"</span>, forControlEvents: .<span class=\"type\">TouchUpInside</span>)</div><div class=\"line\">        view.addSubview(removeButton)</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">// 1. set `statusBarHidden` into `false`, and then refresh status bar</span></div><div class=\"line\">    <span class=\"comment\">// 2. remove from parent controller</span></div><div class=\"line\">    </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">remove</span><span class=\"params\">()</span></span> &#123;</div><div class=\"line\">        statusBarHidden = <span class=\"literal\">false</span></div><div class=\"line\">        setNeedsStatusBarAppearanceUpdate()</div><div class=\"line\">        </div><div class=\"line\">        view.removeFromSuperview()</div><div class=\"line\">        removeFromParentViewController()</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">prefersStatusBarHidden</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Bool</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> statusBarHidden</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"使用-Method-Swizzling-隐藏-Status-Bar\"><a href=\"#使用-Method-Swizzling-隐藏-Status-Bar\" class=\"headerlink\" title=\"使用 Method Swizzling 隐藏 Status Bar\"></a>使用 Method Swizzling 隐藏 Status Bar</h3><p>对于 <em>status bar</em> 隐藏不了的情况，除了上面介绍的方法，iOS 中还有一种强大的黑魔法 <em><a href=\"http://nshipster.com/method-swizzling/\" target=\"_blank\" rel=\"external\">Method Swizzling</a></em>，这里设计到了 <strong>Objective-C</strong> 语言的 <em><a href=\"https://developer.apple.com/library/mac/documentation/Cocoa/Reference/ObjCRuntimeRef/index.html#//apple_ref/c/func/method_getImplementation\" target=\"_blank\" rel=\"external\">runtime</a></em> 特性，这是一个值得深入学习和研究的知识。</p>\n<p>我们只需要在 <em>ChildeViewController</em> 中对 <em>ParentViewController</em> 的 <code>prefersStatusBarHidden</code> 方法进行 <em>Hook</em> ，然后偷天换日，换成我们自己实现的方法，使其返回 <code>true</code> ，然后刷新状态栏，就可以隐藏 <em>status bar</em> 了。</p>\n<p>代码如下：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StatusBarHiddenSwizzlingChildController</span>: <span class=\"title\">UIViewController</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">viewWillAppear</span><span class=\"params\">(animated: Bool)</span></span> &#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.viewWillAppear(animated)</div><div class=\"line\">        </div><div class=\"line\">        <span class=\"keyword\">guard</span> <span class=\"keyword\">let</span> parentViewController = parentViewController <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span></div><div class=\"line\">        &#125;</div><div class=\"line\">        </div><div class=\"line\">        <span class=\"keyword\">if</span> parentViewController.respondsToSelector(<span class=\"string\">\"setNeedsStatusBarAppearanceUpdate\"</span>) &#123;</div><div class=\"line\">            </div><div class=\"line\">            hookPrefersStatusBarHidden(parentViewController)</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">hookPrefersStatusBarHidden</span><span class=\"params\">(parentViewController: UIViewController)</span></span> &#123;</div><div class=\"line\">        </div><div class=\"line\">        <span class=\"keyword\">let</span> originalSelector = <span class=\"type\">Selector</span>(<span class=\"string\">\"prefersStatusBarHidden\"</span>)</div><div class=\"line\">        <span class=\"keyword\">let</span> swizzledSelector = <span class=\"type\">Selector</span>(<span class=\"string\">\"hook_prefersStatusBarHidden\"</span>)</div><div class=\"line\">        </div><div class=\"line\">        <span class=\"keyword\">let</span> originalMethod = class_getInstanceMethod(parentViewController.<span class=\"keyword\">dynamicType</span>, originalSelector)</div><div class=\"line\">        <span class=\"keyword\">let</span> swizzledMethod = class_getInstanceMethod(<span class=\"keyword\">self</span>.<span class=\"keyword\">dynamicType</span>, swizzledSelector)</div><div class=\"line\">        </div><div class=\"line\">        <span class=\"keyword\">let</span> didAddMethod: <span class=\"type\">Bool</span> = class_addMethod(parentViewController.<span class=\"keyword\">dynamicType</span>,</div><div class=\"line\">            originalSelector,</div><div class=\"line\">            method_getImplementation(swizzledMethod), method_getTypeEncoding(swizzledMethod))</div><div class=\"line\">        </div><div class=\"line\">        <span class=\"keyword\">if</span> didAddMethod &#123;</div><div class=\"line\">            class_replaceMethod(<span class=\"keyword\">self</span>.<span class=\"keyword\">dynamicType</span>,</div><div class=\"line\">                swizzledSelector,</div><div class=\"line\">                method_getImplementation(originalMethod),</div><div class=\"line\">                method_getTypeEncoding(originalMethod))</div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">            method_exchangeImplementations(originalMethod, swizzledMethod)</div><div class=\"line\">        &#125;</div><div class=\"line\">        </div><div class=\"line\">        dispatch_async(dispatch_get_main_queue()) &#123; () -&gt; <span class=\"type\">Void</span> <span class=\"keyword\">in</span></div><div class=\"line\">        </div><div class=\"line\">            parentViewController.prefersStatusBarHidden()</div><div class=\"line\">            parentViewController.setNeedsStatusBarAppearanceUpdate()</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">// must recover the hook when view will disappear</span></div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">viewWillDisappear</span><span class=\"params\">(animated: Bool)</span></span> &#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.viewWillDisappear(animated)</div><div class=\"line\">        </div><div class=\"line\">        <span class=\"keyword\">guard</span> <span class=\"keyword\">let</span> parentViewController = parentViewController <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span></div><div class=\"line\">        &#125;</div><div class=\"line\">        </div><div class=\"line\">        <span class=\"keyword\">if</span> parentViewController.respondsToSelector(<span class=\"string\">\"setNeedsStatusBarAppearanceUpdate\"</span>) &#123;</div><div class=\"line\">            </div><div class=\"line\">            hookPrefersStatusBarHidden(parentViewController)</div><div class=\"line\">        &#125;</div><div class=\"line\">        </div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">hook_prefersStatusBarHidden</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Bool</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>注意事项：</p>\n<ul>\n<li>必须在 <em>ChildViewController</em> 的 <code>viewWillDisappear</code> 中将 <em>Hook</em> 的方法还原回来，否则可能会出现奇怪的问题。</li>\n<li><em>ParentViewController</em> 中尽可能重载 <code>prefersStatusBarHidden</code> 方法，因为 <em>Method Swizzling</em> 有很多细节需要谨慎处理，如果 <code>hookPrefersStatusBarHidden</code> 写的有bug，会导致奇怪的问题。</li>\n</ul>\n</blockquote>\n<h3 id=\"滚动ScrollView或TableView时隐藏Status-Bar和Navigation-Bar\"><a href=\"#滚动ScrollView或TableView时隐藏Status-Bar和Navigation-Bar\" class=\"headerlink\" title=\"滚动ScrollView或TableView时隐藏Status Bar和Navigation Bar\"></a>滚动ScrollView或TableView时隐藏Status Bar和Navigation Bar</h3><p>京东和淘宝客户端的商品搜索结果页面，在滚动时可以隐藏 <em>status bar</em> 和 <em>navigation bar</em> ，我自认为这是一个很好的设计，身为一个有追求的程序员，这个功能的实现那当然也不能放过啦~~</p>\n<p><em>NavigationController</em> 有一个属性 <code>hidesBarsOnSwipe</code>，可以实现轻扫时隐藏 <em>navigation bar</em> ，与之对应的手势是它的另一个属性<code>barHideOnSwipeGestureRecognizer</code>，只要给这个手势添加一个方法来控制 <em>status bar</em> ，就可以实现同时隐藏 <em>status bar</em> 和 <em>navigation bar</em> 了。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StatusBarAndNavigationBarHiddenOnSwipeController</span>: <span class=\"title\">UITableViewController</span> </span>&#123;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">var</span> hideStatusBar = <span class=\"literal\">false</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">viewDidLoad</span><span class=\"params\">()</span></span> &#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.viewDidLoad()</div><div class=\"line\">        </div><div class=\"line\">        view.backgroundColor = <span class=\"type\">UIColor</span>.grayColor()</div><div class=\"line\">        </div><div class=\"line\">        navigationController?.barHideOnSwipeGestureRecognizer.addTarget(<span class=\"keyword\">self</span>, action: <span class=\"string\">\"swipe:\"</span>)</div><div class=\"line\">        navigationController?.hidesBarsOnSwipe = <span class=\"literal\">true</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">prefersStatusBarHidden</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Bool</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> hideStatusBar</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">swipe</span><span class=\"params\">(recognizer: UISwipeGestureRecognizer)</span></span> &#123;</div><div class=\"line\">        </div><div class=\"line\">        hideStatusBar = navigationController?.navigationBar.frame.origin.y &lt; <span class=\"number\">0</span></div><div class=\"line\">        </div><div class=\"line\">        <span class=\"type\">UIView</span>.animateWithDuration(<span class=\"number\">0.2</span>) &#123; () -&gt; <span class=\"type\">Void</span> <span class=\"keyword\">in</span></div><div class=\"line\">            </div><div class=\"line\">            <span class=\"keyword\">self</span>.setNeedsStatusBarAppearanceUpdate()</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">preferredStatusBarUpdateAnimation</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">UIStatusBarAnimation</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> .<span class=\"type\">Slide</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>本文章所有示例代码下载地址：<a href=\"/download/2016-03-26-status-bar-hidden-demo.zip\">Demo</a></p>\n<hr>\n<p>扩展阅读：<a href=\"http://swifter.tips/swizzle/\" target=\"_blank\" rel=\"external\">SWIZZLE</a></p>\n","excerpt":"","more":"<p>自己一个人负责项目的好处是：代码想怎么写就怎么写，然而坏处是：代码要多渣有多渣，踩坑也是必须的</p>\n<p>iOS开发也已有一年半，踩过的坑实在是太多了，之前只是简单的记录下笔记，现在开始整理总结成文章，希望形成一套自己的理论体系。</p>\n<p>————————————–  我是一条华丽的分隔线 ————————————–</p>\n<p>之前一直以为，隐藏 <em>status bar</em> 只是一句简单的语句调用就搞定了，但在做公司的项目的过程中，发现居然隐藏不了，纳闷了许久后算是明白了点，没想到也是蛮多坑的。</p>\n<blockquote>\n<p>以下内容均是基于 <strong>iOS 9</strong> 及其以上的，如有出入，请善用搜索引擎</p>\n</blockquote>\n<h3 id=\"Status-Bar-的正常隐藏\"><a href=\"#Status-Bar-的正常隐藏\" class=\"headerlink\" title=\"Status Bar 的正常隐藏\"></a>Status Bar 的正常隐藏</h3><h6 id=\"view-controllers-控制-status-bar-的隐藏\"><a href=\"#view-controllers-控制-status-bar-的隐藏\" class=\"headerlink\" title=\"view-controllers 控制 status bar 的隐藏\"></a>view-controllers 控制 status bar 的隐藏</h6><p>在iOS 9中，<em>status bar</em> 的隐藏默认是通过 <em>view-controlls</em> 控制的，即每个控制器决定是否隐藏 <em>status bar</em> 。</p>\n<p>只需在 <em>controller</em> 中重载 <code>prefersStatusBarHidden</code> 函数</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">prefersStatusBarHidden</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Bool</span> &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h6 id=\"全局控制-status-bar-的隐藏\"><a href=\"#全局控制-status-bar-的隐藏\" class=\"headerlink\" title=\"全局控制 status bar 的隐藏\"></a>全局控制 status bar 的隐藏</h6><p>如果想要全局控制，只需两步：</p>\n<ul>\n<li>在Info.plist中，添加属性 <code>View controller-based status bar appearance</code> 为 <code>NO</code></li>\n<li><p>添加如下代码</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"type\">UIApplication</span>.sharedApplication().statusBarHidden = <span class=\"literal\">true</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>如果想改成每个控制器自行控制，将 <code>View controller-based status bar appearance</code> 为 <code>YES</code>即可</p>\n<h3 id=\"Status-Bar-隐藏不了的情况\"><a href=\"#Status-Bar-隐藏不了的情况\" class=\"headerlink\" title=\"Status Bar 隐藏不了的情况\"></a>Status Bar 隐藏不了的情况</h3><p>但是，有时候也会有意外发生，上述方法并不能如愿隐藏 <em>status bar</em> ,那就是 <strong>在<em>ParentViewController</em> 中添加一个全屏的 <em>ChildViewController</em> ，此时想用 <em>ChildViewController</em> 来控制状态栏时</strong> ，就会失效，即使 <em>ChildViewController</em> 中的<code>prefersStatusBarHidden</code>方法返回的是<code>YES</code>，也无法隐藏 <em>status bar</em> 。</p>\n<p><strong>解决办法是：重载 <code>childViewControllerForStatusBarHidden</code>方法</strong></p>\n<p>苹果官方文档 <a href=\"https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIViewController_Class/index.html#//apple_ref/occ/instm/UIViewController/childViewControllerForStatusBarHidden\">UIViewController Class Reference</a> 是这样解释的：</p>\n<blockquote>\n<p>Called when the system needs the view controller to use for determining status bar hidden/unhidden state.</p>\n<p>Return Value:</p>\n<p> The view controller whose status bar hidden/unhidden status should be used. Default return value is nil.</p>\n<p>Discussion:</p>\n<p>If your container view controller derives derives the hidden state of the status bar from one of its child view controllers, implement this method to specify which child view controller you want to control the hidden/unhidden state. If you return nil or do not override this method, the status bar hidden/unhidden state for self is used.</p>\n<p>If you change the return value from this method, call the <code>setNeedsStatusBarAppearanceUpdate</code> method.</p>\n</blockquote>\n<p>大概意思就是，如果你想要让你的 <em>container view controller</em> 的 <em>child view controller</em> 控制 <em>status bar</em> 的隐藏状态的话，就重载该方法，决定使用哪个 <em>child view controller</em> 来控制 <em>隐藏/非隐藏</em> 的状态。如果返回 <em>nil</em> 或不重载该方法，就用它自己来控制 <em>status bar</em> 的状态。可以通过调用 <code>setNeedsStatusBarAppearanceUpdate</code> 方法来改变该方法返回的值，即再调用该方法一次。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StatusBarHiddenParentController</span>: <span class=\"title\">UIViewController</span> </span>&#123;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">var</span> childController: <span class=\"type\">StatusBarHiddenChildController</span>?</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">viewDidLoad</span><span class=\"params\">()</span></span> &#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.viewDidLoad()</div><div class=\"line\"></div><div class=\"line\">        childController = <span class=\"type\">StatusBarHiddenChildController</span>.fromStoryboard(<span class=\"string\">\"Main\"</span>)</div><div class=\"line\">        addChildViewController(childController!)</div><div class=\"line\">        view.addSubview(childController!.view)</div><div class=\"line\">        setNeedsStatusBarAppearanceUpdate()</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">childViewControllerForStatusBarHidden</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">UIViewController</span>? &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> childController</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">prefersStatusBarHidden</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Bool</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StatusBarHiddenChildController</span>: <span class=\"title\">UIViewController</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">viewDidLoad</span><span class=\"params\">()</span></span> &#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.viewDidLoad()</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// Do any additional setup after loading the view.</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">prefersStatusBarHidden</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Bool</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>上述代码最终能将状态栏隐藏，即使在 <em>StatusBarHiddenParentController</em> 中的<code>prefersStatusBarHidden</code>返回的是<code>NO</code></p>\n<p>注意：因为<code>childViewControllerForStatusBarHidden</code>会比<code>viewDidLoad</code> 先调用，所以在<code>viewDidLoad</code>中要调用<code>setNeedsStatusBarAppearanceUpdate</code></p>\n<p>有时候我们需要关闭控制器视图，如下列三种情况：</p>\n<ul>\n<li>将控制器从navigationController的堆栈中pop出去</li>\n<li>将present出来的控制器dismiss掉</li>\n<li>将子控制器从父控制器中移除</li>\n</ul>\n<p><em>push</em> 和 <em>present</em> 两种方式展示的 <em>view controller</em> 在 <em>pop</em> 和 <em>dismiss</em> 时都能够自动还原 <em>status bar</em> 的状态。但是，把子控制器从父控制器中移除时，就会出现奇怪的问题， <em>status bar</em> 并不能自动还原，因此还需要特别处理。</p>\n<p>我们可以设置一个Bool变量 <code>statusBarHidden</code> 用来记录目前 <em>statusBar</em> 是否隐藏，在 <code>prefersStatusBarHidden</code> 函数中返回 <code>statusBarHidden</code>值。在要移除子控制器的函数中做两步操作：</p>\n<ol>\n<li>先将 <code>statusBarHidden</code> 设置为 <code>False</code>, 并调用 <code>setNeedsStatusBarAppearanceUpdate</code> 刷新状态栏</li>\n<li>再将子控制器移除。</li>\n</ol>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StatusBarHiddenRemoveWayChildController</span>: <span class=\"title\">UIViewController</span> </span>&#123;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">var</span> statusBarHidden: <span class=\"type\">Bool</span> = <span class=\"literal\">true</span></div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">viewDidLoad</span><span class=\"params\">()</span></span> &#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.viewDidLoad()</div><div class=\"line\">        </div><div class=\"line\">        <span class=\"keyword\">let</span> removeButton = <span class=\"type\">UIButton</span>(frame: <span class=\"type\">CGRectMake</span>(<span class=\"number\">30</span>, <span class=\"number\">80</span>, <span class=\"number\">100</span>, <span class=\"number\">30</span>))</div><div class=\"line\">        removeButton.setTitle(<span class=\"string\">\"remove\"</span>, forState: .<span class=\"type\">Normal</span>)</div><div class=\"line\">        removeButton.addTarget(<span class=\"keyword\">self</span>, action: <span class=\"string\">\"remove\"</span>, forControlEvents: .<span class=\"type\">TouchUpInside</span>)</div><div class=\"line\">        view.addSubview(removeButton)</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">// 1. set `statusBarHidden` into `false`, and then refresh status bar</span></div><div class=\"line\">    <span class=\"comment\">// 2. remove from parent controller</span></div><div class=\"line\">    </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">remove</span><span class=\"params\">()</span></span> &#123;</div><div class=\"line\">        statusBarHidden = <span class=\"literal\">false</span></div><div class=\"line\">        setNeedsStatusBarAppearanceUpdate()</div><div class=\"line\">        </div><div class=\"line\">        view.removeFromSuperview()</div><div class=\"line\">        removeFromParentViewController()</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">prefersStatusBarHidden</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Bool</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> statusBarHidden</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"使用-Method-Swizzling-隐藏-Status-Bar\"><a href=\"#使用-Method-Swizzling-隐藏-Status-Bar\" class=\"headerlink\" title=\"使用 Method Swizzling 隐藏 Status Bar\"></a>使用 Method Swizzling 隐藏 Status Bar</h3><p>对于 <em>status bar</em> 隐藏不了的情况，除了上面介绍的方法，iOS 中还有一种强大的黑魔法 <em><a href=\"http://nshipster.com/method-swizzling/\">Method Swizzling</a></em>，这里设计到了 <strong>Objective-C</strong> 语言的 <em><a href=\"https://developer.apple.com/library/mac/documentation/Cocoa/Reference/ObjCRuntimeRef/index.html#//apple_ref/c/func/method_getImplementation\">runtime</a></em> 特性，这是一个值得深入学习和研究的知识。</p>\n<p>我们只需要在 <em>ChildeViewController</em> 中对 <em>ParentViewController</em> 的 <code>prefersStatusBarHidden</code> 方法进行 <em>Hook</em> ，然后偷天换日，换成我们自己实现的方法，使其返回 <code>true</code> ，然后刷新状态栏，就可以隐藏 <em>status bar</em> 了。</p>\n<p>代码如下：</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StatusBarHiddenSwizzlingChildController</span>: <span class=\"title\">UIViewController</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">viewWillAppear</span><span class=\"params\">(animated: Bool)</span></span> &#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.viewWillAppear(animated)</div><div class=\"line\">        </div><div class=\"line\">        <span class=\"keyword\">guard</span> <span class=\"keyword\">let</span> parentViewController = parentViewController <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span></div><div class=\"line\">        &#125;</div><div class=\"line\">        </div><div class=\"line\">        <span class=\"keyword\">if</span> parentViewController.respondsToSelector(<span class=\"string\">\"setNeedsStatusBarAppearanceUpdate\"</span>) &#123;</div><div class=\"line\">            </div><div class=\"line\">            hookPrefersStatusBarHidden(parentViewController)</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">hookPrefersStatusBarHidden</span><span class=\"params\">(parentViewController: UIViewController)</span></span> &#123;</div><div class=\"line\">        </div><div class=\"line\">        <span class=\"keyword\">let</span> originalSelector = <span class=\"type\">Selector</span>(<span class=\"string\">\"prefersStatusBarHidden\"</span>)</div><div class=\"line\">        <span class=\"keyword\">let</span> swizzledSelector = <span class=\"type\">Selector</span>(<span class=\"string\">\"hook_prefersStatusBarHidden\"</span>)</div><div class=\"line\">        </div><div class=\"line\">        <span class=\"keyword\">let</span> originalMethod = class_getInstanceMethod(parentViewController.<span class=\"keyword\">dynamicType</span>, originalSelector)</div><div class=\"line\">        <span class=\"keyword\">let</span> swizzledMethod = class_getInstanceMethod(<span class=\"keyword\">self</span>.<span class=\"keyword\">dynamicType</span>, swizzledSelector)</div><div class=\"line\">        </div><div class=\"line\">        <span class=\"keyword\">let</span> didAddMethod: <span class=\"type\">Bool</span> = class_addMethod(parentViewController.<span class=\"keyword\">dynamicType</span>,</div><div class=\"line\">            originalSelector,</div><div class=\"line\">            method_getImplementation(swizzledMethod), method_getTypeEncoding(swizzledMethod))</div><div class=\"line\">        </div><div class=\"line\">        <span class=\"keyword\">if</span> didAddMethod &#123;</div><div class=\"line\">            class_replaceMethod(<span class=\"keyword\">self</span>.<span class=\"keyword\">dynamicType</span>,</div><div class=\"line\">                swizzledSelector,</div><div class=\"line\">                method_getImplementation(originalMethod),</div><div class=\"line\">                method_getTypeEncoding(originalMethod))</div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">            method_exchangeImplementations(originalMethod, swizzledMethod)</div><div class=\"line\">        &#125;</div><div class=\"line\">        </div><div class=\"line\">        dispatch_async(dispatch_get_main_queue()) &#123; () -&gt; <span class=\"type\">Void</span> <span class=\"keyword\">in</span></div><div class=\"line\">        </div><div class=\"line\">            parentViewController.prefersStatusBarHidden()</div><div class=\"line\">            parentViewController.setNeedsStatusBarAppearanceUpdate()</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">// must recover the hook when view will disappear</span></div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">viewWillDisappear</span><span class=\"params\">(animated: Bool)</span></span> &#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.viewWillDisappear(animated)</div><div class=\"line\">        </div><div class=\"line\">        <span class=\"keyword\">guard</span> <span class=\"keyword\">let</span> parentViewController = parentViewController <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span></div><div class=\"line\">        &#125;</div><div class=\"line\">        </div><div class=\"line\">        <span class=\"keyword\">if</span> parentViewController.respondsToSelector(<span class=\"string\">\"setNeedsStatusBarAppearanceUpdate\"</span>) &#123;</div><div class=\"line\">            </div><div class=\"line\">            hookPrefersStatusBarHidden(parentViewController)</div><div class=\"line\">        &#125;</div><div class=\"line\">        </div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">hook_prefersStatusBarHidden</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Bool</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>注意事项：</p>\n<ul>\n<li>必须在 <em>ChildViewController</em> 的 <code>viewWillDisappear</code> 中将 <em>Hook</em> 的方法还原回来，否则可能会出现奇怪的问题。</li>\n<li><em>ParentViewController</em> 中尽可能重载 <code>prefersStatusBarHidden</code> 方法，因为 <em>Method Swizzling</em> 有很多细节需要谨慎处理，如果 <code>hookPrefersStatusBarHidden</code> 写的有bug，会导致奇怪的问题。</li>\n</ul>\n</blockquote>\n<h3 id=\"滚动ScrollView或TableView时隐藏Status-Bar和Navigation-Bar\"><a href=\"#滚动ScrollView或TableView时隐藏Status-Bar和Navigation-Bar\" class=\"headerlink\" title=\"滚动ScrollView或TableView时隐藏Status Bar和Navigation Bar\"></a>滚动ScrollView或TableView时隐藏Status Bar和Navigation Bar</h3><p>京东和淘宝客户端的商品搜索结果页面，在滚动时可以隐藏 <em>status bar</em> 和 <em>navigation bar</em> ，我自认为这是一个很好的设计，身为一个有追求的程序员，这个功能的实现那当然也不能放过啦~~</p>\n<p><em>NavigationController</em> 有一个属性 <code>hidesBarsOnSwipe</code>，可以实现轻扫时隐藏 <em>navigation bar</em> ，与之对应的手势是它的另一个属性<code>barHideOnSwipeGestureRecognizer</code>，只要给这个手势添加一个方法来控制 <em>status bar</em> ，就可以实现同时隐藏 <em>status bar</em> 和 <em>navigation bar</em> 了。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StatusBarAndNavigationBarHiddenOnSwipeController</span>: <span class=\"title\">UITableViewController</span> </span>&#123;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">var</span> hideStatusBar = <span class=\"literal\">false</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">viewDidLoad</span><span class=\"params\">()</span></span> &#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.viewDidLoad()</div><div class=\"line\">        </div><div class=\"line\">        view.backgroundColor = <span class=\"type\">UIColor</span>.grayColor()</div><div class=\"line\">        </div><div class=\"line\">        navigationController?.barHideOnSwipeGestureRecognizer.addTarget(<span class=\"keyword\">self</span>, action: <span class=\"string\">\"swipe:\"</span>)</div><div class=\"line\">        navigationController?.hidesBarsOnSwipe = <span class=\"literal\">true</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">prefersStatusBarHidden</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Bool</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> hideStatusBar</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">swipe</span><span class=\"params\">(recognizer: UISwipeGestureRecognizer)</span></span> &#123;</div><div class=\"line\">        </div><div class=\"line\">        hideStatusBar = navigationController?.navigationBar.frame.origin.y &lt; <span class=\"number\">0</span></div><div class=\"line\">        </div><div class=\"line\">        <span class=\"type\">UIView</span>.animateWithDuration(<span class=\"number\">0.2</span>) &#123; () -&gt; <span class=\"type\">Void</span> <span class=\"keyword\">in</span></div><div class=\"line\">            </div><div class=\"line\">            <span class=\"keyword\">self</span>.setNeedsStatusBarAppearanceUpdate()</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">preferredStatusBarUpdateAnimation</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">UIStatusBarAnimation</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> .<span class=\"type\">Slide</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>本文章所有示例代码下载地址：<a href=\"/download/2016-03-26-status-bar-hidden-demo.zip\">Demo</a></p>\n<hr>\n<p>扩展阅读：<a href=\"http://swifter.tips/swizzle/\">SWIZZLE</a></p>\n"},{"title":"自定义Xcode模板","_content":"\nXcode 拥有一个很好的内置模板，创建文件时会在头部生成一段注释，包含了文件名、创建者、创建时间、版权等信息，但有时候我们需要根据不同的需求自定义一套模板。\n\nXcode 的 iOS 代码模板\n\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/xcode_ios_source_templetes.png)\n\n空的`Swift`文件的默认模板是这样的：\n\n\t//\n\t//  FileName.swift\n\t//  ProjectName\n\t//\n\t//  Created by Your Name on 12/29/15\n\t//  Copyright (c) 2015 Company. All rights reserved.\n\t//\n\t\n\timport Foundation\n\n在一些开源项目中，我们有时候会看到在源代码头部有一大串长长的`MIT`协议声明，每个文件都有，当然，那些开源大牛们肯定不会傻傻的每个文件复制粘贴，这么麻烦的事情身为一个程序员肯定是忍不了的，一定有一个一劳永逸的办法，那就是为空的`Swift`文件创建自定义模板。\n\n### 创建模板\n\nXcode 会在 `~/Library/Developer/Xcode/Templates` 寻找自定义模板。\n\nXcode会把一个目录当作一个组（group），我们可以在上述目录下创建一个名为`Custom`的组，然后把系统自带的`Swift`模板拷贝进去。\n\n在终端中运行如下命令：\n\n\t$ mkdir -p ~/Library/Developer/Xcode/Templates/Custom\n\t$ cp -R /Applications/Xcode.app/Contents/Developer/Library/Xcode/Templates/File\\ Templates/Source/Swift\\ File.xctemplate ~/Library/Developer/Xcode/Templates/Custom/\n\t\n拷贝完后，我们可以看到有这几个文件：\n\n\t$ cd ~/Library/Developer/Xcode/Templates/Custom/Swift\\ File.xctemplate\n\t$ ls\n\tTemplateIcon.png          TemplateIcon@2x.png\n\tTemplateInfo.plist        ___FILEBASENAME___.swift\n\t\n打开 `___FILEBASENAME___.swift`, 代码如下：\n\n\t//\n\t//  ___FILENAME___\n\t//  ___PROJECTNAME___\n\t//\n\t//  Created by ___FULLUSERNAME___ on ___DATE___.\n\t//___COPYRIGHT___\n\t//\n\t\n\timport Foundation\n\t\n这就是我们正在找的模板，把它改成你想要的格式就可以了。\n\n我们加入`MIT`协议声明，如下：\n\n\t//  ___FILENAME___\n\t//  ___PROJECTNAME___\n\t//\n\t//  Created by ___FULLUSERNAME___ on ___DATE___.\n\t//\n\t//\n\t//  Copyright (c) ___YEAR___ ___FULLUSERNAME___\n\t//\n\t//  Permission is hereby granted, free of charge, to any person obtaining a copy\n\t//  of this software and associated documentation files (the \"Software\"), to deal\n\t//  in the Software without restriction, including without limitation the rights\n\t//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t//  copies of the Software, and to permit persons to whom the Software is\n\t//  furnished to do so, subject to the following conditions:\n\t//\n\t//  The above copyright notice and this permission notice shall be included in\n\t//  all copies or substantial portions of the Software.\n\t//\n\t//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t//  THE SOFTWARE.\n\t//\n\t\n\timport Foundation\n\t\n重启Xcode，新建文件 *File* → *New* ，单击 *Custom* ，你可以看到新的模板\n\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/xcode_custom_templetes.png)\n\nEnjoy coding!!!","source":"_posts/2016-12-01-custom-xcode-templetes.md","raw":"----\ntitle: 自定义Xcode模板\n----\n\nXcode 拥有一个很好的内置模板，创建文件时会在头部生成一段注释，包含了文件名、创建者、创建时间、版权等信息，但有时候我们需要根据不同的需求自定义一套模板。\n\nXcode 的 iOS 代码模板\n\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/xcode_ios_source_templetes.png)\n\n空的`Swift`文件的默认模板是这样的：\n\n\t//\n\t//  FileName.swift\n\t//  ProjectName\n\t//\n\t//  Created by Your Name on 12/29/15\n\t//  Copyright (c) 2015 Company. All rights reserved.\n\t//\n\t\n\timport Foundation\n\n在一些开源项目中，我们有时候会看到在源代码头部有一大串长长的`MIT`协议声明，每个文件都有，当然，那些开源大牛们肯定不会傻傻的每个文件复制粘贴，这么麻烦的事情身为一个程序员肯定是忍不了的，一定有一个一劳永逸的办法，那就是为空的`Swift`文件创建自定义模板。\n\n### 创建模板\n\nXcode 会在 `~/Library/Developer/Xcode/Templates` 寻找自定义模板。\n\nXcode会把一个目录当作一个组（group），我们可以在上述目录下创建一个名为`Custom`的组，然后把系统自带的`Swift`模板拷贝进去。\n\n在终端中运行如下命令：\n\n\t$ mkdir -p ~/Library/Developer/Xcode/Templates/Custom\n\t$ cp -R /Applications/Xcode.app/Contents/Developer/Library/Xcode/Templates/File\\ Templates/Source/Swift\\ File.xctemplate ~/Library/Developer/Xcode/Templates/Custom/\n\t\n拷贝完后，我们可以看到有这几个文件：\n\n\t$ cd ~/Library/Developer/Xcode/Templates/Custom/Swift\\ File.xctemplate\n\t$ ls\n\tTemplateIcon.png          TemplateIcon@2x.png\n\tTemplateInfo.plist        ___FILEBASENAME___.swift\n\t\n打开 `___FILEBASENAME___.swift`, 代码如下：\n\n\t//\n\t//  ___FILENAME___\n\t//  ___PROJECTNAME___\n\t//\n\t//  Created by ___FULLUSERNAME___ on ___DATE___.\n\t//___COPYRIGHT___\n\t//\n\t\n\timport Foundation\n\t\n这就是我们正在找的模板，把它改成你想要的格式就可以了。\n\n我们加入`MIT`协议声明，如下：\n\n\t//  ___FILENAME___\n\t//  ___PROJECTNAME___\n\t//\n\t//  Created by ___FULLUSERNAME___ on ___DATE___.\n\t//\n\t//\n\t//  Copyright (c) ___YEAR___ ___FULLUSERNAME___\n\t//\n\t//  Permission is hereby granted, free of charge, to any person obtaining a copy\n\t//  of this software and associated documentation files (the \"Software\"), to deal\n\t//  in the Software without restriction, including without limitation the rights\n\t//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t//  copies of the Software, and to permit persons to whom the Software is\n\t//  furnished to do so, subject to the following conditions:\n\t//\n\t//  The above copyright notice and this permission notice shall be included in\n\t//  all copies or substantial portions of the Software.\n\t//\n\t//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t//  THE SOFTWARE.\n\t//\n\t\n\timport Foundation\n\t\n重启Xcode，新建文件 *File* → *New* ，单击 *Custom* ，你可以看到新的模板\n\n![](http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/xcode_custom_templetes.png)\n\nEnjoy coding!!!","slug":"2016-12-01-custom-xcode-templetes","published":1,"date":"2016-12-01T11:15:10.000Z","updated":"2016-12-02T03:35:05.000Z","_id":"ciw78hu7m0008bg82bieojfzv","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Xcode 拥有一个很好的内置模板，创建文件时会在头部生成一段注释，包含了文件名、创建者、创建时间、版权等信息，但有时候我们需要根据不同的需求自定义一套模板。</p>\n<p>Xcode 的 iOS 代码模板</p>\n<p><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/xcode_ios_source_templetes.png\" alt=\"\"></p>\n<p>空的<code>Swift</code>文件的默认模板是这样的：</p>\n<pre><code>//\n//  FileName.swift\n//  ProjectName\n//\n//  Created by Your Name on 12/29/15\n//  Copyright (c) 2015 Company. All rights reserved.\n//\n\nimport Foundation\n</code></pre><p>在一些开源项目中，我们有时候会看到在源代码头部有一大串长长的<code>MIT</code>协议声明，每个文件都有，当然，那些开源大牛们肯定不会傻傻的每个文件复制粘贴，这么麻烦的事情身为一个程序员肯定是忍不了的，一定有一个一劳永逸的办法，那就是为空的<code>Swift</code>文件创建自定义模板。</p>\n<h3 id=\"创建模板\"><a href=\"#创建模板\" class=\"headerlink\" title=\"创建模板\"></a>创建模板</h3><p>Xcode 会在 <code>~/Library/Developer/Xcode/Templates</code> 寻找自定义模板。</p>\n<p>Xcode会把一个目录当作一个组（group），我们可以在上述目录下创建一个名为<code>Custom</code>的组，然后把系统自带的<code>Swift</code>模板拷贝进去。</p>\n<p>在终端中运行如下命令：</p>\n<pre><code>$ mkdir -p ~/Library/Developer/Xcode/Templates/Custom\n$ cp -R /Applications/Xcode.app/Contents/Developer/Library/Xcode/Templates/File\\ Templates/Source/Swift\\ File.xctemplate ~/Library/Developer/Xcode/Templates/Custom/\n</code></pre><p>拷贝完后，我们可以看到有这几个文件：</p>\n<pre><code>$ cd ~/Library/Developer/Xcode/Templates/Custom/Swift\\ File.xctemplate\n$ ls\nTemplateIcon.png          TemplateIcon@2x.png\nTemplateInfo.plist        ___FILEBASENAME___.swift\n</code></pre><p>打开 <code>___FILEBASENAME___.swift</code>, 代码如下：</p>\n<pre><code>//\n//  ___FILENAME___\n//  ___PROJECTNAME___\n//\n//  Created by ___FULLUSERNAME___ on ___DATE___.\n//___COPYRIGHT___\n//\n\nimport Foundation\n</code></pre><p>这就是我们正在找的模板，把它改成你想要的格式就可以了。</p>\n<p>我们加入<code>MIT</code>协议声明，如下：</p>\n<pre><code>//  ___FILENAME___\n//  ___PROJECTNAME___\n//\n//  Created by ___FULLUSERNAME___ on ___DATE___.\n//\n//\n//  Copyright (c) ___YEAR___ ___FULLUSERNAME___\n//\n//  Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the &quot;Software&quot;), to deal\n//  in the Software without restriction, including without limitation the rights\n//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n//  copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n//  The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n//  THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n//\n\nimport Foundation\n</code></pre><p>重启Xcode，新建文件 <em>File</em> → <em>New</em> ，单击 <em>Custom</em> ，你可以看到新的模板</p>\n<p><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/xcode_custom_templetes.png\" alt=\"\"></p>\n<p>Enjoy coding!!!</p>\n","excerpt":"","more":"<p>Xcode 拥有一个很好的内置模板，创建文件时会在头部生成一段注释，包含了文件名、创建者、创建时间、版权等信息，但有时候我们需要根据不同的需求自定义一套模板。</p>\n<p>Xcode 的 iOS 代码模板</p>\n<p><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/xcode_ios_source_templetes.png\" alt=\"\"></p>\n<p>空的<code>Swift</code>文件的默认模板是这样的：</p>\n<pre><code>//\n//  FileName.swift\n//  ProjectName\n//\n//  Created by Your Name on 12/29/15\n//  Copyright (c) 2015 Company. All rights reserved.\n//\n\nimport Foundation\n</code></pre><p>在一些开源项目中，我们有时候会看到在源代码头部有一大串长长的<code>MIT</code>协议声明，每个文件都有，当然，那些开源大牛们肯定不会傻傻的每个文件复制粘贴，这么麻烦的事情身为一个程序员肯定是忍不了的，一定有一个一劳永逸的办法，那就是为空的<code>Swift</code>文件创建自定义模板。</p>\n<h3 id=\"创建模板\"><a href=\"#创建模板\" class=\"headerlink\" title=\"创建模板\"></a>创建模板</h3><p>Xcode 会在 <code>~/Library/Developer/Xcode/Templates</code> 寻找自定义模板。</p>\n<p>Xcode会把一个目录当作一个组（group），我们可以在上述目录下创建一个名为<code>Custom</code>的组，然后把系统自带的<code>Swift</code>模板拷贝进去。</p>\n<p>在终端中运行如下命令：</p>\n<pre><code>$ mkdir -p ~/Library/Developer/Xcode/Templates/Custom\n$ cp -R /Applications/Xcode.app/Contents/Developer/Library/Xcode/Templates/File\\ Templates/Source/Swift\\ File.xctemplate ~/Library/Developer/Xcode/Templates/Custom/\n</code></pre><p>拷贝完后，我们可以看到有这几个文件：</p>\n<pre><code>$ cd ~/Library/Developer/Xcode/Templates/Custom/Swift\\ File.xctemplate\n$ ls\nTemplateIcon.png          TemplateIcon@2x.png\nTemplateInfo.plist        ___FILEBASENAME___.swift\n</code></pre><p>打开 <code>___FILEBASENAME___.swift</code>, 代码如下：</p>\n<pre><code>//\n//  ___FILENAME___\n//  ___PROJECTNAME___\n//\n//  Created by ___FULLUSERNAME___ on ___DATE___.\n//___COPYRIGHT___\n//\n\nimport Foundation\n</code></pre><p>这就是我们正在找的模板，把它改成你想要的格式就可以了。</p>\n<p>我们加入<code>MIT</code>协议声明，如下：</p>\n<pre><code>//  ___FILENAME___\n//  ___PROJECTNAME___\n//\n//  Created by ___FULLUSERNAME___ on ___DATE___.\n//\n//\n//  Copyright (c) ___YEAR___ ___FULLUSERNAME___\n//\n//  Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the &quot;Software&quot;), to deal\n//  in the Software without restriction, including without limitation the rights\n//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n//  copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n//  The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n//  THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//  THE SOFTWARE.\n//\n\nimport Foundation\n</code></pre><p>重启Xcode，新建文件 <em>File</em> → <em>New</em> ，单击 <em>Custom</em> ，你可以看到新的模板</p>\n<p><img src=\"http://jumpingfrog0-images.oss-cn-shenzhen.aliyuncs.com/xcode_custom_templetes.png\" alt=\"\"></p>\n<p>Enjoy coding!!!</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}